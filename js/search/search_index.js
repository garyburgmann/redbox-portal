var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/injectables/ANDSService.html",[0,1.193,1,3.289]],["body/injectables/ANDSService.html",[0,1.876,1,5.173,2,2.687,3,0.18,4,0.152,5,0.084,6,7.621,7,3.016,8,1.047,9,3.923,10,0.348,11,0.586,12,3.113,13,1.564,14,3.946,15,3.781,16,3.946,17,2.47,18,3.267,19,3.312,20,3.946,21,3.495,22,0.701,23,6.977,24,1.025,25,4.31,26,3.781,27,4.13,28,4.31,29,3.946,30,3.946,31,3.369,32,2.085,33,3.016,34,5.585,35,3.214,36,0.589,37,4.456,38,0.903,39,0.01,40,0.525,41,0.481,42,0.903,43,5.566,44,0.652,45,1.303,46,4.456,47,5.566,48,0.808,49,4.128,50,1.669,51,3.293,52,0.68,53,3.016,54,3.632,55,3.781,56,3.293,57,0.905,58,0.726,59,3.016,60,0.618,61,3.293,62,3.293,63,3.147,64,3.293,65,3.946,66,3.147,67,3.293,68,3.147,69,3.293,70,2.347,71,3.293,72,3.293,73,3.293,74,3.293,75,3.293,76,3.293,77,3.293,78,3.293,79,0.447,80,1.497,81,0.398,82,1.755,83,3.016,84,2.687,85,2.085,86,1.804,87,3.457,88,2.218,89,3.457,90,2.687,91,3.863,92,2.897,93,3.147,94,0.766,95,0.744,96,0.18,97,0.095,98,2.788,99,2.506,100,3.863,101,4.456,102,2.594,103,5.566,104,5.566,105,0.467,106,5.566,107,2.594,108,3.016,109,3.645,110,2.788,111,0.006,112,0.008,113,0.006]],["title/components/ActionButtonComponent.html",[114,0.121,115,0.896]],["body/components/ActionButtonComponent.html",[3,0.144,4,0.121,5,0.067,8,1.026,10,0.458,11,0.506,22,0.606,24,1.028,36,0.578,38,0.788,39,0.01,40,0.526,41,0.47,42,0.823,44,0.638,45,0.83,48,0.797,50,1.633,52,0.736,54,2.314,57,0.887,58,0.762,60,0.851,79,0.392,81,0.318,96,0.221,97,0.116,105,0.506,111,0.005,112,0.007,113,0.005,114,0.2,115,1.481,116,1.186,117,0.971,118,1.283,119,7.327,120,4.445,121,1.832,122,1.217,123,1.669,124,1.56,125,2.249,126,0.983,127,1.515,128,5.78,129,2.863,130,6.835,131,6.835,132,1.406,133,1.46,134,1.725,135,1.573,136,1.573,137,6.025,138,2.817,139,1.46,140,1.46,141,1.46,142,1.533,143,1.656,144,1.656,145,1.351,146,1.351,147,1.178,148,1.387,149,1.381,150,1.195,151,1.023,152,1.195,153,1.077,154,0.83,155,1.195,156,0.983,157,1.195,158,1.119,159,1.195,160,1.195,161,1.195,162,4.445,163,4.445,164,1.817,165,4.445,166,1.077,167,1.46,168,1.095,169,1.106,170,1.31,171,1.125,172,1.077,173,1.077,174,1.077,175,1.106,176,1.423,177,0.946,178,0.997,179,1.106,180,1.05,181,0.997,182,1.106,183,1.023,184,1.106,185,0.946,186,0.898,187,0.543,188,0.612,189,0.612,190,1.106,191,1.05,192,1.023,193,1.077,194,1.46,195,0.946,196,6.835,197,4.445,198,1.106,199,1.077,200,1.023,201,1.106,202,1.106,203,0.997,204,1.106,205,1.709,206,0.922,207,1.817,208,1.441,209,2.624,210,2.514,211,4.445,212,4.445,213,4.445,214,1.659,215,4.445,216,1.659,217,4.445,218,4.445,219,4.445,220,2.63,221,2.317,222,2.911,223,3.296,224,3.086,225,2.409,226,1.125,227,3.911,228,2.761,229,4.445,230,4.445,231,4.445,232,4.445,233,3.911,234,4.445,235,4.445,236,4.445,237,4.445,238,0.686,239,1.283,240,1.155,241,0.971,242,1.069,243,0.971,244,1.725,245,0.852,246,0.922,247,0.922,248,0.946,249,1.493,250,0.898,251,0.971,252,0.971,253,0.852,254,0.971,255,0.852,256,0.852,257,0.922,258,1.617,259,1.316,260,0.922,261,0.971,262,0.922,263,1.146,264,1.178,265,0.852,266,0.898,267,0.971,268,0.898,269,1.25,270,1.601,271,0.922,272,1.316,273,0.852,274,0.971,275,0.898,276,0.898,277,0.971,278,0.852,279,0.922,280,0.852,281,0.971,282,0.852,283,0.946,284,0.971,285,0.898,286,0.898,287,0.971,288,0.898,289,1.316,290,0.971,291,0.922,292,0.971,293,0.898,294,0.971,295,0.898,296,0.946,297,1.178,298,1.316,299,0.852,300,0.898,301,1.316,302,0.898,303,0.971,304,1.316,305,0.898,306,1.217,307,0.971,308,0.898,309,0.898,310,0.898,311,0.971,312,0.922,313,0.971,314,0.898,315,0.852,316,0.971,317,0.898,318,0.971,319,0.898,320,0.971,321,0.875,322,1.52,323,0.898,324,0.971,325,0.898,326,1.316,327,0.852,328,1.316,329,0.922,330,0.971,331,0.852,332,0.875,333,0.875,334,0.971,335,0.898,336,0.971,337,0.852,338,0.971,339,0.852,340,0.922,341,0.922,342,0.852,343,0.971,344,0.898,345,0.766,346,0.971,347,0.898,348,0.852,349,0.971,350,0.922,351,0.946,352,0.971,353,0.898,354,0.875,355,0.971,356,0.922,357,0.667,358,0.971,359,0.852,360,0.922,361,0.971,362,0.898,363,0.971,364,0.922,365,1.418,366,0.898,367,0.971,368,0.922,369,0.971,370,0.971]],["title/components/AnchorOrButtonComponent.html",[114,0.121,245,0.851]],["body/components/AnchorOrButtonComponent.html",[3,0.089,4,0.142,5,0.041,8,1.237,10,0.417,11,0.356,13,1.164,22,0.427,24,1.072,36,0.543,38,0.628,39,0.01,40,0.512,41,0.442,42,0.717,44,0.625,45,0.513,48,0.748,50,1.517,52,0.518,57,0.758,58,0.694,60,0.916,79,0.356,81,0.196,85,1.269,86,0.89,94,0.378,95,0.367,96,0.269,97,0.143,105,0.73,111,0.003,112,0.005,113,0.003,114,0.23,115,0.555,116,1.021,117,0.6,118,0.904,121,1.807,122,0.858,123,1.646,124,0.585,125,2.754,126,1.314,127,1.117,129,2.921,132,1.418,133,1.258,134,1.646,135,1.453,136,1.453,138,2.245,139,1.029,140,1.029,141,1.029,142,1.496,143,1.258,144,1.415,145,0.952,146,1.164,147,1.199,148,1.194,149,1.049,150,0.738,151,1.194,152,0.738,153,1.029,154,0.969,155,0.738,156,0.953,157,0.738,158,0.986,159,1.251,160,0.738,161,0.738,164,1.122,166,1.029,167,1.258,168,1.061,169,0.683,170,1.279,171,1.246,172,1.029,173,1.029,174,0.666,175,0.683,176,1.379,177,0.904,178,0.616,179,0.683,180,1.003,181,0.952,182,0.683,183,1.453,184,0.683,185,1.421,186,1.049,187,0.634,188,0.714,189,0.714,190,0.683,191,1.003,192,1.194,193,1.53,194,1.53,195,0.904,198,0.683,199,1.029,200,1.194,201,0.683,202,0.683,203,1.309,204,0.683,206,0.881,207,2.121,208,0.89,226,1.09,238,0.424,239,0.904,240,0.814,241,0.6,242,1.076,243,0.6,244,1.458,245,1.119,246,1.076,247,0.57,248,0.585,249,1.134,250,0.555,251,0.6,252,0.6,253,0.814,254,0.6,255,0.814,256,0.995,257,0.57,258,1.415,259,0.928,260,0.57,261,0.6,262,0.57,263,0.87,264,1.006,265,0.814,266,0.858,267,0.6,268,0.555,269,0.881,270,1.276,271,0.57,272,0.928,273,0.995,274,0.6,275,0.555,276,0.555,277,0.6,278,0.814,279,0.881,280,0.814,281,0.6,282,0.814,283,0.585,284,0.6,285,0.555,286,0.555,287,0.6,288,0.555,289,0.928,290,0.6,291,0.57,292,0.6,293,0.555,294,0.6,295,0.555,296,0.585,297,1.15,298,0.928,299,0.814,300,0.858,301,0.928,302,0.555,303,0.6,304,0.928,305,0.555,306,0.858,307,0.6,308,0.555,309,0.555,310,0.555,311,0.6,312,0.57,313,0.6,314,0.555,315,0.526,316,0.6,317,0.555,318,0.6,319,0.555,320,0.6,321,0.541,322,1.211,323,0.555,324,0.6,325,0.555,326,0.928,327,0.526,328,0.928,329,0.57,330,0.6,331,0.814,332,1.314,333,1.021,334,0.6,335,0.555,336,0.6,337,0.814,338,0.6,339,0.814,340,1.384,341,0.881,342,0.814,343,0.6,344,0.555,345,0.894,346,0.6,347,0.555,348,0.814,349,0.6,350,0.57,351,0.585,352,0.6,353,0.555,354,0.541,355,0.6,356,0.57,357,0.412,358,0.6,359,0.526,360,0.57,361,0.6,362,0.555,363,0.6,364,0.57,365,1.076,366,0.555,367,0.6,368,0.57,369,0.6,370,0.6,371,1.344,372,1.158,373,2.105,374,1.79,375,3.735,376,2.746,377,2.189,378,2.746,379,2.746,380,1.443,381,0.843,382,0.915,383,0.666,384,1.79,385,1.158,386,1.937,387,2.189,388,2.189,389,1.682,390,2.179,391,2.189,392,2.462,393,1.158,394,1.79,395,1.79,396,1.122,397,1.122,398,0.968,399,0.448,400,1.084,401,0.616,402,1.122,403,2.245,404,1.158,405,2.814,406,1.79,407,1.025,408,1.735,409,1.539,410,0.968,411,1.158,412,1.158,413,1.158,414,1.158,415,1.158,416,1.79,417,1.158,418,0.941,419,1.158,420,1.158,421,1.158,422,1.056,423,1.056,424,1.056,425,0.968,426,1.158,427,1.158,428,1.158,429,1.158,430,1.79,431,1.158,432,1.158,433,1.158,434,1.158,435,2.121,436,1.735,437,1.158,438,1.213,439,2.121,440,1.158,441,2.056,442,0.941,443,2.386,444,1.158,445,1.778,446,2.189,447,1.158,448,1.636,449,1.158,450,1.158,451,1.158,452,1.158,453,1.158,454,1.995,455,1.79,456,1.158,457,1.158,458,1.158,459,1.79,460,1.088,461,1.158,462,1.158,463,1.158,464,1.112,465,1.158,466,1.79,467,1.79,468,1.158,469,1.158,470,1.158,471,1.158,472,1.158,473,1.158,474,1.122,475,1.496,476,1.158,477,1.158,478,1.158,479,1.79,480,1.158,481,1.158,482,1.158,483,1.496,484,1.735,485,1.376,486,2.386,487,2.189,488,1.158,489,1.158,490,1.79,491,1.79,492,1.158,493,2.843,494,1.79,495,1.158,496,1.158,497,1.158,498,1.158,499,2.189,500,1.158,501,1.158,502,1.158,503,1.158,504,1.158,505,1.158,506,0.996,507,0.996,508,1.158,509,1.025,510,1.158,511,1.122,512,1.158,513,1.122,514,1.158,515,1.056,516,1.056,517,1.122,518,1.122,519,0.915,520,1.122,521,2.189,522,1.79,523,1.158,524,0.968,525,0.448,526,0.996,527,1.122,528,0.915,529,1.158,530,1.158,531,0.821,532,1.088,533,1.79,534,1.158,535,1.158,536,1.158,537,1.158,538,1.158,539,1.158,540,1.158,541,2.189,542,1.158,543,1.158,544,1.158,545,1.158,546,1.79,547,1.158,548,1.158,549,1.454,550,1.158,551,1.122,552,1.158,553,1.158,554,1.122,555,1.158,556,1.158,557,1.158,558,1.79,559,1.79,560,0.778,561,1.158,562,1.122,563,1.122,564,1.056,565,1.122,566,1.158,567,1.122,568,1.158,569,1.158,570,1.158,571,1.158,572,1.158,573,1.158,574,1.158,575,1.158,576,1.79,577,1.79,578,1.79,579,1.79,580,1.79,581,1.735,582,1.172,583,1.158,584,1.056,585,1.158,586,1.158,587,0.941,588,1.056,589,1.79,590,1.158,591,1.158,592,1.158,593,2.189,594,1.158,595,1.158,596,1.158,597,1.158,598,1.158,599,1.158,600,1.158,601,1.158,602,1.122,603,1.158,604,1.158,605,1.158,606,1.088,607,1.158,608,1.158,609,1.122,610,1.158,611,1.158,612,0.996,613,1.158,614,1.158,615,1.158,616,1.158,617,1.158,618,1.158,619,1.122,620,0.799,621,1.158,622,1.158,623,1.158,624,1.158,625,1.158,626,0.941]],["title/classes/AngularPage.html",[97,0.075,627,3.903]],["body/classes/AngularPage.html",[3,0.223,4,0.188,5,0.103,10,0.43,22,0.797,36,0.519,39,0.01,48,0.743,79,0.352,96,0.223,97,0.117,105,0.665,111,0.008,112,0.009,113,0.008,176,1.625,240,1.319,627,6.973,628,2.23,629,6.881,630,8.578,631,8.578,632,6.881,633,6.881,634,2.727,635,6.881,636,6.881,637,6.881,638,6.881]],["title/components/AsynchComponent.html",[114,0.121,250,0.896]],["body/components/AsynchComponent.html",[3,0.11,4,0.093,5,0.051,8,0.887,10,0.407,11,0.419,12,2.48,22,0.502,24,1.101,32,1.018,36,0.575,38,0.842,39,0.01,40,0.527,41,0.457,42,0.856,44,0.67,45,0.636,48,0.79,50,1.574,52,0.914,57,0.767,58,0.721,60,0.656,79,0.417,81,0.243,85,1.492,86,1.104,94,0.469,95,0.455,96,0.191,97,0.1,105,0.546,111,0.004,112,0.006,113,0.004,114,0.21,115,0.688,116,0.983,117,0.744,118,1.063,121,1.776,122,1.009,123,1.652,124,0.725,126,0.556,127,1.409,132,1.366,133,1.21,134,1.635,135,1.36,136,1.36,139,1.21,140,1.21,141,1.21,142,1.325,143,1.432,144,1.432,145,1.119,146,1.119,147,1.018,148,1.149,149,0.688,150,0.916,151,0.784,152,0.916,153,0.825,154,0.932,155,0.916,156,0.814,157,0.916,158,0.982,159,0.556,160,0.916,161,0.916,164,2.415,166,0.825,167,1.21,168,0.908,169,0.847,170,1.133,171,1.103,172,0.825,173,0.825,174,0.825,175,0.847,176,1.179,177,0.725,178,0.764,179,0.847,180,0.804,181,0.764,182,0.847,183,0.784,184,0.847,185,0.725,186,0.688,187,0.61,188,0.687,189,0.687,190,0.847,191,0.804,192,0.784,193,0.825,194,1.21,195,0.725,198,0.847,199,0.825,200,1.36,201,0.847,202,0.847,203,0.764,204,0.847,205,1.309,208,1.104,209,2.574,210,1.926,214,1.271,216,1.271,220,2.015,226,0.636,233,4.392,238,0.526,239,1.063,240,0.957,241,0.744,242,1.056,243,0.744,244,1.582,245,0.653,246,0.706,247,0.706,248,0.725,249,1.291,250,1.315,251,1.291,252,0.744,253,0.653,254,0.744,255,0.653,256,0.653,257,0.706,258,1.51,259,1.091,260,0.706,261,0.744,262,0.706,263,1.214,264,1.018,265,0.653,266,1.194,267,0.744,268,0.688,269,1.035,270,1.422,271,0.706,272,1.091,273,0.653,274,0.744,275,0.688,276,0.688,277,0.744,278,0.653,279,0.706,280,0.653,281,0.744,282,0.653,283,0.725,284,0.744,285,0.688,286,0.688,287,0.744,288,0.688,289,1.091,290,0.744,291,0.706,292,0.744,293,0.688,294,0.744,295,0.688,296,0.725,297,1.018,298,1.091,299,0.653,300,0.688,301,1.091,302,0.688,303,0.744,304,1.091,305,0.688,306,1.009,307,0.744,308,0.688,309,0.688,310,0.688,311,0.744,312,0.706,313,0.744,314,0.688,315,0.653,316,0.744,317,0.688,318,0.744,319,0.688,320,0.744,321,0.67,322,1.35,323,0.688,324,0.744,325,0.688,326,1.091,327,0.653,328,1.091,329,0.706,330,0.744,331,0.653,332,0.67,333,0.67,334,0.744,335,0.688,336,0.744,337,0.653,338,0.744,339,0.653,340,0.706,341,0.706,342,0.653,343,0.744,344,0.688,345,0.587,346,0.744,347,0.688,348,0.653,349,0.744,350,0.706,351,0.725,352,0.744,353,0.688,354,0.67,355,0.744,356,0.706,357,0.511,358,0.744,359,0.653,360,0.706,361,0.744,362,0.688,363,0.744,364,0.706,365,1.226,366,0.688,367,0.744,368,0.706,369,0.744,370,0.744,371,1.878,373,1.274,380,0.706,386,2.429,399,0.556,400,1.274,401,0.764,408,2.04,438,1.074,483,1.2,484,2.04,485,1.104,517,1.392,525,0.556,531,1.018,549,2.024,560,1.844,567,2.04,626,1.167,639,3.405,640,4.992,641,4.392,642,2.41,643,4.992,644,4.992,645,5.199,646,4.992,647,4.992,648,4.992,649,4.992,650,6.508,651,4.992,652,2.726,653,4.992,654,4.992,655,3.405,656,3.405,657,4.992,658,3.405,659,7.673,660,4.992,661,3.405,662,4.992,663,3.405,664,3.405,665,4.992,666,3.405,667,5.91,668,3.405,669,3.405,670,3.405,671,2.996,672,4.992,673,1.349,674,1.644,675,1.846,676,1.846,677,2.115,678,3.405,679,3.405,680,2.525,681,5.726,682,3.405,683,6.508,684,3.405,685,4.992,686,3.405,687,3.405,688,3.405,689,3.405,690,3.405,691,3.405,692,3.405,693,3.405,694,3.405,695,3.405,696,4.992,697,3.405,698,5.91,699,3.405,700,3.405,701,1.534,702,3.405,703,3.405,704,3.405,705,3.405,706,4.992,707,3.405,708,3.405,709,4.992,710,3.405,711,3.405,712,4.992,713,3.405,714,3.997,715,3.405,716,4.992,717,3.405,718,3.405,719,3.405,720,4.992,721,3.405,722,3.405,723,4.992,724,3.405,725,2.015,726,3.405,727,4.992,728,3.405,729,3.405,730,3.405,731,4.992,732,3.405,733,2.996,734,3.405,735,3.405,736,3.405,737,2.996,738,3.405,739,3.405,740,3.405,741,3.405,742,2.996,743,3.405,744,3.405,745,3.405,746,3.405,747,3.919,748,2.364,749,3.405,750,2.015,751,3.405,752,3.405,753,3.405,754,3.405,755,3.405,756,6.929,757,3.405,758,3.405,759,2.525,760,3.405,761,3.405,762,3.405,763,3.405,764,3.405,765,3.405,766,3.405,767,3.405,768,3.405,769,3.405,770,3.405,771,4.992,772,3.405,773,3.405,774,3.405,775,3.405,776,3.405,777,3.405,778,5.91,779,3.405,780,3.405,781,5.91,782,3.405,783,5.91,784,5.91,785,4.992,786,5.91,787,5.91,788,3.405,789,3.405,790,4.992,791,3.405,792,3.405,793,3.405,794,3.405,795,3.405,796,3.405,797,5.91,798,5.91,799,2.23,800,5.91,801,3.405,802,3.405,803,4.992,804,3.405,805,3.405,806,3.405,807,3.405,808,3.405,809,3.405,810,4.992,811,4.992,812,4.992,813,4.992,814,4.992,815,4.992,816,4.992,817,4.992,818,4.992,819,4.992,820,3.405,821,3.405,822,4.992,823,4.992,824,4.992,825,4.992,826,4.992,827,3.405,828,3.405]],["title/classes/BaseService.html",[9,1.932,97,0.075]],["body/classes/BaseService.html",[3,0.17,4,0.183,5,0.079,7,2.838,9,2.924,10,0.327,11,0.564,12,3.127,13,1.661,14,4.19,15,3.638,16,3.796,17,2.532,18,3.137,19,3.231,20,4.19,21,3.711,22,0.675,24,1.065,25,4.419,26,3.638,27,4.235,28,4.419,29,3.796,30,3.796,31,3.241,32,2.006,33,2.838,36,0.586,38,0.869,39,0.01,40,0.505,41,0.477,42,0.869,44,0.521,48,0.788,52,0.639,53,3.638,54,4.067,55,4.235,57,0.871,58,0.698,59,2.838,60,0.746,63,3.796,65,3.796,66,3.796,68,3.796,70,2.208,79,0.43,82,1.651,94,0.721,95,0.7,96,0.17,97,0.126,105,0.722,107,2.44,111,0.006,112,0.008,113,0.006,177,1.115,187,0.82,188,0.924,189,0.924,206,1.392,438,0.952,525,0.854,628,1.697,674,2.528,675,2.838,676,3.638,677,3.253,829,8.976,830,4.66,831,4.66,832,4.17,833,5.374,834,7.408,835,7.408,836,5.905,837,3.882,838,4.607,839,4.607,840,4.607,841,4.192,842,3.882,843,4.607,844,5.237,845,5.237,846,4.607,847,5.237,848,5.237,849,5.237,850,5.237,851,5.237,852,5.237,853,5.237,854,5.237,855,4.977,856,5.793,857,4.607,858,3.429,859,4.192,860,5.237,861,5.237,862,3.882,863,4.607,864,6.712,865,2.401,866,5.237,867,6.518,868,6.712,869,5.237,870,5.905,871,5.237,872,3.429,873,6.712,874,4.977,875,5.237,876,5.237,877,5.374,878,3.635,879,4.607,880,5.237,881,6.712,882,5.237,883,5.237,884,5.237,885,5.237,886,5.237,887,5.237,888,5.237]],["title/components/ButtonBarContainerComponent.html",[114,0.121,253,0.851]],["body/components/ButtonBarContainerComponent.html",[3,0.09,4,0.143,5,0.042,8,1.24,10,0.42,11,0.36,13,1.173,22,0.431,24,1.061,36,0.533,38,0.563,39,0.01,40,0.509,41,0.436,42,0.683,44,0.627,45,0.52,48,0.732,50,1.521,52,0.34,57,0.763,58,0.698,60,0.918,79,0.357,81,0.199,85,1.282,86,0.902,94,0.383,95,0.372,96,0.269,97,0.143,105,0.731,111,0.003,112,0.005,113,0.003,114,0.23,115,0.562,116,1.03,117,0.608,118,0.913,121,1.809,122,0.867,123,1.647,124,0.592,125,2.695,126,1.318,127,1.124,129,2.929,132,1.414,133,1.268,134,1.652,135,1.461,136,1.461,138,1.07,139,1.039,140,1.039,141,1.039,142,1.504,143,1.268,144,1.425,145,0.962,146,1.173,147,1.205,148,1.204,149,1.057,150,0.748,151,1.204,152,0.748,153,1.039,154,0.977,155,0.748,156,0.959,157,0.748,158,0.991,159,1.256,160,0.748,161,0.748,166,1.039,167,1.268,168,1.069,169,0.692,170,1.286,171,1.253,172,1.039,173,1.039,174,0.674,175,0.692,176,1.389,177,0.913,178,0.624,179,0.692,180,1.013,181,0.962,182,0.692,183,1.461,184,0.692,185,1.428,186,1.057,187,0.639,188,0.72,189,0.72,190,0.692,191,1.013,192,1.204,193,1.539,194,1.539,195,0.913,198,0.692,199,1.039,200,1.204,201,0.692,202,0.692,203,1.318,204,0.692,206,0.89,207,1.753,208,0.902,226,1.098,238,0.43,239,0.913,240,0.822,241,0.608,242,1.08,243,0.608,244,1.466,245,0.822,246,0.89,247,0.577,248,0.592,249,1.143,250,0.562,251,0.608,252,0.608,253,1.127,254,0.608,255,0.822,256,1.003,257,0.577,258,1.421,259,0.937,260,0.577,261,0.608,262,0.577,263,0.877,264,1.013,265,0.822,266,0.867,267,0.608,268,0.562,269,0.89,270,1.285,271,0.577,272,0.937,273,1.003,274,0.608,275,0.562,276,0.562,277,0.608,278,0.822,279,0.89,280,0.822,281,0.608,282,0.822,283,0.592,284,0.608,285,0.562,286,0.562,287,0.608,288,0.562,289,0.937,290,0.608,291,0.577,292,0.608,293,0.562,294,0.608,295,0.562,296,0.592,297,1.156,298,0.937,299,0.822,300,0.867,301,0.937,302,0.562,303,0.608,304,0.937,305,0.562,306,0.867,307,0.608,308,0.562,309,0.562,310,0.562,311,0.608,312,0.577,313,0.608,314,0.562,315,0.534,316,0.608,317,0.562,318,0.608,319,0.562,320,0.608,321,0.548,322,1.22,323,0.562,324,0.608,325,0.562,326,0.937,327,0.534,328,0.937,329,0.577,330,0.608,331,0.822,332,1.321,333,1.03,334,0.608,335,0.562,336,0.608,337,0.822,338,0.608,339,0.822,340,1.392,341,0.89,342,0.822,343,0.608,344,0.562,345,0.902,346,0.608,347,0.562,348,0.822,349,0.608,350,0.577,351,0.592,352,0.608,353,0.562,354,0.548,355,0.608,356,0.577,357,0.418,358,0.608,359,0.534,360,0.577,361,0.608,362,0.562,363,0.608,364,0.577,365,1.085,366,0.562,367,0.608,368,0.577,369,0.608,370,0.608,371,0.64,372,1.174,373,2.062,374,1.174,377,1.809,380,1.45,381,0.854,382,0.927,383,0.674,384,1.809,385,1.174,386,1.953,387,2.207,388,2.207,389,1.696,390,2.195,391,2.207,392,2.48,393,1.174,394,1.809,395,1.809,396,1.137,397,1.137,398,0.981,399,0.454,400,1.095,401,0.624,402,1.137,403,2.261,404,1.174,405,2.83,406,1.809,407,1.039,408,1.753,409,1.555,410,0.981,411,1.174,412,1.174,413,1.174,414,1.174,415,1.174,416,1.809,417,1.174,418,0.953,419,1.174,420,1.174,421,1.174,422,1.07,423,1.07,424,1.07,425,0.981,426,1.174,427,1.174,428,1.174,429,1.174,430,1.809,431,1.174,432,1.174,433,1.174,434,1.174,435,2.138,436,1.753,437,1.174,438,1.22,439,2.138,440,1.174,441,2.074,442,0.953,443,2.403,444,1.174,445,1.792,446,2.207,447,1.174,448,1.65,449,1.174,450,1.174,451,1.174,452,1.174,453,1.174,454,2.012,455,1.809,456,1.174,457,1.174,458,1.174,459,1.809,460,1.103,461,1.174,462,1.174,463,1.174,464,1.124,465,1.174,466,1.809,467,1.809,468,1.174,469,1.174,470,1.174,471,1.174,472,1.174,473,1.174,474,1.137,475,1.511,476,1.174,477,1.174,478,1.174,479,1.809,480,1.174,481,1.174,482,1.174,483,1.511,484,1.753,485,1.39,486,2.403,487,2.207,488,1.174,489,1.174,490,1.809,491,1.809,492,1.174,493,2.857,494,1.809,495,1.174,496,1.174,497,1.174,498,1.174,499,2.207,500,1.174,501,1.174,502,1.174,503,1.174,504,1.174,505,1.809,506,1.009,507,1.009,508,1.174,509,1.039,510,1.174,511,1.137,512,1.174,513,1.137,514,1.174,515,1.07,516,1.07,517,1.137,518,1.137,519,0.927,520,1.137,521,2.207,522,1.809,523,1.174,524,0.981,525,0.454,526,1.009,527,1.137,528,0.927,529,1.174,530,1.174,531,0.832,532,1.103,533,1.809,534,1.174,535,1.174,536,1.174,537,1.174,538,1.174,539,1.174,540,1.174,541,2.207,542,1.174,543,1.174,544,1.174,545,1.174,546,1.809,547,1.174,548,1.174,549,1.469,550,1.174,551,1.137,552,1.174,553,1.174,554,1.137,555,1.174,556,1.174,557,1.174,558,1.809,559,1.809,560,0.789,561,1.174,562,1.137,563,1.137,564,1.07,565,1.137,566,1.174,567,1.137,568,1.174,569,1.174,570,1.174,571,1.174,572,1.174,573,1.174,574,1.174,575,1.174,576,1.809,577,1.809,578,1.809,579,1.809,580,1.809,581,1.753,582,1.184,583,1.174,584,1.07,585,1.174,586,1.174,587,0.953,588,1.07,589,1.809,590,1.174,591,1.174,592,1.174,593,2.207,594,1.174,595,1.174,596,1.174,597,1.174,598,1.174,599,1.174,600,1.174,601,1.174,602,1.137,603,1.174,604,1.174,605,1.174,606,1.103,607,1.174,608,1.174,609,1.137,610,1.174,611,1.174,612,1.009,613,1.174,614,1.174,615,1.174,616,1.174,617,1.174,618,1.174,619,1.137,620,0.81,621,1.174,622,1.174,623,1.174,624,1.174,625,1.174,626,0.953]],["title/components/CancelButtonComponent.html",[114,0.121,255,0.851]],["body/components/CancelButtonComponent.html",[3,0.09,4,0.142,5,0.042,8,1.239,10,0.419,11,0.358,13,1.169,22,0.429,24,1.065,36,0.537,38,0.56,39,0.01,40,0.509,41,0.439,42,0.681,44,0.626,45,0.516,48,0.731,50,1.519,52,0.338,57,0.761,58,0.696,60,0.917,79,0.357,81,0.198,85,1.276,86,0.896,94,0.381,95,0.37,96,0.269,97,0.143,105,0.73,111,0.003,112,0.005,113,0.003,114,0.231,115,0.559,116,1.026,117,0.604,118,0.909,121,1.808,122,0.863,123,1.646,124,0.589,125,2.869,126,1.316,127,1.121,129,2.925,132,1.419,133,1.263,134,1.65,135,1.457,136,1.457,138,1.064,139,1.035,140,1.035,141,1.035,142,1.501,143,1.263,144,1.42,145,0.957,146,1.169,147,1.202,148,1.2,149,1.053,150,0.744,151,1.2,152,0.744,153,1.035,154,0.973,155,0.744,156,0.956,157,0.744,158,0.989,159,1.254,160,0.744,161,0.744,166,1.035,167,1.263,168,1.066,169,0.688,170,1.283,171,1.25,172,1.035,173,1.035,174,0.67,175,0.688,176,1.384,177,0.909,178,0.62,179,0.688,180,1.008,181,0.957,182,0.688,183,1.457,184,0.688,185,1.425,186,1.053,187,0.637,188,0.718,189,0.718,190,0.688,191,1.008,192,1.2,193,1.535,194,1.535,195,0.909,198,0.688,199,1.035,200,1.2,201,0.688,202,0.688,203,1.314,204,0.688,206,0.885,207,1.745,208,0.896,226,1.094,238,0.427,239,0.909,240,0.818,241,0.604,242,1.078,243,0.604,244,1.462,245,0.818,246,0.885,247,0.574,248,0.589,249,1.139,250,0.559,251,0.604,252,0.604,253,0.818,254,0.604,255,1.124,256,1.214,257,0.574,258,1.418,259,0.933,260,0.574,261,0.604,262,0.574,263,0.874,264,1.01,265,0.818,266,0.863,267,0.604,268,0.559,269,0.885,270,1.281,271,0.574,272,0.933,273,0.999,274,0.604,275,0.559,276,0.559,277,0.604,278,0.818,279,0.885,280,0.818,281,0.604,282,0.818,283,0.589,284,0.604,285,0.559,286,0.559,287,0.604,288,0.559,289,0.933,290,0.604,291,0.574,292,0.604,293,0.559,294,0.604,295,0.559,296,0.589,297,1.153,298,0.933,299,0.818,300,0.863,301,0.933,302,0.559,303,0.604,304,0.933,305,0.559,306,0.863,307,0.604,308,0.559,309,0.559,310,0.559,311,0.604,312,0.574,313,0.604,314,0.559,315,0.53,316,0.604,317,0.559,318,0.604,319,0.559,320,0.604,321,0.545,322,1.216,323,0.559,324,0.604,325,0.559,326,0.933,327,0.53,328,0.933,329,0.574,330,0.604,331,0.818,332,1.317,333,1.026,334,0.604,335,0.559,336,0.604,337,0.818,338,0.604,339,0.818,340,1.388,341,0.885,342,0.818,343,0.604,344,0.559,345,0.898,346,0.604,347,0.559,348,0.818,349,0.604,350,0.574,351,0.589,352,0.604,353,0.559,354,0.545,355,0.604,356,0.574,357,0.415,358,0.604,359,0.53,360,0.574,361,0.604,362,0.559,363,0.604,364,0.574,365,1.081,366,0.559,367,0.604,368,0.574,369,0.604,370,0.604,371,0.982,372,1.167,373,2.093,374,1.167,377,1.8,380,1.447,381,0.849,382,0.922,383,0.67,384,1.8,385,1.167,386,1.946,387,2.199,388,2.199,389,1.689,390,2.188,391,2.199,392,2.671,393,1.167,394,1.8,395,1.8,396,1.13,397,1.13,398,0.975,399,0.451,400,1.09,401,0.62,402,1.13,403,2.254,404,1.167,405,2.823,406,1.8,407,1.033,408,1.745,409,1.548,410,0.975,411,1.167,412,1.167,413,1.167,414,1.167,415,1.167,416,1.8,417,1.167,418,0.948,419,1.167,420,1.167,421,1.167,422,1.064,423,1.064,424,1.064,425,0.975,426,1.167,427,1.167,428,1.167,429,1.167,430,1.8,431,1.167,432,1.167,433,1.167,434,1.167,435,2.13,436,1.745,437,1.167,438,1.217,439,2.13,440,1.167,441,2.066,442,0.948,443,2.395,444,1.167,445,1.786,446,2.199,447,1.167,448,1.644,449,1.167,450,1.167,451,1.167,452,1.167,453,1.167,454,2.004,455,1.8,456,1.167,457,1.167,458,1.167,459,1.8,460,1.096,461,1.167,462,1.167,463,1.167,464,1.118,465,1.167,466,1.8,467,1.8,468,1.167,469,1.167,470,1.167,471,1.167,472,1.167,473,1.167,474,1.13,475,1.504,476,1.167,477,1.167,478,1.167,479,1.8,480,1.167,481,1.167,482,1.167,483,1.504,484,1.745,485,1.383,486,2.395,487,2.199,488,1.167,489,1.167,490,1.8,491,1.8,492,1.167,493,2.851,494,1.8,495,1.167,496,1.167,497,1.167,498,1.167,499,2.199,500,1.167,501,1.167,502,1.167,503,1.167,504,1.167,505,1.167,506,1.003,507,1.003,508,1.167,509,1.033,510,1.167,511,1.13,512,1.167,513,1.13,514,1.167,515,1.064,516,1.064,517,1.13,518,1.13,519,0.922,520,1.13,521,2.199,522,1.8,523,1.167,524,0.975,525,0.697,526,1.003,527,1.13,528,0.922,529,1.167,530,1.167,531,0.827,532,1.096,533,1.8,534,1.167,535,1.167,536,1.167,537,1.167,538,1.167,539,1.167,540,1.167,541,2.199,542,1.167,543,1.167,544,1.167,545,1.167,546,1.8,547,1.167,548,1.167,549,1.462,550,1.167,551,1.13,552,1.167,553,1.167,554,1.745,555,1.167,556,1.167,557,1.167,558,1.8,559,1.8,560,0.784,561,1.167,562,1.13,563,1.13,564,1.064,565,1.13,566,1.167,567,1.13,568,1.167,569,1.167,570,1.167,571,1.167,572,1.167,573,1.167,574,1.167,575,1.167,576,1.8,577,1.8,578,1.8,579,1.8,580,1.8,581,1.745,582,1.178,583,1.167,584,1.064,585,1.167,586,1.167,587,0.948,588,1.064,589,1.8,590,1.167,591,1.167,592,1.167,593,2.199,594,1.167,595,1.167,596,1.167,597,1.167,598,1.167,599,1.167,600,1.167,601,1.167,602,1.13,603,1.167,604,1.167,605,1.167,606,1.096,607,1.167,608,1.167,609,1.13,610,1.167,611,1.167,612,1.003,613,1.167,614,1.167,615,1.167,616,1.167,617,1.167,618,1.167,619,1.13,620,0.805,621,1.167,622,1.167,623,1.167,624,1.167,625,1.167,626,0.948,889,1.44,890,2.766]],["title/injectables/ConfigService.html",[0,1.193,18,1.656]],["body/injectables/ConfigService.html",[0,1.939,2,2.833,3,0.19,4,0.16,5,0.088,7,3.18,10,0.367,11,0.605,12,3.022,17,2.529,18,2.691,19,3.001,22,0.725,24,0.953,26,3.907,27,3.907,32,2.154,33,3.18,36,0.57,38,0.839,39,0.01,40,0.488,41,0.459,42,0.839,48,0.763,52,0.88,53,3.907,54,4.237,55,4.412,57,0.761,58,0.61,59,3.18,60,0.801,70,2.475,79,0.445,80,1.578,81,0.419,82,1.85,94,0.808,95,0.784,96,0.19,97,0.1,98,2.939,105,0.683,110,2.939,111,0.007,112,0.008,113,0.007,187,0.88,188,0.993,189,0.993,438,1.067,525,0.957,674,2.833,675,3.18,676,3.907,677,3.645,830,5.005,831,5.005,838,5.162,839,6.342,841,4.697,855,4.35,856,4.35,857,5.162,858,3.842,859,4.697,865,1.901,867,6.342,874,5.345,877,5.772,878,4.073,879,5.162,891,8.769,892,7.209,893,7.209,894,4.266,895,7.804,896,6.248,897,8.14,898,8.14,899,5.867,900,4.35,901,7.209,902,5.162,903,5.867,904,5.162,905,5.867,906,5.867,907,5.867,908,7.209,909,5.867,910,5.867,911,7.209,912,5.867,913,5.867,914,4.073,915,5.867,916,5.867,917,5.867,918,5.867]],["title/modules/DashboardModule.html",[919,1.478,920,3.289]],["body/modules/DashboardModule.html",[3,0.202,4,0.171,5,0.094,39,0.01,41,0.459,79,0.453,81,0.446,82,1.97,91,5.198,96,0.202,97,0.106,105,0.524,111,0.007,112,0.008,113,0.007,187,0.914,188,1.031,189,1.031,238,0.964,260,1.862,335,1.744,399,1.019,401,1.401,403,3.269,525,1.019,634,2.475,919,2.672,920,6.631,921,2.813,922,2.721,923,3.872,924,3.398,925,3.489,926,3.016,927,5.495,928,5.495,929,5.495,930,5.495,931,3.887,932,3.489,933,2.813,934,2.721,935,6.246,936,3.611,937,3.751,938,4.017,939,2.634,940,4.017,941,4.175,942,4.175,943,6.246,944,6.246,945,5,946,3.129,947,3.251,948,5.995,949,5]],["title/injectables/DashboardService.html",[0,1.193,950,2.905]],["body/injectables/DashboardService.html",[0,1.64,2,2.186,3,0.147,4,0.124,5,0.068,7,2.454,8,0.915,9,3.844,10,0.283,11,0.512,12,3.066,13,1.368,14,3.45,15,3.306,16,3.45,17,2.236,18,3.153,19,3.172,20,3.45,21,3.056,22,0.613,24,1.041,25,3.902,26,3.306,27,3.739,28,3.902,29,3.45,30,3.45,31,2.945,32,1.823,33,2.454,34,4.884,35,2.91,36,0.586,37,3.625,38,0.923,39,0.01,40,0.537,41,0.479,42,0.923,44,0.683,46,3.625,48,0.818,49,4.999,50,1.629,51,2.679,52,0.745,53,2.454,54,3.591,55,3.306,56,2.679,57,1,58,0.801,59,2.454,60,0.82,61,2.679,62,2.679,63,2.561,64,2.679,65,3.45,66,2.561,67,2.679,68,2.561,69,2.679,70,1.909,71,2.679,72,2.679,73,2.679,74,2.679,75,2.679,76,2.679,77,2.679,78,2.679,79,0.432,80,1.217,81,0.324,82,1.428,83,2.454,84,2.186,85,1.823,86,1.467,87,2.812,88,2.007,89,5.247,90,2.186,91,3.143,92,2.357,93,2.561,94,0.623,95,0.605,96,0.147,97,0.077,98,2.268,99,2.039,100,3.143,101,3.625,102,2.11,105,0.666,107,3.699,108,4.302,109,5.046,111,0.005,112,0.007,113,0.005,168,1.5,242,1.203,438,1.443,582,1.684,701,2.747,799,5.199,846,3.983,900,3.357,950,3.995,951,6.763,952,5.367,953,6.1,954,7.382,955,6.1,956,6.1,957,6.1,958,6.1,959,6.1,960,3.983,961,3.005,962,4.528,963,3.983,964,7.353,965,4.528,966,6.169,967,4.528,968,5.115,969,4.528,970,4.528,971,4.528,972,6.899,973,6.069,974,4.528,975,4.528,976,5.115,977,5.523,978,4.528,979,4.528,980,4.884,981,5.532,982,6.1,983,4.528,984,7.382,985,4.528,986,4.528,987,2.09,988,4.528,989,4.528,990,6.1,991,2.679,992,4.528,993,5.523,994,2.601,995,4.528,996,4.528,997,4.528,998,6.1,999,4.528,1000,4.528,1001,4.528,1002,4.528,1003,4.528,1004,4.528,1005,4.528,1006,4.528,1007,4.528,1008,4.528,1009,4.528,1010,4.528,1011,4.528,1012,4.528,1013,3.983,1014,2.812,1015,3.983,1016,3.983,1017,4.528,1018,4.528,1019,4.528,1020,4.528,1021,4.528,1022,1.909,1023,3.983,1024,4.528,1025,4.528,1026,4.528,1027,2.812]],["title/components/DateTimeComponent.html",[114,0.121,265,0.851]],["body/components/DateTimeComponent.html",[3,0.088,4,0.141,5,0.041,8,1.235,10,0.416,11,0.354,13,1.156,22,0.424,24,1.067,36,0.546,38,0.554,39,0.01,40,0.507,41,0.441,42,0.676,44,0.624,45,0.508,48,0.746,50,1.514,52,0.514,57,0.754,58,0.721,60,0.914,79,0.354,81,0.194,85,1.259,86,0.881,94,0.374,95,0.364,96,0.268,97,0.143,105,0.729,111,0.003,112,0.005,113,0.003,114,0.231,115,0.549,116,1.015,117,0.594,118,0.897,121,1.805,122,0.851,123,1.645,124,0.579,125,2.674,126,1.312,127,1.112,129,2.915,132,1.423,133,1.25,134,1.642,135,1.446,136,1.446,138,1.046,139,1.021,140,1.021,141,1.021,142,1.606,143,1.25,144,1.408,145,0.945,146,1.156,147,1.194,148,1.187,149,1.042,150,0.731,151,1.337,152,0.731,153,1.021,154,0.963,155,0.731,156,0.948,157,0.731,158,0.983,159,1.248,160,0.731,161,0.731,166,1.021,167,1.25,168,1.056,169,0.676,170,1.274,171,1.241,172,1.021,173,1.021,174,0.659,175,0.676,176,1.372,177,0.897,178,0.61,179,0.676,180,0.995,181,0.945,182,0.676,183,1.446,184,0.676,185,1.525,186,1.042,187,0.63,188,0.71,189,0.71,190,0.676,191,0.995,192,1.337,193,1.523,194,1.523,195,0.897,198,0.676,199,1.021,200,1.187,201,0.676,202,0.676,203,1.302,204,0.676,206,0.874,207,1.722,208,0.881,226,1.084,238,0.42,239,0.897,240,0.808,241,0.594,242,1.073,243,0.594,244,1.452,245,0.808,246,0.874,247,0.564,248,0.579,249,1.127,250,0.549,251,0.594,252,0.594,253,0.808,254,0.594,255,0.808,256,0.989,257,0.564,258,1.41,259,0.92,260,0.564,261,0.594,262,0.564,263,0.865,264,1.001,265,1.113,266,1.042,267,0.594,268,0.549,269,0.874,270,1.269,271,0.564,272,0.92,273,0.989,274,0.594,275,0.549,276,0.549,277,0.594,278,0.808,279,0.874,280,0.808,281,0.594,282,0.808,283,0.579,284,0.594,285,0.549,286,0.549,287,0.594,288,0.549,289,0.92,290,0.594,291,0.564,292,0.594,293,0.549,294,0.594,295,0.549,296,0.579,297,1.145,298,0.92,299,0.808,300,0.851,301,0.92,302,0.549,303,0.594,304,0.92,305,0.549,306,0.851,307,0.594,308,0.549,309,0.549,310,0.549,311,0.594,312,0.564,313,0.594,314,0.549,315,0.521,316,0.594,317,0.549,318,0.594,319,0.549,320,0.594,321,0.535,322,1.205,323,0.549,324,0.594,325,0.549,326,0.92,327,0.521,328,0.92,329,0.564,330,0.594,331,0.808,332,1.308,333,1.015,334,0.594,335,0.549,336,0.594,337,0.808,338,0.594,339,0.808,340,1.379,341,0.874,342,0.808,343,0.594,344,0.549,345,0.889,346,0.594,347,0.549,348,0.808,349,0.594,350,0.564,351,0.579,352,0.594,353,0.549,354,0.535,355,0.594,356,0.564,357,0.408,358,0.594,359,0.521,360,0.564,361,0.594,362,0.549,363,0.594,364,0.564,365,1.07,366,0.549,367,0.594,368,0.564,369,0.594,370,0.594,371,1.446,372,1.147,373,2.138,374,1.147,377,1.777,380,1.438,381,0.835,382,0.906,383,0.659,384,1.777,385,1.147,386,1.925,387,2.175,388,2.175,389,1.671,390,2.674,391,2.175,392,2.449,393,1.147,394,1.777,395,1.777,396,1.111,397,1.111,398,0.958,399,0.444,400,1.075,401,0.61,402,1.111,403,2.233,404,1.147,405,2.803,406,1.777,407,1.015,408,1.722,409,1.528,410,0.958,411,1.147,412,1.147,413,1.147,414,1.147,415,1.147,416,1.777,417,1.147,418,0.931,419,1.147,420,1.147,421,1.147,422,1.046,423,1.046,424,1.046,425,0.958,426,1.147,427,1.147,428,1.147,429,1.147,430,1.777,431,1.147,432,1.147,433,1.147,434,1.147,435,2.108,436,1.722,437,1.147,438,1.208,439,2.108,440,1.147,441,2.044,442,0.931,443,2.373,444,1.147,445,2.152,446,2.175,447,1.147,448,1.626,449,1.147,450,1.147,451,1.147,452,1.147,453,1.147,454,1.983,455,1.777,456,1.147,457,1.147,458,1.147,459,1.777,460,1.078,461,1.147,462,1.147,463,1.147,464,1.104,465,1.147,466,1.777,467,1.777,468,1.147,469,1.147,470,1.147,471,1.147,472,1.147,473,1.147,474,1.111,475,1.484,476,1.147,477,1.147,478,1.147,479,1.777,480,1.147,481,1.147,482,1.147,483,1.484,484,1.722,485,1.365,486,2.833,487,2.175,488,1.147,489,1.147,490,1.777,491,1.777,492,1.147,493,2.833,494,1.777,495,1.147,496,1.147,497,1.147,498,1.147,499,2.175,500,1.147,501,1.147,502,1.147,503,1.147,504,1.147,505,1.147,506,0.986,507,0.986,508,1.147,509,1.015,510,1.147,511,1.111,512,1.147,513,1.111,514,1.147,515,1.046,516,1.046,517,1.111,518,1.111,519,0.906,520,1.111,521,2.175,522,1.777,523,1.147,524,0.958,525,0.687,526,0.986,527,1.111,528,0.906,529,1.147,530,1.147,531,0.813,532,1.078,533,1.777,534,1.147,535,1.147,536,1.147,537,1.147,538,1.147,539,1.147,540,1.147,541,2.175,542,1.147,543,1.147,544,1.147,545,1.147,546,1.777,547,1.147,548,1.147,549,1.443,550,1.147,551,1.111,552,1.147,553,1.147,554,1.111,555,1.147,556,1.147,557,1.147,558,1.777,559,1.777,560,0.771,561,1.147,562,1.111,563,1.111,564,1.046,565,1.111,566,1.147,567,1.111,568,1.147,569,1.147,570,1.147,571,1.147,572,1.147,573,1.147,574,1.147,575,1.147,576,1.777,577,1.777,578,1.777,579,1.777,580,1.777,581,1.722,582,1.163,583,1.147,584,1.046,585,1.147,586,1.147,587,0.931,588,1.046,589,1.777,590,1.147,591,1.147,592,1.147,593,2.175,594,1.147,595,1.147,596,1.147,597,1.147,598,1.147,599,1.147,600,1.147,601,1.147,602,1.111,603,1.147,604,1.777,605,1.777,606,1.669,607,1.777,608,1.777,609,1.722,610,2.175,611,1.777,612,0.986,613,1.147,614,1.147,615,1.777,616,1.777,617,2.449,618,1.147,619,1.111,620,0.791,621,1.147,622,1.147,623,1.147,624,1.147,625,1.147,626,0.931,1028,2.719,1029,2.719,1030,2.177,1031,2.719,1032,2.719]],["title/components/DmpFieldComponent.html",[114,0.121,268,0.896]],["body/components/DmpFieldComponent.html",[3,0.136,4,0.114,5,0.063,10,0.447,11,0.485,12,1.433,22,0.581,24,0.989,32,1.25,36,0.571,38,0.45,39,0.01,40,0.485,41,0.46,42,0.45,44,0.582,45,0.781,48,0.542,52,0.511,57,0.75,58,0.826,60,0.736,70,2.438,79,0.396,80,1.125,81,0.299,85,1.979,86,1.356,94,0.576,95,0.559,96,0.187,97,0.071,105,0.651,111,0.005,112,0.006,113,0.005,114,0.221,115,0.845,116,1.138,117,1.447,118,1.231,121,0.868,122,1.168,123,1.666,124,0.891,126,0.943,127,1.172,132,1.44,136,1.725,138,2.981,145,1.296,146,1.602,147,1.369,148,1.524,149,1.338,151,1.33,154,1.237,156,1.081,158,0.939,159,1.265,168,1.051,187,0.706,188,0.796,189,0.796,205,1.609,206,1.374,226,1.079,238,0.646,239,1.231,240,1.108,241,0.914,242,1.226,243,0.914,244,1.694,245,0.802,246,0.868,247,0.868,248,0.891,249,1.447,250,0.845,251,0.914,252,0.914,253,0.802,254,0.914,255,0.802,256,0.802,257,0.868,258,1.594,259,1.263,260,0.868,261,0.914,262,0.868,263,1.11,264,1.141,265,0.802,266,0.845,267,0.914,268,1.443,269,1.608,270,1.561,271,0.868,272,1.263,273,0.802,274,0.914,275,0.845,276,0.845,277,0.914,278,0.802,279,0.868,280,0.802,281,0.914,282,0.802,283,0.891,284,0.914,285,0.845,286,0.845,287,0.914,288,0.845,289,1.263,290,0.914,291,0.868,292,0.914,293,0.845,294,0.914,295,0.845,296,0.891,297,1.141,298,1.263,299,0.802,300,0.845,301,1.263,302,0.845,303,0.914,304,1.263,305,0.845,306,1.168,307,0.914,308,0.845,309,0.845,310,0.845,311,0.914,312,0.868,313,0.914,314,0.845,315,0.802,316,0.914,317,0.845,318,0.914,319,0.845,320,0.914,321,0.824,322,1.482,323,0.845,324,0.914,325,0.845,326,1.263,327,0.802,328,1.263,329,0.868,330,0.914,331,0.802,332,0.824,333,0.824,334,0.914,335,0.845,336,0.914,337,0.802,338,0.914,339,0.802,340,0.868,341,0.868,342,0.802,343,0.914,344,0.845,345,0.721,346,0.914,347,0.845,348,0.802,349,0.914,350,0.868,351,0.891,352,0.914,353,0.845,354,1.304,355,0.914,356,0.868,357,0.628,358,0.914,359,0.802,360,0.868,361,0.914,362,0.845,363,0.914,364,0.868,365,1.374,366,0.845,367,0.914,368,0.868,369,0.914,370,0.914,380,1.705,381,1.284,382,2.497,399,0.683,400,1.475,401,0.938,407,1.562,409,1.517,410,2.037,418,1.433,438,0.761,442,1.98,525,0.683,587,1.98,701,1.884,833,4.628,936,2.603,1030,4.628,1033,8.747,1034,3.681,1035,7.124,1036,4.227,1037,5.826,1038,6.284,1039,5.826,1040,5.826,1041,6.284,1042,5.826,1043,3.681,1044,6.82,1045,4.114,1046,4.437,1047,5.085,1048,5.085,1049,3.681,1050,4.184,1051,4.286,1052,3.681,1053,3.681,1054,4.184,1055,4.184,1056,4.184,1057,3.681,1058,4.184,1059,4.184,1060,5.085,1061,4.184,1062,5.302,1063,5.302,1064,4.013,1065,5.085,1066,5.085,1067,4.184,1068,6.284,1069,4.286,1070,3.681,1071,4.184,1072,3.681,1073,4.184,1074,3.591,1075,3.681,1076,4.184,1077,3.681,1078,5.826,1079,4.628,1080,3.681,1081,3.681,1082,3.681,1083,3.681,1084,3.681,1085,3.785,1086,4.184,1087,1.823,1088,4.184,1089,4.184,1090,3.681,1091,3.681,1092,3.681,1093,3.681,1094,3.681,1095,5.78,1096,3.35,1097,3.35,1098,3.681,1099,2.74,1100,2.74,1101,3.35,1102,3.681,1103,3.35,1104,3.681,1105,3.681,1106,3.681,1107,4.184,1108,4.184,1109,4.184,1110,4.184,1111,4.184,1112,4.184,1113,3.681,1114,4.184,1115,4.184,1116,3.681,1117,3.681,1118,3.681,1119,3.681,1120,3.681,1121,3.681,1122,3.681,1123,4.628,1124,3.681,1125,3.681,1126,3.681,1127,3.681,1128,3.681,1129,3.681,1130,4.184,1131,3.102,1132,4.184,1133,4.184,1134,4.184,1135,4.184,1136,3.681,1137,1.823,1138,3.35,1139,2.476,1140,2.366,1141,4.184,1142,4.184,1143,4.184,1144,3.681,1145,3.681]],["title/modules/DmpModule.html",[919,1.478,1146,3.289]],["body/modules/DmpModule.html",[3,0.192,4,0.162,5,0.089,24,0.998,39,0.01,79,0.442,81,0.424,82,1.871,96,0.192,97,0.101,111,0.007,112,0.008,113,0.007,128,4.12,238,0.916,264,1.351,269,1.231,271,1.871,399,0.968,401,1.331,634,2.352,919,1.977,921,2.672,922,2.585,923,3.787,924,3.205,925,3.383,926,2.865,931,3.841,932,3.383,933,2.672,934,2.585,936,3.269,937,3.637,938,3.637,939,2.503,940,3.637,941,3.089,942,3.779,947,3.089,1146,6.514,1147,5.221,1148,5.221,1149,5.221,1150,5.934,1151,5.221,1152,4.872,1153,5.445,1154,5.445,1155,5.445,1156,5.934,1157,4.751,1158,3.886,1159,5.221,1160,4.751,1161,4.751,1162,4.751,1163,5.815,1164,5.221,1165,6.542,1166,6.542,1167,6.215,1168,5.445,1169,5.039,1170,4.751,1171,5.221,1172,6.279,1173,6.279,1174,6.279,1175,4.751,1176,4.751,1177,4.4,1178,4.751,1179,4.751,1180,4.12,1181,4.4,1182,4.751,1183,4.751,1184,4.12,1185,5.382,1186,5.812,1187,4.751,1188,4.751,1189,4.751,1190,4.751,1191,4.4,1192,4.751,1193,3.511,1194,3.686,1195,4.12,1196,4.751,1197,3.686,1198,4.751,1199,5.221,1200,4.751,1201,5.221,1202,5.221,1203,5.221,1204,5.221,1205,5.221,1206,5.221,1207,5.221,1208,5.221,1209,5.221,1210,5.221,1211,5.221,1212,4.4]],["title/components/DropdownFieldComponent.html",[114,0.121,273,0.851]],["body/components/DropdownFieldComponent.html",[3,0.088,4,0.14,5,0.041,8,1.234,10,0.415,11,0.352,13,1.406,22,0.422,24,1.058,36,0.548,38,0.674,39,0.01,40,0.514,41,0.444,42,0.744,44,0.634,45,0.505,48,0.746,50,1.536,52,0.33,57,0.861,58,0.744,60,0.914,79,0.354,81,0.193,85,1.254,86,0.877,94,0.373,95,0.362,96,0.268,97,0.143,105,0.729,111,0.003,112,0.005,113,0.003,114,0.23,115,0.547,116,1.012,117,0.591,118,0.893,121,1.801,122,0.848,123,1.645,124,0.576,125,2.67,126,1.311,127,1.11,129,2.912,132,1.416,133,1.246,134,1.64,135,1.443,136,1.443,138,1.04,139,1.017,140,1.017,141,1.017,142,1.604,143,1.246,144,1.404,145,0.941,146,1.153,147,1.192,148,1.183,149,1.039,150,0.728,151,1.183,152,0.728,153,1.017,154,0.96,155,0.728,156,0.945,157,0.728,158,1.014,159,1.247,160,0.728,161,0.728,166,1.017,167,1.246,168,1.053,169,0.673,170,1.272,171,1.239,172,1.017,173,1.017,174,0.656,175,0.673,176,1.368,177,0.893,178,0.607,179,0.673,180,0.991,181,0.941,182,0.673,183,1.443,184,0.673,185,1.523,186,1.039,187,0.628,188,0.708,189,0.708,190,0.673,191,0.991,192,1.183,193,1.519,194,1.519,195,0.893,198,0.673,199,1.017,200,1.183,201,0.673,202,0.673,203,1.299,204,0.673,206,0.871,207,1.715,208,0.877,226,1.082,238,0.418,239,0.893,240,0.805,241,0.591,242,1.071,243,0.591,244,1.449,245,0.805,246,0.871,247,0.561,248,0.576,249,1.123,250,0.547,251,0.591,252,0.591,253,0.805,254,0.591,255,0.805,256,0.986,257,0.561,258,1.408,259,0.917,260,0.561,261,0.591,262,0.561,263,0.862,264,0.998,265,0.805,266,0.848,267,0.591,268,0.547,269,0.871,270,1.266,271,0.561,272,0.917,273,1.272,274,0.591,275,0.547,276,0.547,277,0.591,278,0.805,279,0.871,280,0.805,281,0.591,282,0.805,283,0.576,284,0.591,285,0.547,286,0.547,287,0.591,288,0.547,289,0.917,290,0.591,291,0.561,292,0.591,293,0.547,294,0.591,295,0.547,296,0.576,297,1.143,298,0.917,299,0.805,300,0.848,301,0.917,302,0.547,303,0.591,304,0.917,305,0.547,306,0.848,307,0.591,308,0.547,309,0.547,310,0.547,311,0.591,312,0.561,313,0.591,314,0.547,315,0.519,316,0.591,317,0.547,318,0.591,319,0.547,320,0.591,321,0.533,322,1.202,323,0.547,324,0.591,325,0.547,326,0.917,327,0.519,328,0.917,329,0.561,330,0.591,331,0.805,332,1.306,333,1.012,334,0.591,335,0.547,336,0.591,337,0.805,338,0.591,339,0.805,340,1.376,341,0.871,342,0.805,343,0.591,344,0.547,345,0.886,346,0.591,347,0.547,348,0.805,349,0.591,350,0.561,351,0.576,352,0.591,353,0.547,354,0.533,355,0.591,356,0.561,357,0.406,358,0.591,359,0.519,360,0.561,361,0.591,362,0.547,363,0.591,364,0.561,365,1.066,366,0.547,367,0.591,368,0.561,369,0.591,370,0.591,371,1.333,372,1.141,373,2.136,374,1.141,377,1.77,380,1.435,381,0.831,382,0.901,383,0.656,384,1.77,385,1.141,386,1.919,387,2.443,388,2.168,389,1.666,390,2.162,391,2.168,392,2.443,393,1.141,394,1.77,395,1.77,396,1.106,397,1.106,398,0.953,399,0.441,400,1.071,401,0.607,402,1.106,403,2.227,404,1.141,405,2.798,406,1.77,407,1.01,408,1.715,409,1.522,410,0.953,411,1.141,412,1.141,413,1.141,414,1.141,415,1.141,416,1.77,417,1.141,418,0.927,419,1.141,420,1.141,421,1.141,422,1.04,423,1.04,424,1.04,425,0.953,426,1.141,427,1.141,428,1.141,429,1.141,430,1.77,431,1.141,432,1.141,433,1.141,434,1.141,435,2.711,436,2.101,437,1.141,438,1.206,439,2.101,440,1.141,441,2.037,442,1.438,443,2.923,444,1.77,445,2.148,446,2.644,447,2.168,448,1.977,449,2.168,450,1.77,451,1.141,452,1.141,453,1.141,454,2.411,455,1.77,456,1.141,457,1.141,458,1.141,459,1.77,460,1.072,461,1.141,462,1.141,463,1.141,464,1.1,465,1.141,466,1.77,467,1.77,468,1.141,469,1.141,470,1.141,471,1.141,472,1.141,473,1.141,474,1.106,475,1.479,476,1.141,477,1.141,478,1.141,479,1.77,480,1.141,481,1.141,482,1.141,483,1.479,484,1.715,485,1.36,486,2.367,487,2.168,488,1.141,489,1.141,490,1.77,491,1.77,492,1.141,493,2.828,494,1.77,495,1.141,496,1.141,497,1.141,498,1.141,499,2.168,500,1.141,501,1.141,502,1.141,503,1.141,504,1.141,505,1.141,506,0.981,507,0.981,508,1.141,509,1.01,510,1.141,511,1.106,512,1.141,513,1.106,514,1.141,515,1.04,516,1.04,517,1.106,518,1.106,519,0.901,520,1.106,521,2.168,522,1.77,523,1.141,524,0.953,525,0.441,526,0.981,527,1.106,528,0.901,529,1.141,530,1.141,531,0.809,532,1.072,533,1.77,534,1.141,535,1.141,536,1.141,537,1.141,538,1.141,539,1.141,540,1.141,541,2.168,542,1.141,543,1.141,544,1.141,545,1.141,546,1.77,547,1.141,548,1.141,549,1.438,550,1.141,551,1.106,552,1.141,553,1.141,554,1.106,555,1.141,556,1.141,557,1.141,558,1.77,559,1.77,560,0.767,561,1.141,562,1.106,563,1.106,564,1.04,565,1.106,566,1.141,567,1.106,568,1.141,569,1.141,570,1.141,571,1.141,572,1.141,573,1.141,574,1.141,575,1.141,576,1.77,577,1.77,578,1.77,579,1.77,580,1.77,581,1.715,582,1.159,583,1.141,584,1.04,585,1.141,586,1.141,587,0.927,588,1.04,589,1.77,590,1.141,591,1.141,592,1.141,593,2.168,594,1.141,595,1.141,596,1.141,597,1.141,598,1.141,599,1.141,600,1.141,601,1.141,602,1.106,603,1.141,604,1.141,605,1.141,606,1.072,607,1.141,608,1.141,609,1.106,610,1.141,611,1.141,612,0.981,613,1.141,614,1.141,615,1.141,616,1.141,617,1.141,618,1.141,619,1.106,620,0.787,621,1.141,622,1.141,623,1.141,624,1.141,625,1.141,626,0.927,1213,4.197,1214,3.36,1215,2.706,1216,2.706,1217,2.706,1218,2.706,1219,2.706,1220,2.706]],["title/injectables/EmailNotificationService.html",[0,1.193,1221,3.289]],["body/injectables/EmailNotificationService.html",[0,1.826,2,2.575,3,0.173,4,0.146,5,0.08,7,2.891,8,1.019,9,3.908,10,0.334,11,0.57,12,3.128,13,1.523,14,3.841,15,4.403,16,3.841,17,2.633,18,3.245,19,3.285,20,3.841,21,3.402,22,0.683,24,1.014,25,4.226,26,3.681,27,4.05,28,4.226,29,3.841,30,3.841,31,3.279,32,2.03,33,2.891,36,0.59,38,0.893,39,0.01,40,0.519,41,0.483,42,0.893,44,0.689,48,0.801,49,4.019,50,1.662,51,3.156,52,0.651,53,2.891,54,3.89,55,3.681,56,3.156,57,0.97,58,0.777,59,2.891,60,0.902,61,3.156,62,3.156,63,3.016,64,3.156,65,3.841,66,3.016,67,3.156,68,3.016,69,3.156,70,2.249,71,3.156,72,3.156,73,3.156,74,3.156,75,3.156,76,3.156,77,3.156,78,3.156,79,0.425,80,1.434,81,0.381,82,1.682,83,2.891,84,2.575,87,3.313,88,2.289,96,0.173,97,0.091,98,2.672,99,2.402,102,2.486,105,0.448,108,2.891,111,0.006,112,0.008,113,0.006,126,1.325,187,0.651,242,0.778,263,1.362,357,1.019,525,0.87,676,4.403,840,4.692,841,5.437,842,3.955,855,3.955,856,5.833,872,3.493,889,2.777,1221,5.036,1222,8.305,1223,3.402,1224,6.792,1225,6.792,1226,5.334,1227,4.692,1228,5.334,1229,5.334,1230,6.792,1231,5.334,1232,5.334,1233,5.334,1234,4.692]],["title/classes/EmbeddableComponent.html",[97,0.075,1235,2.625]],["body/classes/EmbeddableComponent.html",[3,0.113,4,0.095,5,0.052,8,1.131,10,0.437,11,0.426,13,0.781,22,0.51,24,1.053,35,2.141,36,0.557,38,0.752,39,0.01,40,0.457,41,0.45,42,0.785,44,0.664,45,0.948,48,0.76,50,1.494,52,0.62,57,0.947,58,0.819,60,0.919,79,0.395,81,0.363,94,0.48,95,0.466,96,0.236,97,0.128,105,0.7,111,0.004,112,0.006,113,0.004,114,0.18,121,1.716,123,0.923,125,2.235,126,0.828,132,1.305,133,1.23,134,1.808,135,1.378,136,1.378,139,1.23,140,1.23,141,1.594,142,1.475,143,1.594,144,1.451,145,1.138,146,1.475,147,0.6,156,0.568,158,1.035,159,1.285,164,1.424,166,0.844,167,1.23,168,1.37,169,0.866,170,1.148,171,1.118,172,0.844,173,0.844,174,0.844,175,0.866,176,1.199,177,0.742,178,1.138,179,0.866,180,0.823,181,1.138,182,0.866,183,1.168,184,0.866,185,0.742,186,1.026,187,0.62,188,0.699,189,0.699,190,0.866,191,0.823,192,0.802,193,0.844,194,1.23,195,0.742,198,0.866,199,0.844,200,0.802,201,0.866,202,0.866,203,0.781,204,0.866,205,1.34,208,1.129,214,2.235,216,2.235,221,1.34,226,1.363,242,0.508,297,1.205,321,0.686,322,1.242,327,0.973,371,1.777,373,1.296,380,0.723,383,1.23,386,1.3,389,2.132,398,1.228,399,0.568,409,1.263,418,1.193,423,1.34,424,1.34,425,1.228,438,1.517,442,1.739,448,1.099,475,2.318,560,0.987,582,2.08,588,1.34,620,1.014,626,1.193,628,1.129,673,1.381,865,2.366,994,2.775,1087,2.608,1131,2.583,1137,2.608,1139,2.061,1140,3.721,1158,2.281,1197,2.164,1235,2.061,1236,2.789,1237,3.523,1238,3.003,1239,3.003,1240,2.751,1241,3.153,1242,3.003,1243,3.484,1244,2.751,1245,3.484,1246,3.484,1247,3.484,1248,4.584,1249,4.008,1250,2.751,1251,3.64,1252,3.503,1253,4.084,1254,3.719,1255,3,1256,3.484,1257,3.484,1258,2.79,1259,3.484,1260,1.814,1261,3.153,1262,2.418,1263,4.063,1264,2.583,1265,4.308,1266,2.789,1267,2.789,1268,4.063,1269,2.418,1270,2.789,1271,2.789,1272,2.789,1273,2.789,1274,2.789,1275,2.789,1276,2.789,1277,2.789,1278,2.789,1279,2.789,1280,2.789,1281,2.789,1282,2.789,1283,2.789,1284,2.789,1285,2.789,1286,2.789,1287,2.789,1288,3.523,1289,2.789,1290,4.794,1291,2.583,1292,2.789,1293,2.789,1294,2.789,1295,2.789,1296,2.789,1297,4.063,1298,3.763,1299,3.763,1300,2.789,1301,4.063,1302,2.789,1303,2.789,1304,2.789,1305,2.789,1306,2.789,1307,2.789,1308,4.063,1309,4.878,1310,2.789,1311,2.789,1312,2.789,1313,2.789,1314,2.789,1315,2.789,1316,3.8,1317,3.324,1318,4.063,1319,3.324,1320,4.794,1321,4.063,1322,2.789,1323,2.789,1324,2.789,1325,2.789,1326,2.789,1327,5.267,1328,4.063,1329,4.794,1330,4.794,1331,3.117,1332,2.789,1333,2.789,1334,4.063,1335,4.063,1336,4.567,1337,2.789,1338,2.789,1339,2.789,1340,4.063,1341,2.789,1342,2.789,1343,2.789,1344,2.789,1345,5.267,1346,2.789,1347,2.789,1348,2.789,1349,4.063,1350,2.789,1351,2.789,1352,2.789,1353,4.063,1354,2.789,1355,2.789,1356,2.789,1357,2.789,1358,2.789,1359,2.789,1360,2.789,1361,2.871,1362,2.789,1363,2.789,1364,2.789,1365,2.789,1366,2.789,1367,2.789,1368,2.789,1369,2.789,1370,2.789,1371,2.789,1372,2.789,1373,4.063,1374,3.153,1375,2.789,1376,2.789,1377,2.789,1378,2.789,1379,2.789,1380,2.789,1381,2.789,1382,2.789,1383,2.789,1384,2.418,1385,2.789,1386,2.789,1387,2.789,1388,5.267,1389,4.063,1390,4.063,1391,2.789,1392,2.789,1393,2.789,1394,2.789,1395,4.794,1396,2.789,1397,2.789,1398,2.281,1399,2.418,1400,2.789,1401,4.063,1402,4.794,1403,4.063,1404,4.063,1405,2.789,1406,2.789,1407,2.789,1408,2.789,1409,2.418,1410,4.063,1411,2.789,1412,2.789,1413,2.789,1414,2.418,1415,2.789,1416,2.789,1417,2.789,1418,2.789,1419,2.789,1420,2.789,1421,2.789,1422,2.281,1423,4.794,1424,3.245,1425,3.003,1426,3.153,1427,3.003,1428,3.153,1429,4.794,1430,2.789,1431,2.789,1432,4.794,1433,2.061,1434,2.281,1435,2.789,1436,2.789,1437,1.97,1438,1.97,1439,1.97,1440,2.871,1441,4.063,1442,2.789,1443,2.789,1444,2.789,1445,2.789,1446,2.789,1447,2.789,1448,2.789,1449,2.061,1450,4.063,1451,4.063,1452,2.789,1453,2.789,1454,5.267,1455,5.267,1456,5.267,1457,4.794,1458,4.063,1459,3.543,1460,2.789,1461,2.789,1462,4.794,1463,4.063,1464,2.789,1465,2.789,1466,2.789,1467,2.789,1468,2.789,1469,2.789,1470,2.789,1471,2.789,1472,2.789,1473,2.789,1474,2.789,1475,2.789,1476,2.789,1477,2.789,1478,4.063,1479,4.063,1480,2.789,1481,2.789,1482,2.789,1483,4.063,1484,2.789,1485,2.789,1486,2.789,1487,2.789,1488,2.789,1489,2.789,1490,2.789,1491,2.789,1492,2.789,1493,2.789,1494,2.789,1495,4.063,1496,5.844,1497,2.789,1498,2.789,1499,2.789,1500,2.789,1501,2.789]],["title/components/ExportFormComponent.html",[114,0.121,275,0.896]],["body/components/ExportFormComponent.html",[3,0.135,4,0.114,5,0.063,8,0.865,10,0.261,11,0.484,12,1.975,22,0.58,24,0.704,31,2.783,32,1.723,35,3.572,36,0.583,38,0.832,39,0.01,40,0.506,41,0.47,42,0.832,44,0.581,45,0.778,48,0.787,50,1.581,52,0.988,57,0.748,58,0.599,70,2.431,79,0.406,80,1.121,81,0.298,85,1.723,86,1.351,88,1.213,94,0.574,95,0.557,96,0.281,97,0.071,105,0.35,111,0.005,112,0.006,113,0.005,114,0.204,115,0.842,116,1.135,117,0.911,118,1.227,122,1.165,123,1.665,124,0.887,126,0.68,127,1.17,147,0.993,156,0.68,158,1.125,159,0.94,187,0.704,188,0.794,189,0.794,209,3.457,226,0.778,238,0.643,239,1.227,240,1.105,241,0.911,242,1.04,243,0.911,244,1.692,245,0.799,246,0.864,247,0.864,248,0.887,249,1.444,250,0.842,251,0.911,252,0.911,253,0.799,254,0.911,255,0.799,256,0.799,257,0.864,258,1.592,259,1.259,260,0.864,261,0.911,262,0.864,263,1.108,264,1.415,265,0.799,266,0.842,267,0.911,268,0.842,269,1.196,270,1.558,271,0.864,272,1.259,273,0.799,274,0.911,275,1.441,276,0.842,277,0.911,278,0.799,279,0.864,280,0.799,281,0.911,282,0.799,283,0.887,284,0.911,285,0.842,286,0.842,287,0.911,288,0.842,289,1.259,290,0.911,291,0.864,292,0.911,293,0.842,294,0.911,295,0.842,296,0.887,297,1.139,298,1.259,299,0.799,300,0.842,301,1.259,302,0.842,303,0.911,304,1.259,305,0.842,306,1.165,307,0.911,308,0.842,309,0.842,310,0.842,311,0.911,312,0.864,313,0.911,314,0.842,315,0.799,316,0.911,317,0.842,318,0.911,319,0.842,320,0.911,321,0.82,322,1.479,323,0.842,324,0.911,325,0.842,326,1.259,327,0.799,328,1.259,329,0.864,330,0.911,331,0.799,332,0.82,333,0.82,334,0.911,335,0.842,336,0.911,337,0.799,338,0.911,339,0.799,340,0.864,341,0.864,342,0.799,343,0.911,344,0.842,345,0.718,346,0.911,347,0.842,348,0.799,349,0.911,350,0.864,351,0.887,352,0.911,353,0.842,354,0.82,355,0.911,356,0.864,357,0.625,358,0.911,359,0.799,360,0.864,361,0.911,362,0.842,363,0.911,364,0.864,365,1.371,366,0.842,367,0.911,368,0.864,369,0.911,370,0.911,380,0.864,438,1.202,485,1.351,525,0.68,564,2.742,642,2.783,671,3.666,750,2.466,925,2.686,987,1.427,1064,4.588,1087,1.815,1152,3.581,1153,4.588,1154,4.002,1155,4.588,1249,2.888,1459,4.787,1502,8.585,1503,4.167,1504,5.764,1505,5.652,1506,4.615,1507,4.615,1508,5.764,1509,6.609,1510,6.609,1511,6.609,1512,5.814,1513,6.609,1514,6.609,1515,7.486,1516,6.609,1517,6.609,1518,4.274,1519,4.274,1520,4.002,1521,6.274,1522,7.131,1523,5.764,1524,4.9,1525,4.274,1526,4.9,1527,4.002,1528,4.274,1529,4.9,1530,4.588,1531,4.167,1532,4.43,1533,6.609,1534,5.764,1535,5.764,1536,4.167,1537,4.167,1538,5.764,1539,4.167,1540,4.274,1541,3.336,1542,3.09,1543,4.274,1544,3.336,1545,3.336,1546,3.09,1547,3.336,1548,3.09,1549,3.336,1550,2.357,1551,3.336,1552,3.336,1553,3.09,1554,3.336,1555,3.09,1556,4.167,1557,4.167,1558,4.167,1559,4.167,1560,4.167,1561,4.167,1562,4.167,1563,4.167,1564,3.336,1565,3.336,1566,3.336,1567,3.336,1568,3.09,1569,3.09,1570,3.336,1571,4.167,1572,4.167,1573,4.167,1574,4.167,1575,3.09,1576,5.764,1577,3.09,1578,3.666,1579,4.167,1580,3.336,1581,4.167,1582,3.336,1583,4.167,1584,5.764,1585,4.167,1586,4.167,1587,4.167,1588,5.764,1589,4.167,1590,3.09,1591,4.167,1592,4.167,1593,5.764,1594,5.764,1595,4.167,1596,4.167,1597,4.167,1598,4.167,1599,4.167,1600,4.167,1601,6.274,1602,7.131,1603,5.764]],["title/modules/ExportModule.html",[919,1.478,1604,3.289]],["body/modules/ExportModule.html",[3,0.191,4,0.161,5,0.089,24,0.996,39,0.01,79,0.445,81,0.421,82,1.86,96,0.234,97,0.1,111,0.007,112,0.008,113,0.007,128,4.093,170,1.13,238,0.91,264,1.348,275,1.822,390,2.201,399,0.962,401,1.322,634,2.337,919,1.964,921,2.655,922,2.568,923,3.776,924,3.196,925,3.37,926,2.847,931,3.835,932,3.37,933,2.655,934,2.568,936,3.256,937,3.622,938,3.622,939,2.487,940,3.622,941,3.764,942,3.764,947,3.07,1152,4.858,1153,5.429,1154,5.429,1155,5.429,1157,4.721,1158,3.861,1159,5.188,1160,4.721,1161,4.721,1162,4.721,1163,5.799,1164,5.188,1165,6.528,1166,6.528,1167,6.204,1168,5.429,1169,5.02,1170,4.721,1171,5.188,1172,6.261,1173,6.261,1174,6.261,1175,4.721,1176,4.721,1177,4.372,1178,4.721,1179,4.721,1180,4.093,1181,4.372,1182,4.721,1183,4.721,1184,4.093,1185,5.361,1186,5.789,1187,4.721,1188,4.721,1189,4.721,1190,4.721,1191,4.372,1192,4.721,1193,3.489,1194,3.663,1195,4.093,1196,4.721,1197,3.663,1198,4.721,1199,5.188,1200,4.721,1201,5.188,1202,5.188,1203,5.188,1204,5.188,1205,5.188,1206,5.188,1207,5.188,1208,5.188,1209,5.188,1210,5.188,1211,5.188,1212,4.372,1604,6.507,1605,5.188,1606,5.188,1607,5.897,1608,5.897,1609,5.188,1610,5.897,1611,5.789,1612,4.721]],["title/classes/ExternalLookupDataService.html",[97,0.075,1613,3.289]],["body/classes/ExternalLookupDataService.html",[0,1.183,3,0.093,4,0.079,5,0.043,8,1.02,9,1.916,10,0.374,12,0.985,13,0.645,17,0.932,18,2.233,19,3.151,22,0.442,24,1.082,32,1.314,36,0.422,38,0.643,39,0.01,40,0.374,41,0.323,42,0.643,44,0.699,45,1.204,48,0.561,52,0.73,58,0.707,60,0.831,79,0.416,80,0.773,81,0.206,82,0.907,83,1.559,84,1.389,85,0.859,88,1.28,94,0.396,95,0.385,96,0.194,97,0.116,99,1.295,102,1.34,105,0.728,107,1.34,110,1.441,111,0.006,112,0.005,113,0.003,114,0.146,121,0.912,123,0.523,126,0.469,132,0.976,134,0.961,142,0.645,147,0.496,148,0.662,149,0.889,154,0.537,156,0.469,158,1.152,159,1.22,168,0.971,170,0.551,171,0.537,178,0.645,181,0.986,186,0.581,187,0.351,188,0.396,189,0.396,195,0.612,203,0.645,205,1.106,206,0.912,214,1.074,216,1.074,221,2.72,225,4.053,226,1.425,256,1.356,258,0.566,263,1.401,297,0.496,315,1.024,357,0.802,359,0.551,371,1.564,373,1.123,380,1.513,381,0.883,383,0.697,399,0.469,410,1.013,418,0.985,425,1.013,438,1.559,445,1.507,475,1.882,483,1.882,485,1.731,509,1.074,525,0.976,531,1.314,560,0.815,584,1.106,620,1.554,628,0.932,673,1.14,674,1.389,676,3.242,677,1.787,701,1.981,858,1.883,862,2.132,865,2.364,878,3.054,924,1.175,946,1.441,987,2.784,991,1.702,994,1.013,1022,3.591,1036,4.657,1074,1.787,1100,1.883,1137,1.916,1140,1.627,1238,1.702,1239,1.702,1240,2.384,1242,1.702,1244,1.559,1248,2.384,1249,2.204,1250,1.559,1251,1.497,1252,1.441,1253,1.559,1255,1.441,1258,3.004,1260,2.78,1261,4.004,1316,3.114,1317,1.883,1331,2.29,1398,1.883,1422,1.883,1433,1.702,1434,1.883,1532,2.732,1575,2.132,1613,3.96,1614,2.303,1615,5.161,1616,3.87,1617,4.789,1618,2.303,1619,4.276,1620,4.789,1621,5.161,1622,5.161,1623,2.876,1624,2.876,1625,4.276,1626,2.876,1627,6.447,1628,4.789,1629,2.876,1630,4.789,1631,2.876,1632,5.04,1633,2.132,1634,4.153,1635,1.787,1636,2.303,1637,2.132,1638,2.132,1639,2.132,1640,2.303,1641,3.521,1642,3.521,1643,2.303,1644,2.303,1645,2.303,1646,2.303,1647,3.521,1648,4.789,1649,2.303,1650,2.303,1651,4.276,1652,5.663,1653,2.303,1654,2.303,1655,2.303,1656,2.303,1657,2.303,1658,3.521,1659,2.303,1660,2.303,1661,2.303,1662,2.303,1663,1.702,1664,1.787,1665,4.276,1666,2.303,1667,4.276,1668,2.303,1669,5.161,1670,2.303,1671,4.276,1672,2.303,1673,4.276,1674,2.303,1675,3.521,1676,2.303,1677,5.663,1678,2.303,1679,2.303,1680,2.303,1681,2.881,1682,4.789,1683,3.521,1684,2.303,1685,3.521,1686,2.303,1687,2.303,1688,2.303,1689,2.303,1690,3.521,1691,3.521,1692,2.303,1693,3.521,1694,3.521,1695,3.521,1696,3.521,1697,2.303,1698,2.303,1699,1.702,1700,3.521,1701,2.303,1702,3.521,1703,2.303,1704,2.303,1705,5.663,1706,5.161,1707,2.303,1708,2.303,1709,2.303,1710,1.787,1711,2.303,1712,4.153,1713,2.303,1714,2.303,1715,2.303,1716,3.521,1717,2.303,1718,2.303,1719,2.303,1720,2.132,1721,1.787,1722,2.303,1723,2.303,1724,2.303,1725,5.84,1726,2.303,1727,2.303,1728,3.521,1729,2.303,1730,2.132,1731,2.303,1732,2.303,1733,2.303,1734,2.132,1735,2.303,1736,2.303,1737,4.276,1738,4.789,1739,2.303,1740,2.132,1741,2.303,1742,2.303,1743,4.789,1744,2.132,1745,2.303,1746,2.132,1747,2.132,1748,1.997,1749,2.132,1750,2.303,1751,2.303,1752,2.303,1753,2.303,1754,2.303,1755,1.787,1756,3.521,1757,3.261,1758,4.276,1759,2.303,1760,2.303,1761,2.303,1762,4.276,1763,5.442,1764,5.663,1765,6.379,1766,5.161,1767,4.789,1768,3.521,1769,4.276,1770,3.318,1771,5.161,1772,3.716,1773,4.276,1774,4.276,1775,4.276,1776,4.276,1777,2.303,1778,2.303,1779,2.303,1780,5.442,1781,2.132,1782,2.132,1783,2.303,1784,2.303,1785,2.303,1786,3.521,1787,3.521,1788,2.303,1789,2.303,1790,2.303,1791,5.544,1792,3.261,1793,2.303,1794,3.521,1795,1.883,1796,2.132,1797,2.303,1798,2.303,1799,3.521,1800,2.303,1801,2.303,1802,2.303,1803,2.303,1804,2.303,1805,3.521,1806,2.303,1807,2.303,1808,3.521,1809,2.303,1810,3.318,1811,2.303,1812,3.521,1813,3.521,1814,3.521,1815,3.521,1816,3.521,1817,4.789,1818,2.303,1819,3.521,1820,5.161,1821,3.521,1822,3.521,1823,2.303,1824,3.521,1825,3.521,1826,3.521,1827,3.261,1828,2.303,1829,2.303,1830,2.303,1831,2.303,1832,2.303,1833,2.132,1834,2.303,1835,2.303,1836,2.303,1837,2.303,1838,2.303,1839,2.303,1840,2.303,1841,2.303,1842,2.303,1843,2.303,1844,2.303,1845,2.303,1846,2.303,1847,2.303,1848,2.303,1849,2.303,1850,2.303,1851,2.303,1852,2.132,1853,2.303,1854,2.303,1855,2.303,1856,2.303,1857,2.303,1858,2.303,1859,1.883,1860,2.303,1861,2.303,1862,2.303,1863,2.303,1864,2.303,1865,2.303,1866,2.303,1867,2.303,1868,3.521,1869,3.261,1870,2.303,1871,2.303,1872,2.303,1873,2.303,1874,2.303,1875,2.303,1876,2.303,1877,2.303,1878,2.303,1879,2.881,1880,2.303,1881,2.303,1882,2.303,1883,2.303,1884,2.303,1885,2.303,1886,4.276,1887,2.303,1888,2.132,1889,2.303,1890,1.883,1891,2.303,1892,2.303,1893,2.303,1894,4.276,1895,2.303,1896,2.303,1897,2.303,1898,2.303,1899,2.303,1900,2.303,1901,2.303,1902,2.132,1903,2.303,1904,1.787,1905,2.303,1906,2.303,1907,2.132,1908,2.132,1909,1.883,1910,2.303,1911,2.303,1912,3.521,1913,2.303,1914,2.303,1915,2.303,1916,2.303,1917,2.132,1918,2.303,1919,2.303,1920,2.303,1921,2.303,1922,2.303,1923,2.303,1924,2.303]],["title/injectables/FieldControlMetaService.html",[0,1.193,1925,2.625]],["body/injectables/FieldControlMetaService.html",[0,1.646,2,2.198,3,0.147,4,0.124,5,0.068,8,0.919,9,3.846,10,0.285,11,0.514,12,3.089,13,1.373,14,3.463,15,3.318,16,3.463,17,2.242,18,3.184,19,3.176,20,3.463,21,3.067,22,0.616,24,0.971,25,3.912,26,3.318,27,3.749,28,3.912,29,3.463,30,3.463,31,2.956,32,1.83,33,2.467,35,3.483,36,0.583,38,0.9,39,0.01,40,0.533,41,0.475,42,0.9,44,0.599,48,0.8,50,1.631,51,2.694,52,0.748,53,2.467,54,3.187,55,3.318,56,2.694,57,0.898,58,0.719,59,2.467,60,0.768,61,2.694,62,2.694,63,2.574,64,2.694,65,3.463,66,2.574,67,2.694,68,2.574,69,2.694,70,1.92,71,2.694,72,2.694,73,2.694,74,2.694,75,2.694,76,2.694,77,2.694,78,2.694,79,0.436,80,1.224,81,0.325,82,1.436,88,2.153,93,2.574,94,0.627,95,0.609,96,0.147,97,0.126,98,2.28,99,2.05,100,3.16,102,2.121,105,0.71,111,0.005,112,0.007,113,0.005,114,0.124,132,1.129,170,0.873,186,0.92,206,0.944,371,1.87,438,1.345,464,2.128,506,2.883,507,2.799,531,1.36,628,2.242,674,2.198,675,2.467,701,3.115,733,4.005,748,3.16,863,4.005,865,1.475,1036,3.623,1045,4.297,1046,4.596,1123,3.644,1137,3.223,1194,2.828,1262,3.16,1298,3.375,1361,4.671,1399,4.25,1409,3.16,1414,3.16,1634,5.733,1635,2.828,1730,4.539,1748,3.16,1859,5.409,1869,3.375,1925,3.623,1926,4.552,1927,6.123,1928,5.386,1929,6.123,1930,5.386,1931,6.123,1932,6.123,1933,7.399,1934,4.552,1935,5.386,1936,4.552,1937,4.005,1938,6.123,1939,4.552,1940,6.123,1941,5.386,1942,4.552,1943,6.509,1944,3.644,1945,4.552,1946,4.005,1947,4.005,1948,4.552,1949,6.123,1950,4.552,1951,6.123,1952,4.552,1953,4.005,1954,4.005,1955,4.552,1956,4.552,1957,4.552,1958,4.552,1959,4.005,1960,4.25,1961,4.552,1962,4.552,1963,3.644,1964,4.552,1965,3.644,1966,4.552,1967,6.123,1968,4.552,1969,4.552,1970,4.552,1971,4.552,1972,4.552,1973,4.552,1974,6.918,1975,4.552,1976,4.552,1977,4.552,1978,6.123,1979,6.123,1980,2.694,1981,4.552,1982,4.552,1983,4.552,1984,4.552,1985,4.552,1986,4.552,1987,4.552,1988,4.552,1989,4.552,1990,4.552,1991,4.552,1992,6.123,1993,4.552,1994,4.552,1995,4.552,1996,4.552,1997,4.552,1998,7.361,1999,4.552,2000,4.552,2001,4.552,2002,4.552,2003,4.552,2004,4.552,2005,3.644,2006,4.552,2007,4.552,2008,4.552,2009,3.375,2010,4.552,2011,4.005,2012,4.552]],["title/injectables/FieldControlService.html",[0,1.193,2013,3.289]],["body/injectables/FieldControlService.html",[0,1.841,2,2.607,3,0.175,4,0.147,5,0.081,10,0.338,11,0.575,12,2.934,17,1.75,18,3.159,22,0.688,32,2.045,35,3.569,36,0.566,38,0.91,39,0.01,40,0.529,41,0.456,42,0.91,48,0.793,52,0.836,57,0.888,58,0.712,60,0.76,79,0.456,80,1.452,81,0.386,88,2.373,93,3.054,94,0.743,95,0.722,96,0.175,97,0.092,99,2.431,100,3.748,105,0.685,111,0.006,112,0.008,113,0.006,132,1.289,146,1.953,149,1.597,151,1.575,154,1.278,156,1.381,170,1.035,171,1.008,187,0.836,188,0.942,189,0.942,206,1.12,371,2.004,399,0.881,438,0.982,464,1.415,525,0.881,628,2.436,673,2.14,674,2.607,675,2.926,858,3.536,859,4.323,865,2.218,961,3.274,1036,3.195,1045,4.668,1046,4.909,1137,3.552,1258,2.516,1260,2.811,1361,4.786,1634,5.784,1635,3.354,1925,4.676,1928,6.022,1930,6.022,1935,6.022,1937,4.75,1941,6.022,1943,6.952,1944,4.323,1946,4.75,1947,4.75,2013,5.075,2014,5.4,2015,6.845,2016,6.845,2017,7.902,2018,6.845,2019,6.845,2020,6.845,2021,5.4,2022,5.572,2023,6.845,2024,6.845,2025,5.4,2026,5.4,2027,5.4,2028,5.4,2029,5.4,2030,6.845,2031,5.4,2032,6.845,2033,5.4,2034,6.845,2035,5.4,2036,5.4,2037,5.4,2038,3.748,2039,4.003,2040,5.4,2041,5.4,2042,5.4,2043,5.4,2044,5.4,2045,5.4,2046,5.4,2047,5.4,2048,5.4,2049,5.4,2050,5.4,2051,5.4,2052,5.4,2053,5.4,2054,5.4,2055,5.4]],["title/components/GenericGroupComponent.html",[114,0.121,276,0.896]],["body/components/GenericGroupComponent.html",[3,0.117,4,0.099,5,0.054,8,0.918,10,0.463,11,0.438,13,1.502,22,0.525,24,1.008,36,0.574,38,0.763,39,0.01,40,0.548,41,0.479,42,0.795,44,0.647,45,0.676,48,0.766,50,1.633,52,0.637,57,1.013,58,0.812,60,0.789,79,0.313,81,0.259,94,0.498,95,0.484,96,0.198,97,0.145,105,0.304,111,0.004,112,0.006,113,0.004,114,0.22,115,0.732,116,1.318,117,0.791,118,1.111,121,1.764,122,1.055,123,1.657,124,0.771,126,0.998,127,1.083,132,1.347,133,1.265,134,1.551,135,1.408,136,1.408,139,1.265,140,1.265,141,1.623,142,1.71,143,1.483,144,1.483,145,1.17,146,1.372,147,1.457,148,1.201,149,0.732,150,0.973,151,0.833,152,0.973,153,0.877,154,0.676,155,0.973,156,1.244,157,0.973,158,1.006,159,0.851,160,0.973,161,0.973,164,1.479,166,0.877,167,1.265,168,1.113,169,0.9,170,1.173,171,0.974,172,0.877,173,0.877,174,0.877,175,0.9,176,1.232,177,0.771,178,1.17,179,0.9,180,0.855,181,1.17,182,0.9,183,1.88,184,0.9,185,1.718,186,0.732,187,0.747,188,0.843,189,0.843,190,0.9,191,0.855,192,0.833,193,0.877,194,1.623,195,0.771,198,0.9,199,0.877,200,0.833,201,0.9,202,0.9,203,0.812,204,0.9,226,1.604,238,0.559,239,1.111,240,1.001,241,0.791,242,0.977,243,0.791,244,1.616,245,0.694,246,0.751,247,0.751,248,0.771,249,1.337,250,0.732,251,0.791,252,0.791,253,0.694,254,0.791,255,0.694,256,0.694,257,0.751,258,1.536,259,1.14,260,0.751,261,0.791,262,0.751,263,1.026,264,1.054,265,0.694,266,0.732,267,0.791,268,0.732,269,1.082,270,1.463,271,0.751,272,1.14,273,0.694,274,0.791,275,0.732,276,1.606,277,1.705,278,0.694,279,0.751,280,0.694,281,0.791,282,0.694,283,0.771,284,0.791,285,0.732,286,0.732,287,0.791,288,0.732,289,1.14,290,0.791,291,0.751,292,0.791,293,0.732,294,0.791,295,0.732,296,0.771,297,1.436,298,1.14,299,0.694,300,0.732,301,1.14,302,0.732,303,0.791,304,1.14,305,0.732,306,1.055,307,0.791,308,0.732,309,0.732,310,0.732,311,0.791,312,0.751,313,0.791,314,0.732,315,0.694,316,0.791,317,0.732,318,0.791,319,0.732,320,0.791,321,0.713,322,1.534,323,1.353,324,0.791,325,0.732,326,1.14,327,0.694,328,1.14,329,0.751,330,0.791,331,0.694,332,0.713,333,0.713,334,0.791,335,0.732,336,0.791,337,0.694,338,0.791,339,0.694,340,0.751,341,0.751,342,0.694,343,0.791,344,0.732,345,0.624,346,0.791,347,0.732,348,0.694,349,0.791,350,0.751,351,0.771,352,0.791,353,0.732,354,0.713,355,0.791,356,0.751,357,0.543,358,0.791,359,0.694,360,0.751,361,0.791,362,0.732,363,0.791,364,0.751,365,1.269,366,0.732,367,0.791,368,0.751,369,0.791,370,0.791,371,1.201,373,1.812,380,0.751,381,1.111,382,1.206,383,0.877,389,1.983,448,2.112,464,2.083,519,2.776,525,0.591,626,1.788,889,1.885,987,2.096,994,1.276,1022,2.581,1137,3.093,1223,4.093,1235,4.775,1237,3.623,1238,3.088,1239,3.088,1240,3.848,1241,3.242,1242,3.088,1244,1.962,1248,3.63,1249,2.614,1250,1.962,1251,1.885,1252,1.813,1253,1.962,1254,2.249,1255,1.813,1258,1.687,1265,2.371,1269,2.513,1424,2.829,1437,2.047,1438,2.047,1439,2.047,1440,2.047,1879,4.386,1980,3.963,2056,3.185,2057,4.591,2058,4.591,2059,4.178,2060,4.178,2061,4.178,2062,3.869,2063,7.265,2064,5.733,2065,5.384,2066,5.206,2067,6.364,2068,5.384,2069,6.542,2070,7.189,2071,6.994,2072,6.994,2073,7.559,2074,6.364,2075,6.994,2076,5.384,2077,5.384,2078,4.899,2079,2.684,2080,2.684,2081,2.684,2082,2.684,2083,2.684,2084,2.684,2085,2.684,2086,3.62,2087,2.249,2088,3.185]],["title/components/HiddenValueComponent.html",[114,0.121,278,0.851]],["body/components/HiddenValueComponent.html",[3,0.09,4,0.173,5,0.042,8,1.239,10,0.418,11,0.358,13,1.168,22,0.429,24,1.06,36,0.537,38,0.63,39,0.01,40,0.513,41,0.439,42,0.719,44,0.636,45,0.516,48,0.741,50,1.519,52,0.521,57,0.76,58,0.725,60,0.917,79,0.357,81,0.198,85,1.275,86,0.896,94,0.381,95,0.37,96,0.269,97,0.143,105,0.73,111,0.003,112,0.005,113,0.003,114,0.23,115,0.559,116,1.026,117,0.604,118,0.908,121,1.808,122,0.862,123,1.646,124,0.589,125,2.689,126,1.316,127,1.121,129,2.925,132,1.416,133,1.263,134,1.649,135,1.457,136,1.457,138,1.063,139,1.034,140,1.034,141,1.034,142,1.5,143,1.263,144,1.42,145,0.957,146,1.168,147,1.202,148,1.199,149,1.053,150,0.743,151,1.199,152,0.743,153,1.034,154,0.973,155,0.743,156,0.956,157,0.743,158,0.989,159,1.254,160,0.743,161,0.743,166,1.034,167,1.263,168,1.065,169,0.688,170,1.283,171,1.249,172,1.034,173,1.034,174,0.67,175,0.688,176,1.384,177,0.908,178,0.62,179,0.688,180,1.008,181,0.957,182,0.688,183,1.457,184,0.688,185,1.425,186,1.053,187,0.636,188,0.717,189,0.717,190,0.688,191,1.008,192,1.199,193,1.534,194,1.534,195,0.908,198,0.688,199,1.034,200,1.199,201,0.688,202,0.688,203,1.314,204,0.688,206,0.885,207,1.744,208,0.896,226,1.094,238,0.427,239,0.908,240,0.818,241,0.604,242,1.078,243,0.604,244,1.462,245,0.818,246,0.885,247,0.573,248,0.589,249,1.139,250,0.559,251,0.604,252,0.604,253,0.818,254,0.604,255,0.818,256,0.999,257,0.573,258,1.418,259,0.932,260,0.573,261,0.604,262,0.573,263,0.874,264,1.009,265,0.818,266,0.862,267,0.604,268,0.559,269,0.885,270,1.28,271,0.573,272,0.932,273,0.999,274,0.604,275,0.559,276,0.559,277,0.604,278,1.123,279,1.081,280,0.818,281,0.604,282,0.818,283,0.589,284,0.604,285,0.559,286,0.559,287,0.604,288,0.559,289,0.932,290,0.604,291,0.573,292,0.604,293,0.559,294,0.604,295,0.559,296,0.589,297,1.153,298,0.932,299,0.818,300,0.862,301,0.932,302,0.559,303,0.604,304,0.932,305,0.559,306,0.862,307,0.604,308,0.559,309,0.559,310,0.559,311,0.604,312,0.573,313,0.604,314,0.559,315,0.53,316,0.604,317,0.559,318,0.604,319,0.559,320,0.604,321,0.544,322,1.215,323,0.559,324,0.604,325,0.559,326,0.932,327,0.53,328,0.932,329,0.573,330,0.604,331,0.818,332,1.317,333,1.026,334,0.604,335,0.559,336,0.604,337,0.818,338,0.604,339,0.818,340,1.388,341,0.885,342,0.818,343,0.604,344,0.559,345,0.898,346,0.604,347,0.559,348,0.818,349,0.604,350,0.573,351,0.589,352,0.604,353,0.559,354,0.544,355,0.604,356,0.573,357,0.415,358,0.604,359,0.53,360,0.573,361,0.604,362,0.559,363,0.604,364,0.573,365,1.081,366,0.559,367,0.604,368,0.573,369,0.604,370,0.604,371,0.982,372,1.166,373,2.059,374,1.166,377,1.8,380,1.447,381,0.849,382,0.921,383,0.67,384,1.8,385,1.166,386,1.945,387,2.198,388,2.198,389,1.689,390,2.187,391,2.198,392,2.471,393,1.166,394,1.8,395,1.8,396,1.13,397,1.13,398,0.974,399,0.451,400,1.089,401,0.62,402,1.13,403,2.253,404,1.166,405,2.822,406,1.8,407,1.032,408,1.744,409,1.547,410,0.974,411,1.166,412,1.166,413,1.166,414,1.166,415,1.166,416,1.8,417,1.166,418,0.947,419,1.166,420,1.166,421,1.166,422,1.063,423,1.063,424,1.063,425,0.974,426,1.166,427,1.166,428,1.166,429,1.166,430,1.8,431,1.166,432,1.166,433,1.166,434,1.166,435,2.129,436,1.744,437,1.166,438,1.217,439,2.129,440,1.166,441,2.065,442,0.947,443,2.394,444,1.166,445,1.785,446,2.198,447,1.166,448,1.643,449,1.166,450,1.166,451,1.166,452,1.166,453,1.166,454,2.004,455,1.8,456,1.166,457,1.166,458,1.166,459,1.8,460,1.095,461,1.166,462,1.166,463,1.166,464,1.118,465,1.166,466,1.8,467,1.8,468,1.166,469,1.166,470,1.166,471,1.166,472,1.166,473,1.166,474,1.13,475,1.503,476,1.166,477,1.166,478,1.166,479,1.8,480,1.166,481,1.166,482,1.166,483,1.503,484,1.744,485,1.383,486,2.394,487,2.198,488,1.166,489,1.166,490,1.8,491,1.8,492,1.166,493,2.85,494,1.8,495,1.166,496,1.166,497,1.166,498,1.166,499,2.198,500,1.166,501,1.166,502,1.166,503,1.166,504,1.166,505,1.166,506,1.002,507,1.002,508,1.166,509,1.032,510,1.166,511,1.13,512,1.166,513,1.13,514,1.166,515,1.063,516,1.063,517,1.13,518,1.13,519,0.921,520,1.13,521,2.198,522,1.8,523,1.166,524,0.974,525,0.451,526,1.002,527,1.13,528,0.921,529,1.166,530,1.166,531,0.826,532,1.095,533,1.8,534,1.166,535,1.166,536,1.166,537,1.166,538,1.166,539,1.166,540,1.166,541,2.198,542,1.166,543,1.166,544,1.166,545,1.166,546,1.8,547,1.166,548,1.166,549,1.462,550,1.166,551,1.13,552,1.166,553,1.166,554,1.13,555,1.166,556,1.166,557,1.166,558,1.8,559,1.8,560,0.783,561,1.166,562,1.13,563,1.13,564,1.063,565,1.13,566,1.166,567,1.13,568,1.166,569,1.166,570,1.166,571,1.166,572,1.166,573,1.166,574,1.166,575,1.166,576,1.8,577,1.8,578,1.8,579,1.8,580,1.8,581,1.744,582,1.178,583,1.166,584,1.063,585,1.8,586,1.166,587,0.947,588,1.063,589,1.8,590,1.166,591,1.166,592,1.166,593,2.198,594,1.166,595,1.166,596,1.166,597,1.166,598,1.166,599,1.166,600,1.166,601,1.166,602,1.13,603,1.166,604,1.166,605,1.166,606,1.095,607,1.166,608,1.166,609,1.13,610,1.166,611,1.166,612,1.002,613,1.166,614,1.166,615,1.166,616,1.166,617,1.166,618,1.166,619,1.13,620,0.804,621,1.166,622,1.166,623,1.166,624,1.166,625,1.166,626,0.947,2089,4.267,2090,2.764]],["title/components/HtmlRawComponent.html",[114,0.121,280,0.851]],["body/components/HtmlRawComponent.html",[3,0.09,4,0.143,5,0.042,8,1.24,10,0.419,11,0.359,13,1.172,22,0.43,24,1.06,36,0.537,38,0.562,39,0.01,40,0.509,41,0.439,42,0.682,44,0.627,45,0.518,48,0.732,50,1.52,52,0.339,57,0.762,58,0.697,60,0.918,79,0.357,81,0.198,85,1.279,86,0.9,94,0.382,95,0.371,96,0.269,97,0.143,105,0.731,111,0.003,112,0.005,113,0.003,114,0.23,115,0.561,116,1.028,117,0.607,118,0.911,121,1.809,122,0.865,123,1.647,124,0.591,125,2.693,126,1.317,127,1.123,129,2.927,132,1.42,133,1.266,134,1.651,135,1.46,136,1.46,138,1.068,139,1.038,140,1.038,141,1.038,142,1.503,143,1.266,144,1.423,145,0.96,146,1.172,147,1.204,148,1.202,149,1.056,150,0.747,151,1.202,152,0.747,153,1.038,154,0.976,155,0.747,156,0.958,157,0.747,158,0.99,159,1.255,160,0.747,161,0.747,166,1.038,167,1.266,168,1.068,169,0.691,170,1.285,171,1.252,172,1.038,173,1.038,174,0.673,175,0.691,176,1.387,177,0.911,178,0.623,179,0.691,180,1.011,181,0.96,182,0.691,183,1.46,184,0.691,185,1.427,186,1.056,187,0.638,188,0.719,189,0.719,190,0.691,191,1.011,192,1.202,193,1.537,194,1.537,195,0.911,198,0.691,199,1.038,200,1.202,201,0.691,202,0.691,203,1.317,204,0.691,206,0.888,207,1.75,208,0.9,226,1.096,238,0.429,239,0.911,240,0.821,241,0.607,242,1.08,243,0.607,244,1.465,245,0.821,246,0.888,247,0.576,248,0.591,249,1.142,250,0.561,251,0.607,252,0.607,253,0.821,254,0.607,255,0.821,256,1.002,257,0.576,258,1.42,259,0.935,260,0.576,261,0.607,262,0.576,263,0.876,264,1.012,265,0.821,266,0.865,267,0.607,268,0.561,269,0.888,270,1.283,271,0.576,272,0.935,273,1.002,274,0.607,275,0.561,276,0.561,277,0.607,278,0.821,279,0.888,280,1.126,281,0.607,282,0.821,283,0.591,284,0.607,285,0.561,286,0.561,287,0.607,288,0.561,289,0.935,290,0.607,291,0.576,292,0.607,293,0.561,294,0.607,295,0.561,296,0.591,297,1.155,298,0.935,299,0.821,300,0.865,301,0.935,302,0.561,303,0.607,304,0.935,305,0.561,306,0.865,307,0.607,308,0.561,309,0.561,310,0.561,311,0.607,312,0.576,313,0.607,314,0.561,315,0.532,316,0.607,317,0.561,318,0.607,319,0.561,320,0.607,321,0.546,322,1.218,323,0.561,324,0.607,325,0.561,326,0.935,327,0.532,328,0.935,329,0.576,330,0.607,331,0.821,332,1.319,333,1.028,334,0.607,335,0.561,336,0.607,337,0.821,338,0.607,339,0.821,340,1.39,341,0.888,342,0.821,343,0.607,344,0.561,345,0.9,346,0.607,347,0.561,348,0.821,349,0.607,350,0.576,351,0.591,352,0.607,353,0.561,354,0.546,355,0.607,356,0.576,357,0.417,358,0.607,359,0.532,360,0.576,361,0.607,362,0.561,363,0.607,364,0.576,365,1.084,366,0.561,367,0.607,368,0.576,369,0.607,370,0.607,371,0.985,372,1.171,373,2.061,374,1.171,377,1.806,380,1.449,381,0.852,382,0.925,383,0.673,384,1.806,385,1.171,386,1.95,387,2.204,388,2.676,389,1.693,390,2.192,391,2.204,392,2.477,393,1.171,394,1.806,395,1.806,396,1.135,397,1.135,398,0.978,399,0.453,400,1.093,401,0.623,402,1.135,403,2.258,404,1.171,405,2.827,406,1.806,407,1.036,408,1.75,409,1.552,410,0.978,411,1.171,412,1.171,413,1.171,414,1.171,415,1.171,416,1.806,417,1.171,418,0.951,419,1.171,420,1.171,421,1.171,422,1.068,423,1.068,424,1.068,425,0.978,426,1.171,427,1.171,428,1.171,429,1.171,430,1.806,431,1.171,432,1.171,433,1.171,434,1.171,435,2.135,436,1.75,437,1.171,438,1.219,439,2.135,440,1.171,441,2.071,442,0.951,443,2.4,444,1.171,445,1.79,446,2.204,447,1.171,448,1.648,449,1.171,450,1.171,451,1.171,452,1.171,453,1.171,454,2.009,455,1.806,456,1.171,457,1.171,458,1.171,459,1.806,460,1.1,461,1.171,462,1.171,463,1.171,464,1.122,465,1.171,466,1.806,467,1.806,468,1.171,469,1.171,470,1.171,471,1.171,472,1.171,473,1.171,474,1.135,475,1.508,476,1.171,477,1.171,478,1.171,479,1.806,480,1.171,481,1.171,482,1.171,483,1.508,484,1.75,485,1.387,486,2.4,487,2.204,488,1.171,489,1.171,490,1.806,491,1.806,492,1.171,493,2.855,494,1.806,495,1.171,496,1.171,497,1.171,498,1.171,499,2.204,500,1.171,501,1.171,502,1.171,503,1.171,504,1.171,505,1.171,506,1.007,507,1.007,508,1.171,509,1.036,510,1.171,511,1.135,512,1.171,513,1.135,514,1.171,515,1.068,516,1.068,517,1.135,518,1.135,519,0.925,520,1.135,521,2.204,522,1.806,523,1.171,524,0.978,525,0.453,526,1.007,527,1.135,528,0.925,529,1.171,530,1.171,531,0.83,532,1.1,533,1.806,534,1.171,535,1.171,536,1.171,537,1.171,538,1.171,539,1.171,540,1.171,541,2.204,542,1.171,543,1.171,544,1.171,545,1.171,546,1.806,547,1.171,548,1.171,549,1.466,550,1.171,551,1.135,552,1.171,553,1.171,554,1.135,555,1.171,556,1.171,557,1.171,558,1.806,559,1.806,560,0.787,561,1.171,562,1.135,563,1.135,564,1.068,565,1.135,566,1.171,567,1.135,568,1.171,569,1.171,570,1.171,571,1.171,572,1.171,573,1.171,574,1.171,575,1.171,576,1.806,577,1.806,578,1.806,579,1.806,580,1.806,581,1.75,582,1.182,583,1.171,584,1.068,585,1.171,586,1.171,587,0.951,588,1.068,589,1.806,590,1.171,591,1.171,592,1.171,593,2.204,594,1.171,595,1.171,596,1.171,597,1.171,598,1.171,599,1.171,600,1.171,601,1.171,602,1.135,603,1.171,604,1.171,605,1.171,606,1.1,607,1.171,608,1.171,609,1.135,610,1.171,611,1.171,612,1.007,613,1.171,614,1.171,615,1.171,616,1.171,617,1.171,618,1.171,619,1.135,620,0.808,621,1.171,622,1.171,623,1.171,624,1.171,625,1.171,626,0.951,2091,2.776]],["title/components/LinkValueComponent.html",[114,0.121,282,0.851]],["body/components/LinkValueComponent.html",[3,0.09,4,0.142,5,0.042,8,1.239,10,0.419,11,0.359,13,1.17,22,0.43,24,1.06,36,0.537,38,0.561,39,0.01,40,0.509,41,0.435,42,0.681,44,0.627,45,0.517,48,0.741,50,1.52,52,0.338,57,0.761,58,0.726,60,0.917,79,0.357,81,0.198,85,1.277,86,0.898,94,0.381,95,0.37,96,0.269,97,0.143,105,0.731,111,0.003,112,0.005,113,0.003,114,0.23,115,0.56,116,1.027,117,0.605,118,0.91,121,1.809,122,0.864,123,1.646,124,0.59,125,2.691,126,1.317,127,1.122,129,2.974,132,1.413,133,1.265,134,1.65,135,1.459,136,1.459,138,1.065,139,1.036,140,1.036,141,1.036,142,1.502,143,1.265,144,1.422,145,0.959,146,1.17,147,1.203,148,1.201,149,1.054,150,0.745,151,1.201,152,0.745,153,1.036,154,0.974,155,0.745,156,0.957,157,0.745,158,1.022,159,1.254,160,0.745,161,0.745,166,1.036,167,1.265,168,1.067,169,0.689,170,1.284,171,1.251,172,1.036,173,1.036,174,0.672,175,0.689,176,1.385,177,0.91,178,0.621,179,0.689,180,1.009,181,0.959,182,0.689,183,1.459,184,0.689,185,1.426,186,1.054,187,0.637,188,0.718,189,0.718,190,0.689,191,1.009,192,1.201,193,1.536,194,1.536,195,0.91,198,0.689,199,1.036,200,1.201,201,0.689,202,0.689,203,1.315,204,0.689,206,0.887,207,1.747,208,0.898,226,1.095,238,0.428,239,0.91,240,0.82,241,0.605,242,1.079,243,0.605,244,1.463,245,0.82,246,0.887,247,0.575,248,0.59,249,1.14,250,0.56,251,0.605,252,0.605,253,0.82,254,0.605,255,0.82,256,1,257,0.575,258,1.419,259,0.934,260,0.575,261,0.605,262,0.575,263,0.875,264,1.011,265,0.82,266,0.864,267,0.605,268,0.56,269,0.887,270,1.282,271,0.575,272,0.934,273,1,274,0.605,275,0.56,276,0.56,277,0.605,278,0.82,279,0.887,280,0.82,281,0.605,282,1.125,283,0.91,284,0.605,285,0.56,286,0.56,287,0.605,288,0.56,289,0.934,290,0.605,291,0.575,292,0.605,293,0.56,294,0.605,295,0.56,296,0.59,297,1.154,298,0.934,299,0.82,300,0.864,301,0.934,302,0.56,303,0.605,304,0.934,305,0.56,306,0.864,307,0.605,308,0.56,309,0.56,310,0.56,311,0.605,312,0.575,313,0.605,314,0.56,315,0.531,316,0.605,317,0.56,318,0.605,319,0.56,320,0.605,321,0.545,322,1.217,323,0.56,324,0.605,325,0.56,326,0.934,327,0.531,328,0.934,329,0.575,330,0.605,331,0.82,332,1.318,333,1.027,334,0.605,335,0.56,336,0.605,337,0.82,338,0.605,339,0.82,340,1.389,341,0.887,342,0.82,343,0.605,344,0.56,345,0.899,346,0.605,347,0.56,348,0.82,349,0.605,350,0.575,351,0.59,352,0.605,353,0.56,354,0.545,355,0.605,356,0.575,357,0.416,358,0.605,359,0.531,360,0.575,361,0.605,362,0.56,363,0.605,364,0.575,365,1.082,366,0.56,367,0.605,368,0.575,369,0.605,370,0.605,371,0.984,372,1.169,373,2.093,374,1.169,377,1.803,380,1.448,381,0.851,382,0.923,383,0.672,384,1.803,385,1.169,386,1.948,387,2.201,388,2.201,389,1.691,390,2.19,391,2.201,392,2.474,393,1.169,394,1.803,395,1.803,396,1.132,397,1.132,398,0.976,399,0.452,400,1.091,401,0.621,402,1.132,403,2.256,404,1.169,405,2.825,406,1.803,407,1.034,408,1.747,409,1.55,410,0.976,411,1.169,412,1.169,413,1.169,414,1.169,415,1.169,416,1.803,417,1.169,418,0.949,419,1.169,420,1.169,421,1.169,422,1.065,423,1.065,424,1.065,425,0.976,426,1.169,427,1.169,428,1.169,429,1.169,430,1.803,431,1.169,432,1.169,433,1.169,434,1.169,435,2.133,436,1.747,437,1.169,438,1.218,439,2.133,440,1.169,441,2.068,442,0.949,443,2.397,444,1.169,445,1.788,446,2.201,447,1.169,448,1.646,449,1.169,450,1.169,451,1.169,452,1.169,453,1.169,454,2.007,455,1.803,456,1.169,457,1.169,458,1.169,459,1.803,460,1.098,461,1.169,462,1.169,463,1.169,464,1.12,465,1.169,466,1.803,467,1.803,468,1.169,469,1.169,470,1.169,471,1.169,472,1.169,473,1.169,474,1.132,475,1.506,476,1.169,477,1.169,478,1.169,479,1.803,480,1.169,481,1.169,482,1.169,483,1.506,484,1.747,485,1.385,486,2.397,487,2.201,488,1.169,489,1.169,490,1.803,491,1.803,492,1.169,493,2.853,494,1.803,495,1.169,496,1.169,497,1.169,498,1.169,499,2.201,500,1.169,501,1.169,502,1.169,503,1.169,504,1.169,505,1.169,506,1.005,507,1.005,508,1.169,509,1.034,510,1.169,511,1.132,512,1.169,513,1.132,514,1.169,515,1.065,516,1.065,517,1.132,518,1.132,519,0.923,520,1.132,521,2.201,522,1.803,523,1.169,524,0.976,525,0.452,526,1.005,527,1.132,528,0.923,529,1.169,530,1.169,531,0.828,532,1.098,533,1.803,534,1.169,535,1.169,536,1.169,537,1.169,538,1.169,539,1.169,540,1.169,541,2.201,542,1.169,543,1.169,544,1.169,545,1.169,546,1.803,547,1.169,548,1.169,549,1.464,550,1.169,551,1.132,552,1.169,553,1.169,554,1.132,555,1.169,556,1.169,557,1.169,558,1.803,559,1.803,560,0.785,561,1.169,562,1.132,563,1.132,564,1.065,565,1.132,566,1.169,567,1.132,568,1.169,569,1.169,570,1.169,571,1.169,572,1.169,573,1.169,574,1.169,575,1.169,576,1.803,577,1.803,578,1.803,579,1.803,580,1.803,581,1.747,582,1.18,583,2.474,584,1.065,585,1.169,586,1.169,587,0.949,588,1.065,589,1.803,590,1.169,591,1.169,592,1.169,593,2.201,594,1.169,595,1.169,596,1.169,597,1.169,598,1.169,599,1.169,600,1.169,601,1.169,602,1.132,603,1.169,604,1.169,605,1.169,606,1.098,607,1.169,608,1.169,609,1.132,610,1.169,611,1.169,612,1.005,613,1.169,614,1.169,615,1.169,616,1.169,617,1.169,618,1.169,619,1.132,620,0.806,621,1.169,622,1.169,623,1.169,624,1.169,625,1.169,626,0.949,2092,2.771]],["title/classes/LoadableComponent.html",[97,0.075,1505,2.905]],["body/classes/LoadableComponent.html",[3,0.179,4,0.151,5,0.083,10,0.345,11,0.583,22,0.698,24,0.927,31,3.35,32,2.268,35,3.66,36,0.581,38,0.856,39,0.01,40,0.498,41,0.459,42,0.856,44,0.589,48,0.806,52,1.023,57,0.9,58,0.722,70,3.201,79,0.355,88,2.019,93,3.12,94,0.76,95,0.738,96,0.179,97,0.129,105,0.703,111,0.006,112,0.008,113,0.006,135,1.27,158,1.205,185,1.175,187,0.847,188,0.955,189,0.955,191,1.639,226,1.532,242,0.805,400,1.408,401,1.702,438,1.38,513,2.836,525,0.9,602,2.255,628,1.788,799,3.613,874,5.145,1087,3.023,1505,4.544,1518,5.628,1519,5.628,1520,5.269,1524,5.905,1525,5.145,1526,5.905,1527,4.817,1528,5.145,1529,5.905,1530,5.529,1542,5.145,1543,5.905,1546,5.145,1548,5.145,1550,3.924,1553,5.145,1555,4.091,1590,4.091,1998,4.854,2011,6.678,2062,4.091,2093,5.518,2094,6.939,2095,6.939,2096,5.518,2097,5.518,2098,5.518,2099,5.518,2100,5.518,2101,5.518,2102,5.518,2103,5.518,2104,5.518,2105,5.518,2106,5.518,2107,7.965,2108,6.939,2109,5.518,2110,6.678,2111,5.518,2112,5.518,2113,5.518,2114,5.518,2115,5.518,2116,5.518,2117,5.518,2118,4.854,2119,5.518,2120,5.518,2121,5.518,2122,5.518,2123,5.518,2124,5.518,2125,5.518,2126,6.939,2127,5.518,2128,5.518,2129,5.518,2130,5.518,2131,5.518,2132,5.518,2133,5.518,2134,5.518,2135,5.518,2136,5.518]],["title/components/LocalAuthComponent.html",[114,0.121,285,0.896]],["body/components/LocalAuthComponent.html",[0,1.62,3,0.144,4,0.121,5,0.067,8,0.904,10,0.278,11,0.506,12,2.341,22,0.606,24,0.735,31,2.908,32,1.8,35,3.61,36,0.577,38,0.849,39,0.01,40,0.514,41,0.462,42,0.849,44,0.53,45,0.83,48,0.789,50,1.598,52,1.003,57,0.782,58,0.626,70,2.54,79,0.413,80,1.195,81,0.318,88,1.293,92,2.313,96,0.195,97,0.076,105,0.373,111,0.005,112,0.007,113,0.005,114,0.209,115,0.898,116,1.186,117,0.971,118,1.282,122,1.217,123,1.669,124,0.946,126,0.725,127,1.209,147,1.177,154,1.276,156,0.725,158,1.144,159,0.725,164,1.816,171,0.83,187,0.735,188,0.829,189,0.829,208,1.44,226,1.125,238,0.686,239,1.282,240,1.155,241,0.971,242,1.069,243,0.971,244,1.725,245,0.852,246,0.922,247,0.922,248,0.946,249,1.493,250,0.898,251,0.971,252,0.971,253,0.852,254,0.971,255,0.852,256,0.852,257,0.922,258,1.617,259,1.316,260,0.922,261,0.971,262,0.922,263,1.146,264,1.177,265,0.852,266,0.898,267,0.971,268,0.898,269,1.249,270,1.601,271,0.922,272,1.316,273,0.852,274,0.971,275,0.898,276,0.898,277,0.971,278,0.852,279,0.922,280,0.852,281,0.971,282,0.852,283,0.946,284,0.971,285,1.48,286,1.631,287,0.971,288,0.898,289,1.316,290,0.971,291,0.922,292,0.971,293,0.898,294,0.971,295,0.898,296,0.946,297,1.177,298,1.316,299,0.852,300,0.898,301,1.316,302,0.898,303,0.971,304,1.316,305,0.898,306,1.217,307,0.971,308,0.898,309,0.898,310,0.898,311,0.971,312,0.922,313,0.971,314,0.898,315,0.852,316,0.971,317,0.898,318,0.971,319,0.898,320,0.971,321,0.875,322,1.519,323,0.898,324,0.971,325,0.898,326,1.316,327,0.852,328,1.316,329,0.922,330,0.971,331,0.852,332,0.875,333,0.875,334,0.971,335,0.898,336,0.971,337,0.852,338,0.971,339,0.852,340,0.922,341,0.922,342,0.852,343,0.971,344,0.898,345,0.766,346,0.971,347,0.898,348,0.852,349,0.971,350,0.922,351,0.946,352,0.971,353,0.898,354,0.875,355,0.971,356,0.922,357,0.667,358,0.971,359,0.852,360,0.922,361,0.971,362,0.898,363,0.971,364,0.922,365,1.417,366,0.898,367,0.971,368,0.922,369,0.971,370,0.971,399,0.725,485,1.44,525,0.725,634,1.761,642,2.908,673,1.761,939,1.874,1079,3.557,1087,1.935,1152,3.741,1288,3.084,1319,3.944,1459,3.564,1505,5.701,1506,4.822,1507,4.822,1518,4.466,1519,4.466,1520,4.181,1524,5.066,1525,4.466,1526,5.066,1527,4.181,1528,4.466,1529,5.066,1530,4.743,1541,3.557,1542,3.294,1543,4.466,1544,3.557,1545,3.557,1546,3.294,1547,3.557,1548,3.294,1549,3.557,1550,2.513,1551,3.557,1552,3.557,1553,3.294,1554,3.557,1555,3.294,1564,3.557,1565,3.557,1566,3.557,1567,3.557,1568,3.294,1569,3.294,1580,3.557,1582,3.557,1590,3.294,2137,4.443,2138,4.822,2139,5.299,2140,6.023,2141,6.833,2142,7.657,2143,7.325,2144,6.023,2145,4.443,2146,4.55,2147,6.011,2148,5.865,2149,4.043,2150,6.023,2151,6.023,2152,4.443,2153,4.443,2154,4.443,2155,4.443,2156,4.443,2157,3.557,2158,2.513,2159,3.294,2160,4.443,2161,3.909,2162,3.909,2163,3.909,2164,4.443,2165,4.443,2166,3.017,2167,3.406,2168,4.443,2169,7.657,2170,6.023,2171,6.023,2172,6.023,2173,4.443,2174,3.557,2175,4.443,2176,4.443,2177,4.443,2178,4.443,2179,4.443,2180,4.443,2181,4.443,2182,4.443,2183,4.443,2184,6.833,2185,4.443,2186,4.443,2187,4.181,2188,6.023,2189,6.023,2190,6.023]],["title/modules/LocalAuthModule.html",[919,1.478,2191,3.289]],["body/modules/LocalAuthModule.html",[3,0.213,4,0.179,5,0.099,39,0.01,79,0.451,81,0.469,82,2.069,96,0.213,97,0.112,111,0.007,112,0.009,113,0.007,238,1.013,285,1.824,399,1.07,401,1.471,634,2.6,919,2.186,921,2.954,922,2.858,923,3.953,924,3.346,925,3.593,926,3.168,931,3.931,932,3.593,933,2.954,934,2.858,936,3.472,937,3.862,938,3.862,939,2.767,940,3.862,942,4.013,947,3.415,2191,6.618,2192,5.772,2193,5.772,2194,6.561,2195,5.772,2196,6.561,2197,6.561]],["title/classes/LoginResult.html",[97,0.075,2158,2.509]],["body/classes/LoginResult.html",[3,0.214,4,0.18,5,0.099,10,0.413,11,0.65,36,0.555,39,0.01,40,0.484,41,0.465,44,0.707,96,0.274,97,0.144,111,0.007,112,0.009,113,0.007,158,0.937,177,1.407,357,1.324,549,2.263,628,2.141,725,5.011,987,2.813,2158,4.378,2166,3.31,2167,3.737,2198,6.399,2199,3.91,2200,6.399,2201,6.608,2202,6.608,2203,6.608,2204,6.608,2205,3.079,2206,3.737,2207,3.738,2208,4.105,2209,3.91]],["title/components/ManageRolesComponent.html",[114,0.121,288,0.896]],["body/components/ManageRolesComponent.html",[0,1.346,3,0.192,4,0.093,5,0.051,8,0.751,10,0.214,11,0.42,12,1.715,22,0.503,24,0.611,31,2.418,32,1.496,35,3.36,36,0.575,38,0.843,39,0.01,40,0.544,41,0.471,42,0.843,44,0.627,45,0.638,48,0.773,50,1.525,52,0.986,57,1.034,58,0.849,60,0.916,70,2.112,79,0.401,80,0.919,81,0.244,88,1.457,92,1.78,94,0.471,95,0.457,96,0.162,97,0.058,105,0.547,111,0.004,112,0.006,113,0.004,114,0.19,115,0.691,116,0.986,117,0.747,118,1.261,122,1.012,123,1.652,124,1.261,126,0.558,127,1.049,154,0.638,156,0.558,158,0.984,159,0.558,164,1.397,171,0.638,183,1.152,187,0.611,188,0.689,189,0.689,208,1.108,226,1.218,238,0.528,239,1.066,240,0.96,241,0.747,242,1.143,243,0.747,244,1.584,245,0.656,246,0.709,247,0.709,248,0.728,249,1.294,250,0.691,251,0.747,252,0.747,253,0.656,254,0.747,255,0.656,256,1.136,257,0.709,258,1.512,259,1.094,260,0.709,261,0.747,262,0.709,263,0.993,264,1.021,265,0.656,266,0.691,267,0.747,268,0.691,269,1.039,270,1.425,271,0.709,272,1.094,273,0.656,274,0.747,275,0.691,276,0.691,277,0.747,278,0.656,279,0.709,280,0.656,281,0.747,282,0.656,283,0.728,284,0.747,285,0.691,286,0.691,287,0.747,288,1.318,289,1.937,290,0.747,291,0.709,292,0.747,293,0.691,294,0.747,295,0.691,296,0.728,297,1.021,298,1.094,299,0.656,300,0.691,301,1.094,302,0.691,303,0.747,304,1.094,305,0.691,306,1.012,307,0.747,308,0.691,309,0.691,310,0.691,311,0.747,312,0.709,313,0.747,314,0.691,315,0.656,316,0.747,317,0.691,318,0.747,319,0.691,320,0.747,321,0.673,322,1.353,323,0.691,324,0.747,325,0.691,326,1.094,327,0.656,328,1.094,329,0.709,330,0.747,331,0.656,332,1.166,333,0.673,334,0.747,335,0.691,336,0.747,337,0.656,338,0.747,339,0.656,340,0.709,341,0.709,342,0.656,343,0.747,344,0.691,345,0.589,346,0.747,347,0.691,348,0.656,349,0.747,350,0.709,351,0.728,352,0.747,353,0.691,354,0.673,355,0.747,356,0.709,357,0.889,358,0.747,359,0.656,360,0.709,361,0.747,362,0.691,363,0.747,364,0.709,365,1.229,366,0.691,367,0.747,368,0.709,369,0.747,370,0.747,398,1.205,399,0.558,400,1.278,401,1.123,485,1.108,525,0.558,532,1.355,582,0.944,587,1.171,634,1.355,642,2.418,673,1.355,933,2.255,939,1.442,1022,2.112,1087,1.489,1255,2.508,1299,3.712,1459,5.185,1505,5.487,1506,4.009,1507,4.009,1512,5.212,1518,3.712,1519,3.712,1520,3.476,1524,4.392,1525,3.712,1526,4.392,1527,3.476,1528,3.712,1529,4.392,1530,4.112,1541,2.738,1542,2.535,1543,3.712,1544,2.738,1545,2.738,1546,2.535,1547,2.738,1548,2.535,1549,2.738,1550,1.934,1551,2.738,1552,2.738,1553,2.535,1554,2.738,1555,2.535,1564,2.738,1565,2.738,1566,2.738,1567,2.738,1568,2.535,1569,2.535,1580,2.738,1582,2.738,1590,2.535,1681,2.239,1748,2.374,1904,4.051,2146,2.124,2147,5.212,2148,5.22,2149,3.505,2157,2.738,2158,1.934,2159,2.535,2161,3.008,2162,3.008,2163,3.008,2166,3.477,2205,3.379,2206,5.061,2207,3.898,2208,3.68,2209,2.023,2210,3.419,2211,5.007,2212,5.924,2213,5.924,2214,5.924,2215,6.941,2216,5.924,2217,5.924,2218,5.007,2219,4.405,2220,5.737,2221,5.007,2222,5.007,2223,3.419,2224,5.034,2225,5.007,2226,3.419,2227,3.419,2228,3.419,2229,3.419,2230,5.007,2231,3.419,2232,3.419,2233,3.419,2234,3.419,2235,3.419,2236,5.007,2237,3.419,2238,3.419,2239,4.405,2240,3.419,2241,3.419,2242,3.419,2243,3.419,2244,2.535,2245,5.924,2246,5.007,2247,5.007,2248,5.007,2249,3.419,2250,3.419,2251,3.419,2252,3.008,2253,2.738,2254,3.008,2255,3.008,2256,3.419,2257,3.419,2258,3.419,2259,3.419,2260,3.419,2261,3.419,2262,3.419,2263,3.419,2264,3.419,2265,3.419,2266,6.521,2267,3.419,2268,3.419,2269,3.419,2270,3.419,2271,5.924,2272,3.419,2273,5.924,2274,3.419,2275,2.535,2276,5.007,2277,5.007,2278,3.419,2279,3.419,2280,3.419,2281,3.419,2282,5.924,2283,3.419,2284,3.419,2285,3.419,2286,5.924,2287,3.419,2288,5.007,2289,3.419,2290,3.419,2291,5.007,2292,3.419,2293,3.419,2294,3.419,2295,3.419,2296,3.419,2297,5.007,2298,3.419,2299,7.252,2300,3.419,2301,3.419,2302,3.419,2303,3.419,2304,3.419,2305,5.007,2306,3.419,2307,3.419,2308,2.535,2309,3.419,2310,3.419,2311,3.419,2312,3.419,2313,3.419,2314,3.419,2315,3.419,2316,3.419,2317,3.419,2318,3.419,2319,3.419,2320,3.419,2321,3.419,2322,3.419,2323,3.419,2324,3.419,2325,7.252,2326,5.007,2327,5.007,2328,5.007,2329,5.007,2330,5.924,2331,5.007,2332,5.007,2333,5.007,2334,3.419,2335,3.419,2336,2.535,2337,4.818,2338,3.419,2339,3.419,2340,5.007,2341,3.419,2342,3.008,2343,3.419,2344,5.007,2345,5.007,2346,5.007,2347,5.007,2348,3.419]],["title/modules/ManageRolesModule.html",[919,1.478,2349,3.289]],["body/modules/ManageRolesModule.html",[3,0.212,4,0.179,5,0.099,39,0.01,79,0.45,81,0.468,82,2.066,96,0.212,97,0.111,111,0.007,112,0.009,113,0.007,238,1.011,288,1.824,399,1.069,401,1.469,634,2.596,919,2.182,921,2.95,922,2.853,923,3.951,924,3.344,925,3.59,926,3.163,931,3.929,932,3.59,933,2.95,934,2.853,936,3.469,937,3.859,938,3.859,939,2.763,940,3.859,941,4.01,942,4.01,947,3.41,2349,6.616,2350,5.763,2351,5.763,2352,6.551,2353,5.763,2354,6.551,2355,6.551]],["title/modules/ManageUsersModule.html",[919,1.478,2356,3.289]],["body/modules/ManageUsersModule.html",[3,0.211,4,0.178,5,0.098,39,0.01,79,0.453,81,0.466,82,2.054,96,0.211,97,0.111,111,0.007,112,0.009,113,0.007,238,1.006,291,1.871,399,1.063,401,1.461,634,2.582,919,2.17,921,2.934,922,2.838,923,3.942,924,3.445,925,3.578,926,3.145,931,3.925,932,3.578,933,2.934,934,2.838,936,3.457,937,3.846,938,3.846,939,2.748,940,3.846,941,3.997,942,3.997,946,3.263,947,3.391,2356,6.61,2357,5.731,2358,5.731,2359,6.515,2360,5.731,2361,6.515,2362,5.731,2363,6.515,2364,5.731]],["title/components/MapComponent.html",[114,0.121,293,0.896]],["body/components/MapComponent.html",[3,0.097,4,0.082,5,0.045,8,0.821,10,0.382,11,0.38,17,0.969,21,3.787,22,0.455,24,0.991,36,0.553,38,0.588,39,0.01,40,0.512,41,0.445,42,0.656,44,0.587,45,0.558,48,0.734,50,1.54,52,0.668,57,0.851,58,0.682,60,0.766,79,0.387,80,0.804,81,0.214,94,0.411,95,0.4,96,0.177,97,0.111,105,0.602,111,0.003,112,0.005,113,0.003,114,0.206,115,0.604,116,0.891,117,0.653,118,0.964,121,1.743,122,0.915,123,1.642,124,0.636,126,0.739,127,0.968,132,1.346,133,1.098,134,1.613,135,1.509,136,1.258,139,1.098,140,1.098,141,1.098,142,1.47,143,1.325,144,1.325,145,1.016,146,1.016,147,1.051,148,1.042,149,1.105,150,0.804,151,1.042,152,0.804,153,0.724,154,0.846,155,0.804,156,0.739,157,0.804,158,1.016,159,1.257,160,0.804,161,0.804,166,0.724,167,1.098,168,0.823,169,0.743,170,1.048,171,1.021,172,0.724,173,0.724,174,0.724,175,0.743,176,1.07,177,0.636,178,0.67,179,0.743,180,0.706,181,0.67,182,0.743,183,1.65,184,0.743,185,1.164,186,0.915,187,0.553,188,0.411,189,0.411,190,0.743,191,0.706,192,0.688,193,0.724,194,1.789,195,0.636,198,0.743,199,0.724,200,0.688,201,0.743,202,0.743,203,0.67,204,0.743,205,1.149,206,0.62,209,1.302,210,1.69,214,1.116,216,1.116,225,1.62,226,1.224,228,1.857,238,0.461,239,0.964,240,0.868,241,0.653,242,1.103,243,0.653,244,1.508,245,0.573,246,0.62,247,0.62,248,0.636,249,1.195,250,0.604,251,0.653,252,0.653,253,0.573,254,0.653,255,0.573,256,0.573,257,0.62,258,1.517,259,0.99,260,0.62,261,0.653,262,0.62,263,0.917,264,0.942,265,0.573,266,0.604,267,0.653,268,0.604,269,0.939,270,1.333,271,0.62,272,0.99,273,0.573,274,0.653,275,0.604,276,0.604,277,0.653,278,0.573,279,0.62,280,0.573,281,0.653,282,0.573,283,0.636,284,0.653,285,0.604,286,0.604,287,0.653,288,0.604,289,0.99,290,0.653,291,0.62,292,0.653,293,1.394,294,0.653,295,0.604,296,0.636,297,1.235,298,0.99,299,0.573,300,0.604,301,0.99,302,0.604,303,0.653,304,0.99,305,0.604,306,0.915,307,0.653,308,0.604,309,0.604,310,0.604,311,0.653,312,0.62,313,0.653,314,0.604,315,0.573,316,0.653,317,0.604,318,0.653,319,0.604,320,0.653,321,0.588,322,1.266,323,0.604,324,0.653,325,0.604,326,0.99,327,0.573,328,0.99,329,0.62,330,0.653,331,0.573,332,0.588,333,0.588,334,0.653,335,0.604,336,0.653,337,0.573,338,0.653,339,0.573,340,1.431,341,0.62,342,0.573,343,0.653,344,0.604,345,0.515,346,0.653,347,0.604,348,0.573,349,0.653,350,0.62,351,0.636,352,0.653,353,0.604,354,0.588,355,0.653,356,0.62,357,0.449,358,0.653,359,0.573,360,0.62,361,0.653,362,0.604,363,0.653,364,0.62,365,1.134,366,0.604,367,0.653,368,0.62,369,0.653,370,0.653,371,1.588,373,1.156,380,0.62,383,0.724,399,0.488,400,1.557,401,0.67,410,1.053,438,0.823,486,2.493,493,2.82,506,1.084,518,1.851,519,1.509,524,1.596,525,0.892,527,1.851,528,0.996,531,1.823,562,1.221,563,1.221,564,2.103,565,1.221,582,0.825,612,1.084,642,2.187,673,1.184,701,2.463,737,2.629,748,3.144,865,1.468,932,3.056,961,2.658,987,1.024,994,1.053,1051,6.069,1062,3.626,1064,3.144,1074,2.813,1097,5.249,1099,1.957,1139,1.768,1140,2.561,1180,2.075,1193,3.61,1194,3.79,1251,1.556,1252,2.269,1316,2.358,1331,2.358,1433,1.768,1578,2.629,1681,2.966,1699,1.768,1720,2.216,1744,2.216,1795,1.957,1904,3.79,1980,2.68,2149,1.768,2365,2.989,2366,3.358,2367,4.529,2368,2.813,2369,6.9,2370,4.529,2371,4.529,2372,4.529,2373,6.9,2374,4.529,2375,6.102,2376,6.071,2377,6.557,2378,3.626,2379,6.557,2380,4.529,2381,4.529,2382,3.626,2383,3.626,2384,6.102,2385,3.358,2386,6.052,2387,3.626,2388,3.985,2389,4.529,2390,4.529,2391,2.966,2392,4.529,2393,4.529,2394,3.144,2395,3.307,2396,7.56,2397,5.368,2398,5.249,2399,6.102,2400,4.524,2401,6.557,2402,4.529,2403,3.985,2404,4.529,2405,4.378,2406,4.529,2407,5.469,2408,5.469,2409,5.469,2410,5.524,2411,4.529,2412,6.102,2413,4.529,2414,4.529,2415,4.529,2416,4.529,2417,6.102,2418,5.469,2419,6.102,2420,2.989,2421,2.989,2422,2.989,2423,2.989,2424,6.9,2425,2.989,2426,2.393,2427,2.393,2428,2.989,2429,2.989,2430,2.989,2431,2.989,2432,2.989,2433,2.989,2434,2.989,2435,2.989,2436,4.529,2437,4.529,2438,4.529,2439,4.529,2440,4.529,2441,4.529,2442,4.529,2443,2.989,2444,2.989,2445,2.989,2446,2.989,2447,2.989,2448,5.469,2449,2.989,2450,2.989,2451,2.989,2452,2.989,2453,2.989,2454,2.989,2455,2.989,2456,4.529,2457,2.989,2458,2.629,2459,2.989,2460,4.529,2461,2.989,2462,2.989,2463,2.989,2464,2.989,2465,2.989,2466,2.989,2467,2.989,2468,4.529,2469,2.989,2470,2.989,2471,4.529,2472,2.989,2473,2.989,2474,4.529,2475,2.989,2476,2.989,2477,2.989,2478,2.989,2479,4.529,2480,2.989,2481,4.529,2482,4.529,2483,3.985,2484,3.626,2485,2.989,2486,2.989,2487,5.469,2488,2.989,2489,2.989,2490,2.989,2491,4.529,2492,2.989,2493,7.168,2494,2.989,2495,2.989,2496,2.989,2497,2.989,2498,2.989,2499,2.989,2500,2.989,2501,2.989,2502,4.529,2503,4.529,2504,4.529,2505,2.989,2506,2.989,2507,2.989,2508,2.989,2509,4.529,2510,4.529,2511,4.529,2512,2.989,2513,2.989,2514,2.989,2515,2.989,2516,2.989,2517,4.529,2518,2.989,2519,4.529,2520,2.629,2521,2.075,2522,4.529,2523,2.989,2524,2.989,2525,6.557,2526,2.989,2527,4.529,2528,2.989,2529,6.102,2530,6.557,2531,6.557,2532,5.469,2533,2.989,2534,4.529,2535,4.529,2536,4.529,2537,2.989,2538,2.989,2539,4.529,2540,4.529,2541,4.529,2542,2.989,2543,2.989,2544,2.989,2545,2.989,2546,2.989,2547,2.989,2548,2.989,2549,2.989,2550,2.989,2551,2.989,2552,2.989,2553,2.989,2554,2.989,2555,5.469,2556,2.68,2557,6.102,2558,2.989,2559,2.989,2560,1.957,2561,2.989,2562,2.989,2563,2.989,2564,4.529,2565,4.529,2566,5.469,2567,2.989,2568,2.989,2569,2.989,2570,2.989,2571,3.626,2572,2.393,2573,2.216,2574,2.393,2575,2.393,2576,2.393,2577,4.529,2578,2.393,2579,2.989,2580,2.989,2581,2.989,2582,2.989,2583,2.989,2584,4.529,2585,4.529,2586,6.102,2587,4.529,2588,3.985]],["title/components/MarkdownTextAreaComponent.html",[114,0.121,295,0.896]],["body/components/MarkdownTextAreaComponent.html",[3,0.124,4,0.105,5,0.058,8,1.189,10,0.471,11,0.456,13,0.859,22,0.546,24,1.019,36,0.579,38,0.78,39,0.01,40,0.517,41,0.473,42,0.81,44,0.662,45,0.715,48,0.782,50,1.642,52,0.771,57,1.006,58,0.824,60,0.861,79,0.351,81,0.274,94,0.527,95,0.512,96,0.257,97,0.135,105,0.322,111,0.004,112,0.006,113,0.004,114,0.216,115,0.774,116,1.069,117,0.837,118,1.157,121,1.779,122,1.098,123,1.662,124,0.815,126,1.184,127,1.118,129,2.29,132,1.383,133,1.317,134,1.806,135,1.453,136,1.453,139,1.317,140,1.317,141,1.665,142,1.807,143,1.53,144,1.53,145,1.218,146,1.218,147,1.299,148,1.25,149,1.466,150,1.03,151,1.25,152,1.03,153,0.928,154,0.715,155,1.03,156,0.886,157,1.03,158,1.028,159,0.886,160,1.03,161,1.03,164,1.565,166,0.928,167,1.317,168,1.44,169,0.953,170,1.211,171,1.014,172,0.928,173,0.928,174,0.928,175,0.953,176,1.283,177,0.815,178,1.218,179,0.953,180,0.904,181,1.218,182,0.953,183,0.881,184,0.953,185,1.65,186,0.774,187,0.771,188,0.869,189,0.869,190,0.953,191,0.904,192,0.881,193,0.928,194,1.317,195,0.815,198,0.953,199,0.928,200,0.881,201,0.953,202,0.953,203,0.859,204,0.953,206,0.794,214,2.357,216,2.357,221,2.79,238,0.591,239,1.157,240,1.042,241,0.837,242,1.058,243,0.837,244,1.647,245,0.734,246,0.794,247,0.794,248,0.815,249,1.38,250,0.774,251,0.837,252,0.837,253,0.734,254,0.837,255,0.734,256,0.734,257,0.794,258,1.559,259,1.187,260,0.794,261,0.837,262,0.794,263,1.059,264,1.088,265,0.734,266,0.774,267,0.837,268,0.774,269,1.127,270,1.501,271,0.794,272,1.187,273,0.734,274,0.837,275,0.774,276,0.774,277,0.837,278,0.734,279,0.794,280,0.734,281,0.837,282,0.734,283,0.815,284,0.837,285,0.774,286,0.774,287,0.837,288,0.774,289,1.187,290,0.837,291,0.794,292,0.837,293,0.774,294,0.837,295,1.389,296,1.344,297,1.365,298,1.187,299,0.734,300,0.774,301,1.187,302,0.774,303,0.837,304,1.187,305,0.774,306,1.098,307,0.837,308,0.774,309,0.774,310,0.774,311,0.837,312,0.794,313,0.837,314,0.774,315,0.734,316,0.837,317,0.774,318,0.837,319,0.774,320,0.837,321,0.754,322,1.505,323,0.774,324,0.837,325,1.276,326,1.187,327,0.734,328,1.187,329,0.794,330,0.837,331,0.734,332,0.754,333,0.754,334,0.837,335,0.774,336,0.837,337,0.734,338,0.837,339,0.734,340,0.794,341,0.794,342,0.734,343,0.837,344,1.098,345,0.66,346,0.837,347,1.098,348,0.734,349,0.837,350,0.794,351,0.815,352,0.837,353,0.774,354,0.754,355,0.837,356,0.794,357,0.575,358,0.837,359,0.734,360,0.794,361,0.837,362,0.774,363,0.837,364,0.794,365,1.31,366,0.774,367,0.837,368,0.794,369,0.837,370,0.837,371,1.453,373,2.209,380,0.794,381,1.176,382,1.276,383,1.665,400,0.978,401,0.859,438,0.696,445,2.582,448,1.208,464,1.654,560,2.136,612,1.97,620,1.837,981,3.558,994,1.349,1235,4.938,1237,3.772,1238,3.215,1239,3.215,1240,3.422,1241,3.375,1242,3.215,1244,2.076,1248,3.724,1249,2.722,1250,2.076,1251,1.994,1252,1.919,1253,2.076,1254,2.379,1255,1.919,1258,1.785,1374,2.379,1424,2.945,1425,2.266,1426,2.379,1427,2.266,1428,2.379,1437,2.166,1438,2.166,1439,2.166,1440,2.166,1663,3.737,1664,2.379,2066,4.135,2079,2.84,2080,2.84,2081,2.84,2082,2.84,2083,2.84,2084,2.84,2085,2.84,2087,2.379,2556,2.266,2589,2.84,2590,4.384,2591,4.682,2592,3.83,2593,4.682,2594,3.83,2595,2.379,2596,2.84,2597,5.588,2598,4.682,2599,2.84,2600,4.028,2601,4.028,2602,4.028,2603,4.028,2604,4.028,2605,3.772,2606,4.028,2607,4.028,2608,5.095,2609,2.84,2610,4.028,2611,4.028,2612,4.028,2613,2.659,2614,4.028]],["title/classes/MintLookupDataService.html",[97,0.075,1757,3.289]],["body/classes/MintLookupDataService.html",[0,1.173,3,0.092,4,0.078,5,0.043,8,1.016,9,1.9,10,0.372,11,0.366,12,0.974,13,0.638,17,0.922,18,2.22,19,3.145,22,0.439,24,1.081,32,1.303,36,0.461,38,0.69,39,0.01,40,0.401,41,0.365,42,0.69,44,0.699,45,1.198,48,0.601,52,0.726,58,0.704,60,0.828,79,0.415,80,0.765,81,0.203,82,0.897,83,1.542,84,1.374,85,0.85,88,1.269,94,0.392,95,0.38,96,0.193,97,0.115,99,1.281,102,1.326,105,0.727,107,1.326,110,1.425,111,0.006,112,0.005,113,0.003,114,0.145,121,0.905,123,0.517,126,0.464,132,0.97,134,0.953,142,0.638,147,0.49,148,0.655,149,0.881,154,0.531,156,0.464,158,1.168,159,1.216,168,0.964,170,0.545,171,0.531,178,0.638,181,0.978,186,0.575,187,0.347,188,0.392,189,0.392,195,0.606,203,0.638,205,1.094,206,0.905,214,1.062,216,1.062,221,2.709,225,4.04,226,1.42,256,1.351,258,0.56,263,1.406,297,0.49,315,1.017,357,0.796,359,0.545,371,1.673,373,1.113,380,1.508,381,0.873,383,0.689,399,0.464,410,1.002,418,0.974,425,1.002,438,1.557,445,1.494,475,1.869,483,1.869,485,1.719,509,1.062,525,0.97,531,1.303,560,0.806,584,1.094,620,1.544,628,0.922,673,1.127,674,1.374,676,3.224,677,1.767,701,1.964,858,1.863,862,2.109,865,2.356,878,3.028,924,1.163,946,1.425,987,2.778,991,1.683,994,1.002,1022,3.586,1036,4.646,1074,1.767,1100,1.863,1137,2.591,1140,1.609,1238,1.683,1239,1.683,1240,2.364,1242,1.683,1244,1.542,1248,2.364,1249,2.185,1250,1.542,1251,1.481,1252,1.425,1253,1.542,1255,1.425,1258,2.989,1260,2.762,1261,3.985,1316,3.096,1317,1.863,1331,2.271,1398,1.863,1422,1.863,1433,1.683,1434,1.863,1532,2.709,1575,2.109,1613,3.234,1614,2.277,1615,5.135,1616,3.837,1617,4.762,1618,2.277,1619,2.277,1620,4.762,1621,5.135,1622,5.135,1625,4.247,1627,6.432,1628,4.762,1630,4.762,1632,5.018,1633,2.109,1634,4.129,1635,1.767,1636,2.277,1637,2.109,1638,2.109,1639,2.109,1640,2.277,1641,3.492,1642,3.492,1643,2.277,1644,2.277,1645,2.277,1646,2.277,1647,4.762,1648,5.419,1649,2.277,1650,2.277,1651,4.247,1652,5.641,1653,2.277,1654,2.277,1655,2.277,1656,2.277,1657,2.277,1658,4.762,1659,2.277,1660,2.277,1661,2.277,1662,2.277,1663,1.683,1664,1.767,1665,4.247,1666,2.277,1667,4.247,1668,2.277,1669,5.135,1670,2.277,1671,4.247,1672,2.277,1673,4.247,1674,2.277,1675,3.492,1676,2.277,1677,5.641,1678,2.277,1679,2.277,1680,2.277,1681,2.856,1682,4.762,1683,3.492,1684,2.277,1685,3.492,1686,2.277,1687,2.277,1688,2.277,1689,2.277,1690,3.492,1691,3.492,1692,2.277,1693,3.492,1694,3.492,1695,3.492,1696,3.492,1697,2.277,1698,2.277,1699,1.683,1700,3.492,1701,2.277,1702,3.492,1703,2.277,1704,2.277,1705,5.641,1706,5.135,1707,2.277,1708,2.277,1709,2.277,1710,1.767,1711,2.277,1712,4.129,1713,2.277,1714,2.277,1715,2.277,1716,3.492,1717,2.277,1718,2.277,1719,2.277,1720,2.109,1721,1.767,1722,2.277,1723,2.277,1724,2.277,1725,5.82,1726,2.277,1727,2.277,1728,3.492,1729,2.277,1730,2.109,1731,2.277,1732,2.277,1733,2.277,1734,2.109,1735,2.277,1736,2.277,1737,4.247,1738,4.762,1739,2.277,1740,2.109,1741,2.277,1742,2.277,1743,4.762,1744,2.109,1745,2.277,1746,2.109,1747,2.109,1748,1.975,1749,2.109,1750,2.277,1751,2.277,1752,2.277,1753,2.277,1754,2.277,1755,1.767,1756,3.492,1757,3.933,1758,4.247,1759,2.277,1760,2.277,1761,2.277,1762,4.247,1763,5.419,1764,5.641,1765,6.364,1766,5.135,1767,4.762,1768,3.492,1769,4.247,1770,3.295,1771,5.135,1772,3.695,1773,4.247,1774,4.247,1775,4.247,1776,4.247,1777,2.277,1778,2.277,1779,2.277,1780,5.419,1781,2.109,1782,2.109,1783,2.277,1784,2.277,1785,2.277,1786,3.492,1787,3.492,1788,2.277,1789,2.277,1790,2.277,1791,5.526,1792,3.234,1793,2.277,1794,3.492,1795,1.863,1796,2.109,1797,2.277,1798,2.277,1799,3.492,1800,2.277,1801,2.277,1802,2.277,1803,2.277,1804,2.277,1805,3.492,1806,2.277,1807,2.277,1808,3.492,1809,2.277,1810,3.295,1811,2.277,1812,3.492,1813,3.492,1814,3.492,1815,3.492,1816,3.492,1817,5.419,1818,2.277,1819,3.492,1820,5.135,1821,3.492,1822,3.492,1823,2.277,1824,3.492,1825,3.492,1826,3.492,1827,3.234,1828,2.277,1829,2.277,1830,2.277,1831,2.277,1832,2.277,1833,2.109,1834,2.277,1835,2.277,1836,2.277,1837,2.277,1838,2.277,1839,2.277,1840,2.277,1841,2.277,1842,2.277,1843,3.492,1844,2.277,1845,2.277,1846,2.277,1847,2.277,1848,2.277,1849,2.277,1850,2.277,1851,2.277,1852,2.109,1853,2.277,1854,2.277,1855,2.277,1856,2.277,1857,2.277,1858,2.277,1859,1.863,1860,2.277,1861,2.277,1862,2.277,1863,2.277,1864,2.277,1865,2.277,1866,2.277,1867,2.277,1868,3.492,1869,3.234,1870,2.277,1871,2.277,1872,2.277,1873,2.277,1874,2.277,1875,2.277,1876,2.277,1877,2.277,1878,2.277,1879,2.856,1880,2.277,1881,2.277,1882,2.277,1883,2.277,1884,2.277,1885,2.277,1886,4.247,1887,2.277,1888,2.109,1889,2.277,1890,1.863,1891,2.277,1892,2.277,1893,2.277,1894,4.247,1895,2.277,1896,2.277,1897,2.277,1898,2.277,1899,2.277,1900,2.277,1901,2.277,1902,2.109,1903,2.277,1904,1.767,1905,2.277,1906,2.277,1907,2.109,1908,2.109,1909,1.863,1910,2.277,1911,2.277,1912,3.492,1913,2.277,1914,2.277,1915,2.277,1916,2.277,1917,2.109,1918,2.277,1919,2.277,1920,2.277,1921,2.277,1922,2.277,1923,2.277,1924,2.277,2615,4.362,2616,4.362,2617,2.845,2618,2.845,2619,2.845,2620,2.845,2621,2.845]],["title/classes/MintRelationshipLookup.html",[97,0.075,1917,3.289]],["body/classes/MintRelationshipLookup.html",[0,1.198,3,0.095,4,0.08,5,0.044,8,0.974,9,1.94,10,0.377,11,0.374,12,1.001,13,0.656,17,0.947,18,2.252,19,3.221,22,0.448,24,1.074,32,1.331,36,0.395,38,0.479,39,0.01,40,0.279,41,0.291,42,0.479,44,0.696,45,1.212,48,0.274,52,0.544,58,0.712,60,0.815,79,0.417,80,0.786,81,0.209,82,0.922,83,1.585,84,1.412,85,0.874,88,1.296,94,0.403,95,0.391,96,0.195,97,0.116,99,1.317,102,1.362,105,0.729,107,1.362,110,1.465,111,0.006,112,0.005,113,0.003,114,0.147,121,0.924,123,0.532,126,0.477,132,0.984,134,0.973,142,0.656,147,0.504,148,0.673,149,0.9,154,0.546,156,0.477,158,1.156,159,1.226,168,0.981,170,0.561,171,0.546,178,0.656,181,0.999,186,0.591,187,0.357,188,0.403,189,0.403,195,0.622,203,0.656,205,1.124,206,0.924,214,1.091,216,1.091,221,2.735,225,4.072,226,1.431,256,1.157,258,0.575,263,1.388,297,0.504,315,1.034,357,0.81,359,0.561,371,1.494,373,1.137,380,1.521,381,0.897,383,0.709,399,0.477,410,1.03,418,1.001,425,1.03,438,1.562,445,1.526,475,1.901,483,1.901,485,1.749,509,1.091,525,0.984,531,1.331,560,0.829,584,1.124,620,1.296,628,0.947,673,1.159,674,1.412,676,2.924,677,1.816,701,2.006,858,1.915,862,2.168,865,2.376,878,3.092,924,1.195,946,1.465,987,2.793,991,1.73,994,1.03,1022,3.598,1036,4.675,1074,1.816,1100,1.915,1137,1.94,1140,1.653,1238,1.73,1239,1.73,1240,2.414,1242,1.73,1244,1.585,1248,2.414,1249,2.231,1250,1.585,1251,1.522,1252,1.465,1253,1.585,1255,1.465,1258,3.026,1260,2.809,1261,4.034,1316,3.141,1317,1.915,1331,2.319,1398,1.915,1422,1.915,1433,1.73,1434,1.915,1532,2.767,1575,2.168,1613,3.302,1614,2.341,1615,4.83,1617,3.566,1618,2.341,1619,2.341,1620,3.566,1621,4.319,1622,4.319,1625,3.566,1627,6.401,1628,4.319,1630,4.83,1632,5.072,1633,2.168,1634,4.188,1635,1.816,1636,2.341,1637,2.168,1638,2.168,1639,2.168,1640,2.341,1641,3.566,1642,3.566,1643,2.341,1644,2.341,1645,2.341,1646,2.341,1647,3.566,1648,4.83,1649,2.341,1650,2.341,1651,4.319,1652,5.695,1653,2.341,1654,2.341,1655,2.341,1656,2.341,1657,2.341,1658,3.566,1659,2.341,1660,2.341,1661,2.341,1662,2.341,1663,1.73,1664,1.816,1665,4.319,1666,2.341,1667,4.319,1668,2.341,1669,5.198,1670,2.341,1671,4.319,1672,2.341,1673,4.319,1674,2.341,1675,3.566,1676,2.341,1677,5.695,1678,2.341,1679,2.341,1680,2.341,1681,2.917,1682,4.83,1683,3.566,1684,2.341,1685,3.566,1686,2.341,1687,2.341,1688,2.341,1689,2.341,1690,3.566,1691,3.566,1692,2.341,1693,3.566,1694,3.566,1695,3.566,1696,3.566,1697,2.341,1698,2.341,1699,1.73,1700,3.566,1701,2.341,1702,3.566,1703,2.341,1704,2.341,1705,5.695,1706,5.198,1707,2.341,1708,2.341,1709,2.341,1710,1.816,1711,2.341,1712,4.188,1713,2.341,1714,2.341,1715,2.341,1716,3.566,1717,2.341,1718,2.341,1719,2.341,1720,2.168,1721,1.816,1722,2.341,1723,2.341,1724,2.341,1725,5.87,1726,2.341,1727,2.341,1728,3.566,1729,2.341,1730,2.168,1731,2.341,1732,2.341,1733,2.341,1734,2.168,1735,2.341,1736,2.341,1737,4.319,1738,4.83,1739,2.341,1740,2.168,1741,2.341,1742,2.341,1743,4.83,1744,2.168,1745,2.341,1746,2.168,1747,2.168,1748,2.03,1749,2.168,1750,2.341,1751,2.341,1752,2.341,1753,2.341,1754,2.341,1755,1.816,1756,3.566,1757,3.302,1758,4.319,1759,2.341,1760,2.341,1761,2.341,1762,4.319,1763,5.477,1764,5.695,1765,6.401,1766,5.198,1767,4.83,1768,3.566,1769,4.319,1770,3.352,1771,5.198,1772,3.748,1773,4.319,1774,4.319,1775,4.319,1776,4.319,1777,2.341,1778,2.341,1779,2.341,1780,5.477,1781,2.168,1782,2.168,1783,2.341,1784,2.341,1785,2.341,1786,3.566,1787,3.566,1788,2.341,1789,2.341,1790,2.341,1791,5.57,1792,3.302,1793,2.341,1794,3.566,1795,1.915,1796,2.168,1797,2.341,1798,2.341,1799,3.566,1800,2.341,1801,2.341,1802,2.341,1803,2.341,1804,2.341,1805,3.566,1806,2.341,1807,2.341,1808,3.566,1809,2.341,1810,3.352,1811,2.341,1812,3.566,1813,3.566,1814,3.566,1815,3.566,1816,3.566,1817,5.87,1818,2.341,1819,3.566,1820,5.198,1821,3.566,1822,3.566,1823,2.341,1824,3.566,1825,3.566,1826,3.566,1827,3.302,1828,2.341,1829,2.341,1830,2.341,1831,2.341,1832,2.341,1833,2.168,1834,2.341,1835,2.341,1836,2.341,1837,2.341,1838,2.341,1839,2.341,1840,2.341,1841,2.341,1842,2.341,1843,2.341,1844,2.341,1845,2.341,1846,2.341,1847,2.341,1848,2.341,1849,2.341,1850,2.341,1851,2.341,1852,2.168,1853,2.341,1854,2.341,1855,2.341,1856,2.341,1857,2.341,1858,2.341,1859,1.915,1860,2.341,1861,2.341,1862,2.341,1863,2.341,1864,2.341,1865,2.341,1866,2.341,1867,2.341,1868,3.566,1869,3.302,1870,2.341,1871,2.341,1872,2.341,1873,2.341,1874,2.341,1875,2.341,1876,2.341,1877,2.341,1878,2.341,1879,2.917,1880,2.341,1881,2.341,1882,2.341,1883,2.341,1884,2.341,1885,2.341,1886,4.319,1887,2.341,1888,2.168,1889,2.341,1890,1.915,1891,2.341,1892,2.341,1893,2.341,1894,4.319,1895,2.341,1896,2.341,1897,2.341,1898,2.341,1899,2.341,1900,2.341,1901,2.341,1902,2.168,1903,2.341,1904,1.816,1905,2.341,1906,2.341,1907,2.168,1908,2.168,1909,1.915,1910,2.341,1911,2.341,1912,3.566,1913,2.341,1914,2.341,1915,2.341,1916,2.341,1917,3.302,1918,2.341,1919,4.319,1920,2.341,1921,2.341,1922,2.341,1923,2.341,1924,2.341,2622,4.454,2623,2.924,2624,2.924]],["title/pipes/MultivalueFieldPipe.html",[2625,3.289,2626,3.289]],["body/pipes/MultivalueFieldPipe.html",[3,0.219,4,0.184,5,0.101,22,0.678,24,0.957,36,0.442,38,0.725,39,0.01,40,0.518,41,0.364,42,0.725,44,0.643,48,0.633,79,0.345,80,1.814,81,0.482,96,0.219,97,0.115,105,0.566,111,0.008,112,0.009,113,0.008,122,1.363,242,0.984,526,2.446,620,1.963,1260,4.438,2625,5.81,2626,5.81,2627,5.401,2628,6.747,2629,7.837,2630,5.936,2631,6.747,2632,6.274,2633,6.747,2634,5.401,2635,6.895,2636,6.747,2637,5.936,2638,5.936,2639,6.747,2640,6.747]],["title/components/PDFListComponent.html",[114,0.121,302,0.896]],["body/components/PDFListComponent.html",[3,0.125,4,0.105,5,0.058,8,0.951,10,0.496,11,0.458,22,0.549,24,1.048,36,0.569,38,0.741,39,0.01,40,0.512,41,0.46,42,0.782,44,0.627,45,0.72,48,0.776,50,1.603,52,0.667,57,0.895,58,0.717,60,0.839,79,0.397,80,1.037,81,0.276,85,1.632,86,1.25,90,3.328,94,0.531,95,0.516,96,0.205,97,0.108,105,0.666,111,0.004,112,0.006,113,0.004,114,0.206,115,0.779,116,1.075,117,0.843,118,1.162,121,1.804,122,1.103,123,1.661,124,0.821,126,0.629,127,1.288,132,1.384,133,1.323,134,1.734,135,1.459,136,1.459,139,1.323,140,1.323,141,1.323,142,1.421,143,1.536,144,1.536,145,1.224,146,1.224,147,1.092,148,1.256,149,1.281,150,1.037,151,1.256,152,1.037,153,0.935,154,1.019,155,1.037,156,0.891,157,1.037,158,1.144,159,1.232,160,1.037,161,1.037,166,0.935,167,1.323,168,1.253,169,0.959,170,1.215,171,1.184,172,0.935,173,0.935,174,0.935,175,0.959,176,1.289,177,0.821,178,0.865,179,0.959,180,0.911,181,0.865,182,0.959,183,0.887,184,0.959,185,0.821,186,0.779,187,0.667,188,0.752,189,0.752,190,0.959,191,0.911,192,0.887,193,1.536,194,1.323,195,0.821,198,0.959,199,0.935,200,1.459,201,0.959,202,0.959,203,0.865,204,0.959,205,1.483,206,0.8,209,2.761,210,2.181,214,1.44,216,1.44,220,2.282,221,2.65,223,2.859,224,2.677,225,2.09,228,2.396,238,0.595,239,1.162,240,1.047,241,0.843,242,1.102,243,0.843,244,1.651,245,0.739,246,0.8,247,0.8,248,0.821,249,1.385,250,0.779,251,0.843,252,0.843,253,0.739,254,0.843,255,0.739,256,0.739,257,0.8,258,1.61,259,1.193,260,0.8,261,0.843,262,0.8,263,1.302,264,1.092,265,0.739,266,0.779,267,0.843,268,0.779,269,1.133,270,1.506,271,0.8,272,1.193,273,0.739,274,0.843,275,0.779,276,0.779,277,0.843,278,0.739,279,0.8,280,0.739,281,0.843,282,0.739,283,0.821,284,0.843,285,0.779,286,0.779,287,0.843,288,0.779,289,1.193,290,0.843,291,0.8,292,0.843,293,0.779,294,0.843,295,0.779,296,0.821,297,1.092,298,1.193,299,0.739,300,0.779,301,1.193,302,1.393,303,1.734,304,1.193,305,0.779,306,1.103,307,0.843,308,0.779,309,0.779,310,0.779,311,0.843,312,0.8,313,0.843,314,0.779,315,0.739,316,0.843,317,0.779,318,0.843,319,0.779,320,0.843,321,0.759,322,1.43,323,0.779,324,0.843,325,0.779,326,1.193,327,0.739,328,1.193,329,0.8,330,0.843,331,0.739,332,0.759,333,0.759,334,0.843,335,0.779,336,0.843,337,0.739,338,0.843,339,0.739,340,0.8,341,0.8,342,0.739,343,0.843,344,0.779,345,0.664,346,0.843,347,0.779,348,0.739,349,0.843,350,0.8,351,0.821,352,0.843,353,0.779,354,0.759,355,0.843,356,0.8,357,0.579,358,0.843,359,0.739,360,0.8,361,0.843,362,0.779,363,0.843,364,0.8,365,1.315,366,0.779,367,0.843,368,0.8,369,0.843,370,0.843,371,1.586,380,0.8,383,1.536,399,0.629,438,1.253,454,1.483,520,2.231,525,0.629,560,1.954,582,2.008,620,1.589,626,1.87,642,2.636,673,2.164,701,1.737,747,3.088,750,2.282,865,1.769,961,3.291,987,1.87,994,2.429,1064,3.79,1099,2.526,1168,5.508,1223,2.735,1249,1.932,1316,2.842,1331,2.842,1449,2.282,1521,6.981,1699,2.282,1710,2.396,1960,3.79,2560,2.526,2641,3.857,2642,5.46,2643,5.46,2644,5.46,2645,5.46,2646,6.339,2647,3.857,2648,4.804,2649,3.857,2650,6.339,2651,3.857,2652,2.677,2653,2.677,2654,4.804,2655,3.087,2656,3.087,2657,2.859,2658,2.677,2659,3.857,2660,3.857,2661,3.857,2662,3.857,2663,3.857,2664,3.857,2665,3.857,2666,3.857,2667,4.804,2668,3.087,2669,3.393,2670,3.087,2671,3.087,2672,3.857,2673,3.857,2674,3.087,2675,3.857,2676,6.339,2677,3.857,2678,3.857,2679,3.857,2680,3.857,2681,3.857,2682,5.46,2683,3.857,2684,5.46,2685,3.857,2686,3.857,2687,3.857,2688,3.857,2689,3.857,2690,3.857,2691,3.857,2692,3.857,2693,3.857,2694,2.677,2695,4.371,2696,3.393,2697,3.857,2698,3.857,2699,3.857,2700,3.857,2701,3.857,2702,3.857,2703,3.857,2704,3.857,2705,5.46,2706,3.857,2707,3.857,2708,3.857,2709,3.857,2710,3.857,2711,3.857,2712,3.857,2713,3.857,2714,3.857,2715,3.857,2716,3.857,2717,3.857,2718,3.393,2719,3.857,2720,3.393,2721,3.857,2722,3.857,2723,3.857,2724,3.857,2725,3.857,2726,3.857,2727,3.857,2728,3.857,2729,5.46,2730,5.46,2731,5.46,2732,6.065,2733,5.46,2734,5.46,2735,5.46,2736,5.46]],["title/components/ParameterRetrieverComponent.html",[114,0.121,299,0.851]],["body/components/ParameterRetrieverComponent.html",[3,0.089,4,0.142,5,0.041,8,1.238,10,0.418,11,0.357,13,1.165,22,0.427,24,1.059,36,0.543,38,0.628,39,0.01,40,0.512,41,0.442,42,0.718,44,0.636,45,0.514,48,0.748,50,1.518,52,0.519,57,0.758,58,0.694,60,0.916,79,0.356,81,0.197,85,1.27,86,0.891,94,0.379,95,0.368,96,0.269,97,0.143,105,0.73,111,0.003,112,0.005,113,0.003,114,0.23,115,0.556,116,1.022,117,0.601,118,0.905,121,1.807,122,0.859,123,1.646,124,0.586,125,2.684,126,1.315,127,1.118,129,2.922,132,1.419,133,1.259,134,1.647,135,1.454,136,1.454,138,1.058,139,1.03,140,1.03,141,1.03,142,1.497,143,1.259,144,1.416,145,0.953,146,1.165,147,1.199,148,1.195,149,1.05,150,0.74,151,1.195,152,0.74,153,1.03,154,0.97,155,0.74,156,0.953,157,0.74,158,0.987,159,1.252,160,0.74,161,0.74,166,1.03,167,1.259,168,1.062,169,0.684,170,1.28,171,1.247,172,1.03,173,1.03,174,0.667,175,0.684,176,1.38,177,0.905,178,0.617,179,0.684,180,1.004,181,0.953,182,0.684,183,1.454,184,0.684,185,1.422,186,1.05,187,0.634,188,0.715,189,0.715,190,0.684,191,1.004,192,1.195,193,1.531,194,1.531,195,0.905,198,0.684,199,1.03,200,1.195,201,0.684,202,0.684,203,1.31,204,0.684,206,0.882,207,1.737,208,0.891,226,1.091,238,0.425,239,0.905,240,0.815,241,0.601,242,1.077,243,0.601,244,1.459,245,0.815,246,0.882,247,0.571,248,0.586,249,1.135,250,0.556,251,0.601,252,0.601,253,0.815,254,0.601,255,0.815,256,0.996,257,0.571,258,1.415,259,0.929,260,0.571,261,0.601,262,0.571,263,0.871,264,1.007,265,0.815,266,0.859,267,0.601,268,0.556,269,0.882,270,1.277,271,0.571,272,0.929,273,0.996,274,0.601,275,0.556,276,0.556,277,0.601,278,0.815,279,0.882,280,0.815,281,0.601,282,0.815,283,0.586,284,0.601,285,0.556,286,0.556,287,0.601,288,0.556,289,0.929,290,0.601,291,0.571,292,0.601,293,0.556,294,0.601,295,0.556,296,0.586,297,1.151,298,0.929,299,1.12,300,1.05,301,0.929,302,0.556,303,0.601,304,0.929,305,0.556,306,0.859,307,0.601,308,0.556,309,0.556,310,0.556,311,0.601,312,0.571,313,0.601,314,0.556,315,0.527,316,0.601,317,0.556,318,0.601,319,0.556,320,0.601,321,0.541,322,1.212,323,0.556,324,0.601,325,0.556,326,0.929,327,0.527,328,0.929,329,0.571,330,0.601,331,0.815,332,1.314,333,1.022,334,0.601,335,0.556,336,0.601,337,0.815,338,0.601,339,0.815,340,1.385,341,0.882,342,0.815,343,0.601,344,0.556,345,0.895,346,0.601,347,0.556,348,0.815,349,0.601,350,0.571,351,0.586,352,0.601,353,0.556,354,0.541,355,0.601,356,0.571,357,0.413,358,0.601,359,0.527,360,0.571,361,0.601,362,0.556,363,0.601,364,0.571,365,1.077,366,0.556,367,0.601,368,0.571,369,0.601,370,0.601,371,1.345,372,1.16,373,2.057,374,1.16,377,1.793,380,1.444,381,0.844,382,0.916,383,0.667,384,2.191,385,1.16,386,1.939,387,2.191,388,2.191,389,1.683,390,2.181,391,2.191,392,2.464,393,1.16,394,1.793,395,1.793,396,1.124,397,1.124,398,0.969,399,0.449,400,1.085,401,0.617,402,1.124,403,2.429,404,1.16,405,2.816,406,1.793,407,1.027,408,1.737,409,1.541,410,0.969,411,1.16,412,1.16,413,1.16,414,1.16,415,1.16,416,1.793,417,1.16,418,0.942,419,1.16,420,1.16,421,1.16,422,1.058,423,1.058,424,1.058,425,0.969,426,1.16,427,1.16,428,1.16,429,1.16,430,1.793,431,1.16,432,1.16,433,1.16,434,1.16,435,2.123,436,1.737,437,1.16,438,1.214,439,2.123,440,1.16,441,2.058,442,0.942,443,2.388,444,1.16,445,1.779,446,2.191,447,1.16,448,1.638,449,1.16,450,1.16,451,1.16,452,1.16,453,1.16,454,1.997,455,1.793,456,1.16,457,1.16,458,1.16,459,1.793,460,1.09,461,1.16,462,1.16,463,1.16,464,1.114,465,1.16,466,1.793,467,1.793,468,1.16,469,1.16,470,1.16,471,1.16,472,1.16,473,1.16,474,1.124,475,1.498,476,1.16,477,1.16,478,1.16,479,1.793,480,1.16,481,1.16,482,1.16,483,1.498,484,1.737,485,1.377,486,2.845,487,2.191,488,1.16,489,1.16,490,1.793,491,1.793,492,1.16,493,2.845,494,1.793,495,1.16,496,1.16,497,1.16,498,1.16,499,2.191,500,1.16,501,1.16,502,1.16,503,1.16,504,1.16,505,1.16,506,0.997,507,0.997,508,1.16,509,1.027,510,1.16,511,1.124,512,1.16,513,1.124,514,1.16,515,1.058,516,1.058,517,1.124,518,1.124,519,0.916,520,1.124,521,2.191,522,1.793,523,1.16,524,0.969,525,0.449,526,0.997,527,1.124,528,0.916,529,1.16,530,1.16,531,0.822,532,1.09,533,1.793,534,1.16,535,1.16,536,1.16,537,1.16,538,1.16,539,1.16,540,1.16,541,2.191,542,1.16,543,1.16,544,1.16,545,1.16,546,1.793,547,1.16,548,1.16,549,1.456,550,1.16,551,1.124,552,1.16,553,1.16,554,1.124,555,1.16,556,1.16,557,1.16,558,1.793,559,1.793,560,0.78,561,1.16,562,1.124,563,1.124,564,1.058,565,1.124,566,1.16,567,1.124,568,1.16,569,1.16,570,1.16,571,1.16,572,1.16,573,1.16,574,1.16,575,1.16,576,1.793,577,1.793,578,1.793,579,1.793,580,1.793,581,1.737,582,1.173,583,1.16,584,1.058,585,1.16,586,1.16,587,0.942,588,1.058,589,1.793,590,1.16,591,1.16,592,1.16,593,2.191,594,1.16,595,1.16,596,1.16,597,1.16,598,1.16,599,1.16,600,1.16,601,1.16,602,1.124,603,1.16,604,1.16,605,1.16,606,1.09,607,1.16,608,1.16,609,1.124,610,1.16,611,1.16,612,0.997,613,1.16,614,1.16,615,1.16,616,1.16,617,1.16,618,1.16,619,1.737,620,1.237,621,1.793,622,1.16,623,1.16,624,1.16,625,1.16,626,0.942,2737,3.739,2738,2.42,2739,2.751,2740,2.751,2741,2.751]],["title/classes/Plan.html",[90,2.142,97,0.075]],["body/classes/Plan.html",[3,0.217,4,0.183,5,0.101,10,0.419,11,0.655,36,0.567,39,0.01,41,0.467,44,0.698,89,4.164,90,3.989,96,0.253,97,0.133,111,0.008,112,0.009,113,0.008,168,1.502,628,2.172,747,4.672,951,7.021,1014,4.164,1022,3.484,2199,3.967,2742,7.268,2743,7.268,2744,7.268,2745,5.898,2746,5.898,2747,5.898,2748,6.704,2749,6.704,2750,4.97,2751,4.97,2752,4.97]],["title/classes/PlanTable.html",[89,2.756,97,0.075]],["body/classes/PlanTable.html",[3,0.219,4,0.184,5,0.101,10,0.422,11,0.658,36,0.558,39,0.01,41,0.46,44,0.674,89,4.868,90,3.999,96,0.254,97,0.133,111,0.008,112,0.009,113,0.008,168,1.597,628,2.187,747,3.816,951,6.947,1014,5.145,1022,2.845,2199,3.992,2742,5.936,2743,5.936,2744,5.936,2750,6.141,2751,6.141,2752,6.141,2753,5.936,2754,5.936,2755,5.936,2756,5.936]],["title/components/PublishDataLocationRefreshComponent.html",[114,0.121,305,0.896]],["body/components/PublishDataLocationRefreshComponent.html",[3,0.144,4,0.122,5,0.067,8,1.027,10,0.459,11,0.507,22,0.607,24,1.038,36,0.575,38,0.736,39,0.01,40,0.521,41,0.467,42,0.789,44,0.638,45,0.832,48,0.781,50,1.633,52,0.544,57,0.888,58,0.712,60,0.76,79,0.404,80,1.199,81,0.319,94,0.614,95,0.596,96,0.222,97,0.116,105,0.374,111,0.005,112,0.007,113,0.005,114,0.221,115,0.901,116,1.188,117,0.974,118,1.285,121,1.833,122,1.22,123,1.669,124,0.949,126,0.727,127,1.357,128,3.094,132,1.414,133,1.463,134,1.796,135,1.575,136,1.575,139,1.463,140,1.463,141,1.463,142,1.535,143,1.659,144,1.659,145,1.353,146,1.353,147,1.179,148,1.389,149,1.383,150,1.199,151,1.389,152,1.199,153,1.08,154,1.127,155,1.199,156,0.985,157,1.199,158,1.086,159,0.727,160,1.199,161,1.199,166,1.08,167,1.463,168,1.097,169,1.109,170,1.312,171,1.278,172,1.08,173,1.08,174,1.08,175,1.109,176,1.425,177,0.949,178,0.999,179,1.109,180,1.053,181,0.999,182,1.109,183,1.026,184,1.109,185,0.949,186,0.901,187,0.836,188,0.942,189,0.942,190,1.109,191,1.053,192,1.026,193,1.08,194,1.463,195,0.949,198,1.109,199,1.08,200,1.026,201,1.109,202,1.109,203,0.999,204,1.109,205,1.714,206,0.925,209,2.981,210,2.521,214,1.664,216,1.664,220,2.637,221,2.321,222,2.919,226,0.832,238,0.688,239,1.285,240,1.157,241,0.974,242,1.118,243,0.974,244,1.727,245,0.855,246,0.925,247,0.925,248,0.949,249,1.495,250,0.901,251,0.974,252,0.974,253,0.855,254,0.974,255,0.855,256,0.855,257,0.925,258,1.618,259,1.319,260,0.925,261,0.974,262,0.925,263,1.467,264,1.435,265,0.855,266,0.901,267,0.974,268,0.901,269,1.252,270,1.603,271,0.925,272,1.319,273,0.855,274,0.974,275,0.901,276,0.901,277,0.974,278,0.855,279,0.925,280,0.855,281,0.974,282,0.855,283,0.949,284,0.974,285,0.901,286,0.901,287,0.974,288,0.901,289,1.319,290,0.974,291,0.925,292,0.974,293,0.901,294,0.974,295,0.901,296,0.949,297,1.179,298,1.319,299,0.855,300,0.901,301,1.319,302,0.901,303,0.974,304,1.319,305,1.482,306,1.661,307,0.974,308,0.901,309,0.901,310,0.901,311,0.974,312,0.925,313,0.974,314,0.901,315,0.855,316,0.974,317,0.901,318,0.974,319,0.901,320,0.974,321,0.877,322,1.521,323,0.901,324,0.974,325,0.901,326,1.319,327,0.855,328,1.319,329,0.925,330,0.974,331,0.855,332,0.877,333,0.877,334,0.974,335,0.901,336,0.974,337,0.855,338,0.974,339,0.855,340,0.925,341,0.925,342,0.855,343,0.974,344,0.901,345,0.768,346,0.974,347,0.901,348,0.855,349,0.974,350,0.925,351,0.949,352,0.974,353,0.901,354,0.877,355,0.974,356,0.925,357,0.669,358,0.974,359,0.855,360,0.925,361,0.974,362,0.901,363,0.974,364,0.925,365,1.42,366,0.901,367,0.974,368,0.925,369,0.974,370,0.974,371,1.389,373,1.541,380,0.925,383,1.08,399,0.727,400,1.138,401,0.999,525,0.727,642,2.914,673,1.766,750,2.637,889,2.32,1223,3.024,1879,3.953,2174,3.568,2757,4.457,2758,7.335,2759,6.036,2760,6.036,2761,6.036,2762,6.844,2763,4.457,2764,4.457,2765,4.457,2766,4.457,2767,6.036,2768,4.457,2769,4.457,2770,6.036,2771,4.457,2772,3.921,2773,4.457,2774,4.457]],["title/components/PublishDataLocationSelectorComponent.html",[114,0.121,308,0.896]],["body/components/PublishDataLocationSelectorComponent.html",[3,0.12,4,0.101,5,0.093,8,0.931,10,0.466,11,0.446,17,1.201,22,0.534,24,1.09,36,0.577,38,0.802,39,0.01,40,0.519,41,0.463,42,0.825,44,0.666,45,0.692,48,0.8,50,1.594,52,0.911,57,0.879,58,0.831,60,0.689,79,0.393,80,0.997,81,0.265,94,0.51,95,0.496,96,0.232,97,0.105,105,0.602,111,0.004,112,0.006,113,0.004,114,0.204,115,0.749,116,1.045,117,0.81,118,1.13,121,1.795,122,1.073,123,1.659,124,0.789,126,0.605,127,1.098,132,1.375,133,1.287,134,1.716,135,1.427,136,1.427,139,1.287,140,1.287,141,1.287,142,1.607,143,1.503,144,1.503,145,1.19,146,1.19,147,1.167,148,1.222,149,1.253,150,0.997,151,1.222,152,0.997,153,0.898,154,0.991,155,0.997,156,0.866,157,0.997,158,1.057,159,0.605,160,0.997,161,0.997,166,0.898,167,1.287,168,0.965,169,0.922,170,1.189,171,1.158,172,0.898,173,0.898,174,0.898,175,0.922,176,1.254,177,0.789,178,0.831,179,0.922,180,0.875,181,0.831,182,0.922,183,1.649,184,0.922,185,0.789,186,0.749,187,0.648,188,0.731,189,0.731,190,0.922,191,0.875,192,0.853,193,0.898,194,1.287,195,0.789,198,0.922,199,0.898,200,1.427,201,0.922,202,0.922,203,0.831,204,0.922,205,1.425,206,0.769,209,2.701,210,2.097,214,1.384,216,1.384,220,2.194,221,2.604,222,2.428,223,2.749,225,2.877,226,0.991,227,3.261,228,2.303,238,0.572,239,1.13,240,1.018,241,0.81,242,1.045,243,0.81,244,1.629,245,0.711,246,0.769,247,0.769,248,0.789,249,1.355,250,0.749,251,0.81,252,0.81,253,0.711,254,0.81,255,0.711,256,1.018,257,0.769,258,1.546,259,1.16,260,0.769,261,0.81,262,0.769,263,1.202,264,1.378,265,0.711,266,0.749,267,0.81,268,0.749,269,1.101,270,1.48,271,0.769,272,1.16,273,0.711,274,0.81,275,0.749,276,0.749,277,0.81,278,0.711,279,0.769,280,0.711,281,0.81,282,0.711,283,0.789,284,0.81,285,0.749,286,0.749,287,0.81,288,0.749,289,1.16,290,0.81,291,0.769,292,0.81,293,0.749,294,0.81,295,0.749,296,0.789,297,1.069,298,1.16,299,0.711,300,0.749,301,1.16,302,0.749,303,0.81,304,1.16,305,0.749,306,1.368,307,0.81,308,1.368,309,0.749,310,0.749,311,0.81,312,0.769,313,0.81,314,0.749,315,0.711,316,0.81,317,0.749,318,0.81,319,0.749,320,0.81,321,0.73,322,1.404,323,0.749,324,0.81,325,0.749,326,1.16,327,0.711,328,1.16,329,0.769,330,0.81,331,0.711,332,0.73,333,0.73,334,0.81,335,0.749,336,0.81,337,0.711,338,0.81,339,0.711,340,0.769,341,0.769,342,0.711,343,0.81,344,0.749,345,0.639,346,0.81,347,0.749,348,0.711,349,0.81,350,0.769,351,0.789,352,0.81,353,0.749,354,0.73,355,0.81,356,0.769,357,0.556,358,0.81,359,0.711,360,0.769,361,0.81,362,0.749,363,0.81,364,0.769,365,1.286,366,0.749,367,0.81,368,0.769,369,0.81,370,0.81,371,1.867,373,1.355,380,0.769,383,0.898,399,0.605,400,0.946,401,0.831,464,0.971,525,0.605,532,1.469,560,1.919,642,2.563,673,2.104,750,2.194,961,2.701,987,1.818,994,1.871,1223,2.659,1384,3.685,1449,2.194,1681,3.476,1721,2.303,1796,2.749,1904,3.298,2078,5.737,2395,2.877,2560,2.428,2648,5.456,2652,2.573,2653,2.573,2655,2.968,2656,2.968,2658,2.573,2668,2.968,2670,2.968,2671,2.968,2694,4.305,2775,3.707,2776,3.685,2777,3.476,2778,2.659,2779,5.309,2780,6.202,2781,5.309,2782,5.309,2783,6.771,2784,6.771,2785,6.771,2786,5.309,2787,5.309,2788,3.707,2789,3.707,2790,3.707,2791,3.707,2792,3.707,2793,3.707,2794,3.707,2795,3.707,2796,5.309,2797,3.707,2798,5.309,2799,3.707,2800,6.202,2801,3.707,2802,5.309,2803,3.707,2804,5.309,2805,5.309,2806,3.707,2807,4.67,2808,4.67,2809,3.707,2810,3.707,2811,3.707,2812,3.707,2813,3.707,2814,3.707,2815,3.707,2816,3.707,2817,3.707,2818,3.707,2819,3.707,2820,3.707,2821,3.707,2822,3.707,2823,3.707,2824,3.707,2825,3.707,2826,3.707,2827,3.707,2828,3.707,2829,3.707,2830,2.749,2831,3.707,2832,3.707,2833,3.707,2834,3.707,2835,3.707,2836,3.707,2837,3.707,2838,3.707,2839,3.707,2840,3.707,2841,3.707,2842,3.707,2843,3.707,2844,3.707,2845,3.707,2846,3.707,2847,3.261,2848,5.309,2849,3.707,2850,3.707,2851,3.707,2852,3.707,2853,3.707,2854,3.707,2855,3.707,2856,3.707,2857,3.707,2858,3.707,2859,3.707,2860,3.707,2861,3.707,2862,3.707,2863,3.707,2864,3.707,2865,3.707,2866,3.707,2867,3.707,2868,3.707,2869,6.202,2870,3.707,2871,3.707,2872,5.309,2873,3.707,2874,3.707,2875,5.309,2876,5.309,2877,5.309,2878,5.309,2879,5.309,2880,6.771,2881,5.309]],["title/classes/RbValidator.html",[97,0.075,2882,3.903]],["body/classes/RbValidator.html",[3,0.196,4,0.165,5,0.091,10,0.379,13,1.963,22,0.827,36,0.481,38,0.79,39,0.01,40,0.46,41,0.397,42,0.79,44,0.639,48,0.689,60,0.914,79,0.376,94,0.834,95,0.81,96,0.196,97,0.103,105,0.708,111,0.007,112,0.008,113,0.007,132,0.989,154,1.131,156,1.2,158,1.122,159,0.989,186,1.486,187,0.898,188,1.012,189,1.012,258,1.447,399,0.989,438,1.496,464,2.074,525,0.989,549,2.519,582,1.673,628,1.964,673,3.137,961,3.203,1087,2.64,1137,3.203,1399,4.206,1953,5.331,1954,5.331,2391,5.39,2634,6.589,2882,6.468,2883,6.06,2884,7.353,2885,5.104,2886,8.432,2887,7.353,2888,7.353,2889,8.432,2890,6.06,2891,7.353,2892,5.451,2893,7.353,2894,7.915,2895,6.06,2896,6.468,2897,6.468,2898,5.451,2899,5.886,2900,8.231,2901,7.915,2902,6.06,2903,6.06,2904,6.06,2905,6.06,2906,6.06,2907,6.06,2908,7.915,2909,7.353,2910,6.06,2911,6.06]],["title/classes/RecordActionResult.html",[97,0.075,2912,3.289]],["body/classes/RecordActionResult.html",[0,1.511,3,0.13,4,0.11,5,0.06,8,0.603,9,2.448,10,0.251,11,0.472,12,2.405,17,2.275,18,2.62,19,2.492,32,1.201,36,0.424,39,0.01,40,0.405,41,0.398,44,0.694,58,0.796,60,0.917,79,0.416,80,1.081,81,0.287,82,1.267,84,1.94,88,1.635,90,1.94,94,0.553,95,0.537,96,0.227,97,0.126,98,2.013,99,1.81,102,1.873,105,0.754,107,3.443,108,4.562,109,4.597,110,4.343,111,0.005,112,0.006,113,0.005,127,1.308,132,0.917,147,1.354,149,0.812,158,0.919,159,0.656,187,0.491,188,0.553,189,0.553,206,1.166,209,1.75,221,2.161,226,1.049,240,0.77,242,0.82,345,0.692,389,1.302,400,1.026,407,1.5,422,1.545,438,1.481,464,1.053,506,2.038,507,2.038,519,1.339,531,1.201,582,1.109,628,1.302,674,1.94,675,2.178,680,2.979,725,3.835,747,4.607,759,2.979,830,2.79,831,2.79,832,2.496,865,1.302,872,5.462,914,2.79,961,1.75,968,5.205,976,2.979,987,1.925,991,2.378,1022,1.695,1027,5.06,1045,2.496,1046,3.491,1137,1.75,1288,3.902,1540,2.979,1550,2.273,1770,2.496,1909,2.632,1925,3.326,1980,2.378,2009,2.979,2022,2.979,2038,2.79,2039,2.979,2064,2.79,2166,2.013,2205,1.873,2207,1.94,2368,2.496,2391,2.632,2521,2.79,2556,2.378,2595,3.491,2912,5.826,2913,3.217,2914,4.018,2915,4.018,2916,4.018,2917,3.217,2918,5.189,2919,5.189,2920,3.217,2921,4.5,2922,3.217,2923,3.217,2924,3.217,2925,3.217,2926,3.217,2927,3.217,2928,3.217,2929,3.217,2930,3.217,2931,4.5,2932,2.79,2933,3.217,2934,3.217,2935,3.217,2936,3.217,2937,3.217,2938,3.217,2939,3.217,2940,3.217,2941,3.217,2942,2.979,2943,2.79,2944,3.217,2945,3.217,2946,3.217,2947,2.979,2948,3.217,2949,3.217,2950,3.217,2951,3.217,2952,3.217,2953,3.217,2954,5.189,2955,3.217,2956,4.5,2957,5.62,2958,3.217,2959,3.217,2960,3.217,2961,3.217,2962,3.217,2963,3.217,2964,3.217,2965,3.217,2966,3.217,2967,3.217,2968,3.217,2969,3.217,2970,3.217,2971,3.217,2972,4.5,2973,3.217,2974,3.217,2975,3.217,2976,3.217,2977,3.217,2978,3.217,2979,3.217,2980,3.217,2981,3.217,2982,3.217,2983,4.167,2984,4.5,2985,3.217,2986,3.217,2987,4.5,2988,4.5,2989,4.5,2990,4.5,2991,3.217,2992,5.826,2993,5.566,2994,5.189,2995,3.902,2996,3.217,2997,3.217,2998,3.217,2999,3.217,3000,5.205,3001,3.217,3002,3.217,3003,3.217,3004,3.217,3005,3.217,3006,3.217,3007,3.217,3008,3.217,3009,3.217,3010,3.217,3011,3.217,3012,3.217,3013,3.217,3014,3.217,3015,3.217,3016,3.217,3017,3.217,3018,3.217,3019,3.217,3020,3.217,3021,2.979,3022,3.217,3023,3.217,3024,3.217,3025,4.5,3026,3.217,3027,3.217,3028,3.217,3029,3.217,3030,2.979,3031,2.979,3032,3.217,3033,3.217,3034,3.217,3035,3.217,3036,3.217,3037,3.217,3038,3.217,3039,3.217,3040,3.217,3041,3.217,3042,3.217,3043,3.217,3044,3.217,3045,3.217,3046,4.806,3047,3.217,3048,2.979,3049,3.217,3050,3.217,3051,2.979,3052,4.5,3053,4.5,3054,5.914,3055,5.189,3056,4.5,3057,3.217,3058,3.217,3059,3.217,3060,3.217,3061,4.5,3062,2.79,3063,3.217,3064,2.979,3065,2.979,3066,3.217,3067,3.217,3068,3.217,3069,3.217,3070,5.62,3071,4.5,3072,3.217,3073,3.217,3074,3.217,3075,3.217,3076,3.217,3077,3.217,3078,4.5,3079,4.5,3080,3.217,3081,3.217,3082,3.217,3083,3.217,3084,3.217,3085,3.217,3086,3.217,3087,3.217,3088,3.217,3089,4.5,3090,3.217,3091,3.217,3092,4.5,3093,4.5,3094,3.217,3095,3.217,3096,3.217,3097,3.217,3098,3.217,3099,3.217,3100,3.217,3101,3.217,3102,3.217,3103,3.217,3104,3.217,3105,5.62,3106,3.217,3107,3.217,3108,3.217,3109,3.217,3110,3.217,3111,3.217]],["title/components/RecordMetadataRetrieverComponent.html",[114,0.121,309,0.896]],["body/components/RecordMetadataRetrieverComponent.html",[3,0.153,4,0.129,5,0.071,8,1.056,10,0.469,11,0.526,17,1.526,22,0.63,24,1.048,36,0.579,38,0.757,39,0.01,40,0.527,41,0.471,42,0.806,44,0.646,45,0.879,48,0.79,50,1.644,52,0.575,57,0.913,58,0.732,60,0.782,79,0.383,81,0.337,96,0.228,97,0.12,105,0.395,111,0.005,112,0.007,113,0.005,114,0.205,115,0.952,116,1.233,117,1.029,118,1.333,121,1.843,122,1.516,123,1.672,124,1.003,126,0.768,127,1.382,132,1.409,133,1.518,134,1.79,135,1.619,136,1.619,139,1.518,140,1.518,141,1.518,142,1.578,143,1.705,144,1.705,145,1.404,146,1.404,147,1.212,148,1.441,149,1.422,150,1.266,151,1.084,152,1.266,153,1.141,154,0.879,155,1.266,156,1.022,157,1.266,158,1.063,159,0.768,160,1.266,161,1.266,166,1.141,167,1.518,168,1.139,169,1.171,170,1.349,171,1.169,172,1.141,173,1.141,174,1.141,175,1.171,176,1.479,177,1.003,178,1.056,179,1.171,180,1.112,181,1.056,182,1.171,183,1.084,184,1.171,185,1.003,186,0.952,187,0.575,188,0.648,189,0.648,190,1.171,191,1.112,192,1.084,193,1.141,194,1.518,195,1.003,198,1.171,199,1.141,200,1.084,201,1.171,202,1.171,203,1.056,204,1.171,205,1.811,206,0.977,209,3.065,210,2.663,214,1.758,216,1.758,220,2.787,238,0.727,239,1.333,240,1.201,241,1.029,242,1.094,243,1.029,244,1.754,245,0.903,246,0.977,247,0.977,248,1.003,249,1.538,250,0.952,251,1.029,252,1.029,253,0.903,254,1.029,255,0.903,256,0.903,257,0.977,258,1.638,259,1.368,260,0.977,261,1.029,262,0.977,263,1.18,264,1.212,265,0.903,266,0.952,267,1.029,268,0.952,269,1.299,270,1.639,271,0.977,272,1.368,273,0.903,274,1.029,275,0.952,276,0.952,277,1.029,278,0.903,279,0.977,280,0.903,281,1.029,282,0.903,283,1.003,284,1.029,285,0.952,286,0.952,287,1.029,288,0.952,289,1.368,290,1.029,291,0.977,292,1.029,293,0.952,294,1.029,295,0.952,296,1.003,297,1.212,298,1.368,299,0.903,300,0.952,301,1.368,302,0.952,303,1.029,304,1.368,305,0.952,306,1.266,307,1.029,308,0.952,309,1.516,310,0.952,311,1.029,312,0.977,313,1.029,314,0.952,315,0.903,316,1.029,317,0.952,318,1.029,319,0.952,320,1.029,321,0.927,322,1.556,323,0.952,324,1.029,325,0.952,326,1.368,327,0.903,328,1.368,329,0.977,330,1.029,331,0.903,332,0.927,333,0.927,334,1.029,335,0.952,336,1.029,337,0.903,338,1.029,339,0.903,340,0.977,341,0.977,342,0.903,343,1.029,344,0.952,345,0.811,346,1.029,347,0.952,348,0.903,349,1.029,350,0.977,351,1.003,352,1.029,353,0.952,354,0.927,355,1.029,356,0.977,357,0.707,358,1.029,359,0.903,360,0.977,361,1.029,362,0.952,363,1.029,364,0.977,365,1.46,366,0.952,367,1.029,368,0.977,369,1.029,370,1.029,396,2.876,581,1.925,619,2.559,747,2.663,750,2.787,2772,4.143,3112,6.263,3113,4.709,3114,4.709,3115,4.709,3116,4.709,3117,4.709,3118,4.709,3119,4.709]],["title/components/RecordPermissionsComponent.html",[114,0.121,310,0.896]],["body/components/RecordPermissionsComponent.html",[3,0.135,4,0.114,5,0.063,8,0.993,10,0.446,11,0.485,22,0.58,24,1.016,32,1.248,36,0.575,38,0.805,39,0.01,40,0.525,41,0.468,42,0.833,44,0.638,45,0.78,48,0.78,50,1.62,52,0.51,57,0.859,58,0.688,60,0.793,79,0.425,80,1.123,81,0.298,94,0.575,95,0.558,96,0.214,97,0.112,105,0.667,111,0.005,112,0.006,113,0.005,114,0.217,115,0.844,116,1.136,117,0.912,118,1.229,121,1.82,122,1.337,123,1.665,124,0.889,126,0.942,127,1.263,132,1.409,133,1.399,134,1.768,135,1.522,136,1.522,139,1.399,140,1.399,141,1.399,142,1.483,143,1.603,144,1.603,145,1.294,146,1.294,147,1.14,148,1.328,149,1.337,150,1.123,151,1.328,152,1.123,153,1.012,154,1.078,155,1.123,156,0.942,157,1.123,158,1.126,159,0.942,160,1.123,161,1.123,166,1.012,167,1.399,168,1.049,169,1.039,170,1.268,171,1.235,172,1.012,173,1.012,174,1.012,175,1.039,176,1.363,177,0.889,178,0.936,179,1.039,180,0.986,181,0.936,182,1.039,183,0.961,184,1.039,185,0.889,186,0.844,187,0.705,188,0.575,189,0.575,190,1.039,191,0.986,192,0.961,193,1.012,194,1.399,195,0.889,198,1.039,199,1.012,200,1.522,201,1.039,202,1.039,203,0.936,204,1.039,205,1.606,206,0.866,209,2.882,210,2.361,214,1.559,216,1.559,220,2.471,221,2.88,222,2.734,224,2.899,225,2.263,228,2.594,238,0.645,239,1.229,240,1.107,241,0.912,242,1.13,243,0.912,244,1.693,245,0.801,246,0.866,247,0.866,248,0.889,249,1.446,250,0.844,251,0.912,252,0.912,253,0.801,254,0.912,255,0.801,256,0.801,257,0.866,258,1.637,259,1.261,260,0.866,261,0.912,262,0.866,263,1.109,264,1.14,265,0.801,266,0.844,267,0.912,268,0.844,269,1.197,270,1.559,271,0.866,272,1.261,273,0.801,274,0.912,275,0.844,276,0.844,277,0.912,278,0.801,279,0.866,280,0.801,281,0.912,282,0.801,283,0.889,284,0.912,285,0.844,286,0.844,287,0.912,288,0.844,289,1.261,290,0.912,291,0.866,292,0.912,293,0.844,294,0.912,295,0.844,296,0.889,297,1.14,298,1.261,299,0.801,300,0.844,301,1.261,302,0.844,303,0.912,304,1.261,305,0.844,306,1.166,307,0.912,308,0.844,309,0.844,310,1.442,311,0.912,312,0.866,313,0.912,314,0.844,315,0.801,316,0.912,317,0.844,318,0.912,319,0.844,320,0.912,321,0.822,322,1.48,323,0.844,324,0.912,325,0.844,326,1.261,327,0.801,328,1.261,329,0.866,330,0.912,331,0.801,332,0.822,333,0.822,334,0.912,335,0.844,336,0.912,337,0.801,338,0.912,339,0.801,340,0.866,341,0.866,342,0.801,343,0.912,344,0.844,345,0.719,346,0.912,347,0.844,348,0.801,349,0.912,350,0.866,351,0.889,352,0.912,353,0.844,354,0.822,355,0.912,356,0.866,357,0.627,358,0.912,359,0.801,360,0.866,361,0.912,362,0.844,363,0.912,364,0.866,365,1.372,366,0.844,367,0.912,368,0.866,369,0.912,370,0.912,371,1.724,380,0.866,383,1.012,399,0.681,400,1.066,483,1.471,485,1.353,525,0.681,634,1.655,642,2.787,673,2.287,674,2.016,675,2.263,701,2.599,747,3.265,750,2.471,865,1.353,939,1.761,961,1.819,987,1.977,1139,2.471,1223,3.314,1316,3.005,1331,3.005,1550,2.361,1699,2.471,1710,2.594,1721,2.594,1772,2.594,1795,2.734,2005,3.343,2149,2.471,2395,3.129,2426,3.343,2427,3.343,2560,2.734,2571,4.621,2572,3.343,2573,3.096,2574,3.343,2575,3.343,2576,3.343,2578,3.343,2652,2.899,2653,2.899,2657,3.096,2694,2.899,2695,3.343,2696,3.674,2776,4.007,2777,3.78,2778,2.892,3120,4.176,3121,5.772,3122,7.137,3123,5.078,3124,3.674,3125,6.279,3126,5.772,3127,5.078,3128,3.674,3129,4.176,3130,6.616,3131,3.674,3132,3.674,3133,3.674,3134,5.82,3135,4.176,3136,3.096,3137,3.674,3138,3.674,3139,4.176,3140,4.176,3141,4.176,3142,5.078,3143,3.674,3144,3.674,3145,7.137,3146,7.121]],["title/modules/RecordSearchModule.html",[919,1.478,3147,3.289]],["body/modules/RecordSearchModule.html",[3,0.205,4,0.173,5,0.095,39,0.01,79,0.451,81,0.453,82,2,96,0.205,97,0.108,111,0.007,112,0.008,113,0.007,238,0.979,264,1.391,312,1.883,314,1.769,399,1.035,401,1.422,634,2.513,919,2.112,921,2.855,922,2.762,923,3.897,924,3.298,925,3.521,926,3.062,931,3.901,932,3.521,933,2.855,934,2.762,936,3.403,937,3.785,938,3.785,939,2.674,940,3.785,941,3.933,942,3.933,947,3.301,1152,5.014,1153,5.603,1154,5.603,1155,5.603,3147,6.643,3148,5.579,3149,5.579,3150,6.341,3151,6.341,3152,5.579,3153,6.341]],["title/classes/RecordSearchParams.html",[97,0.075,2983,3.289]],["body/classes/RecordSearchParams.html",[0,1.441,3,0.122,4,0.103,5,0.056,8,0.564,9,2.334,10,0.235,11,0.45,12,2.333,17,2.334,18,2.543,19,2.402,22,0.539,32,1.601,36,0.557,38,0.829,39,0.01,40,0.515,41,0.452,42,0.829,44,0.698,48,0.763,52,0.914,58,0.779,60,0.904,79,0.41,80,1.01,81,0.268,82,1.184,84,1.813,88,1.559,90,1.813,94,0.517,95,0.502,96,0.221,97,0.122,98,1.881,99,1.691,102,1.75,105,0.751,107,3.356,108,4.507,109,4.461,110,4.305,111,0.004,112,0.006,113,0.004,127,1.275,132,0.874,147,1.328,149,0.759,158,0.885,159,0.613,187,0.459,188,0.517,189,0.517,206,1.111,209,1.636,221,2.06,226,1,240,0.72,242,0.782,345,0.647,389,1.217,400,0.959,407,1.402,422,1.444,438,1.458,464,0.984,506,1.943,507,1.943,519,1.251,531,1.122,582,1.037,628,1.217,674,1.813,675,2.035,680,2.785,725,2.222,747,4.359,759,2.785,830,2.607,831,2.607,832,2.333,865,1.217,872,5.391,914,2.607,961,1.636,968,5.552,976,4.631,977,3.007,987,1.835,991,2.222,1022,1.584,1027,4.982,1045,2.333,1046,3.328,1137,1.636,1540,3.973,1550,2.124,1770,2.333,1827,2.785,1909,2.459,1925,3.171,1980,2.222,2009,2.785,2022,2.785,2038,2.607,2039,2.785,2064,2.607,2166,1.881,2205,1.75,2207,1.813,2368,2.333,2391,2.459,2521,2.607,2556,2.222,2595,3.328,2912,5.552,2913,3.007,2917,3.007,2918,5.001,2919,5.001,2920,3.007,2921,4.29,2922,3.007,2923,3.007,2924,3.007,2925,3.007,2926,3.007,2927,3.007,2928,3.007,2929,3.007,2930,3.007,2931,4.29,2932,2.607,2933,3.007,2934,3.007,2935,3.007,2936,3.007,2937,3.007,2938,3.007,2939,3.007,2940,3.007,2941,3.007,2942,2.785,2943,2.607,2944,3.007,2945,3.007,2946,3.007,2947,2.785,2948,3.007,2949,3.007,2950,3.007,2951,3.007,2952,3.007,2953,3.007,2954,5.001,2955,3.007,2956,4.29,2957,5.453,2958,3.007,2959,3.007,2960,3.007,2961,3.007,2962,3.007,2963,3.007,2964,3.007,2965,3.007,2966,3.007,2967,3.007,2968,3.007,2969,3.007,2970,3.007,2971,3.007,2972,4.29,2973,3.007,2974,3.007,2975,3.007,2976,3.007,2977,3.007,2978,3.007,2979,3.007,2980,3.007,2981,3.007,2982,3.007,2983,4.631,2984,4.29,2985,3.007,2986,3.007,2987,4.29,2988,4.29,2989,4.29,2990,4.29,2991,3.007,2992,5.843,2993,5.822,2994,5.001,2995,3.72,2996,3.007,2997,3.007,2998,3.007,2999,3.007,3000,5.05,3001,3.007,3002,3.007,3003,3.007,3004,3.007,3005,3.007,3006,3.007,3007,3.007,3008,3.007,3009,3.007,3010,3.007,3011,3.007,3012,3.007,3013,3.007,3014,3.007,3015,3.007,3016,3.007,3017,3.007,3018,3.007,3019,3.007,3020,3.007,3021,2.785,3022,3.007,3023,3.007,3024,3.007,3025,4.29,3026,3.007,3027,3.007,3028,3.007,3029,3.007,3030,2.785,3031,2.785,3032,3.007,3033,3.007,3034,3.007,3035,3.007,3036,3.007,3037,3.007,3038,3.007,3039,3.007,3040,3.007,3041,3.007,3042,3.007,3043,3.007,3044,3.007,3045,5.001,3046,5.34,3047,4.29,3048,2.785,3049,3.007,3050,3.007,3051,5.05,3052,4.29,3053,4.29,3054,5.766,3055,5.001,3056,4.29,3057,4.29,3058,3.007,3059,3.007,3060,4.29,3061,4.29,3062,2.607,3063,3.007,3064,2.785,3065,2.785,3066,3.007,3067,3.007,3068,3.007,3069,4.29,3070,5.453,3071,4.29,3072,3.007,3073,3.007,3074,3.007,3075,3.007,3076,5.453,3077,4.29,3078,4.29,3079,4.29,3080,3.007,3081,3.007,3082,3.007,3083,3.007,3084,3.007,3085,3.007,3086,4.29,3087,3.007,3088,3.007,3089,4.29,3090,3.007,3091,3.007,3092,4.29,3093,4.29,3094,3.007,3095,3.007,3096,3.007,3097,3.007,3098,3.007,3099,3.007,3100,3.007,3101,5.453,3102,3.007,3103,3.007,3104,5.453,3105,5.453,3106,3.007,3107,4.29,3108,3.007,3109,3.007,3110,3.007,3111,3.007,3154,5.358,3155,5.358,3156,5.358,3157,5.358,3158,5.358,3159,5.358,3160,5.358,3161,3.756,3162,3.756,3163,3.756,3164,3.756,3165,3.756,3166,3.756,3167,3.756,3168,3.756,3169,3.756,3170,3.756,3171,3.756,3172,3.756,3173,3.756,3174,3.756]],["title/classes/RecordSearchRefiner.html",[97,0.075,2993,3.08]],["body/classes/RecordSearchRefiner.html",[0,1.485,3,0.127,4,0.107,5,0.059,8,0.588,9,2.406,10,0.245,11,0.464,12,2.379,17,2.25,18,2.592,19,2.459,22,0.555,32,1.651,36,0.53,38,0.594,39,0.01,40,0.488,41,0.456,42,0.594,44,0.695,48,0.368,52,0.479,58,0.842,60,0.912,79,0.414,80,1.054,81,0.28,82,1.236,84,1.893,88,1.607,90,1.893,94,0.54,95,0.524,96,0.225,97,0.124,98,1.964,99,1.765,102,1.827,105,0.753,107,3.411,108,4.542,109,4.547,110,4.33,111,0.004,112,0.006,113,0.004,127,1.296,132,0.901,147,1.344,149,0.792,158,0.907,159,0.64,187,0.479,188,0.54,189,0.54,206,1.146,209,1.708,221,2.124,226,1.031,240,0.752,242,0.806,345,0.675,389,1.27,400,1.001,407,1.463,422,1.507,438,1.473,464,1.027,506,2.003,507,2.003,519,1.306,531,1.171,582,1.082,628,1.27,674,1.893,675,2.125,680,2.906,725,2.32,747,4.413,759,2.906,830,2.721,831,2.721,832,2.435,865,1.27,872,5.437,914,2.721,961,1.708,968,5.148,976,2.906,987,1.892,991,2.32,1022,2.697,1027,5.032,1045,2.435,1046,3.431,1137,1.708,1540,2.906,1550,2.217,1770,2.435,1909,2.567,1925,3.268,1980,2.32,2009,2.906,2022,2.906,2038,2.721,2039,2.906,2064,2.721,2166,1.964,2205,1.827,2207,1.893,2368,2.435,2391,2.567,2521,2.721,2556,2.32,2595,3.431,2912,5.631,2913,3.138,2917,3.138,2918,5.12,2919,5.12,2920,3.138,2921,4.422,2922,3.138,2923,3.138,2924,3.138,2925,3.138,2926,3.138,2927,3.138,2928,3.138,2929,3.138,2930,3.138,2931,4.422,2932,2.721,2933,3.138,2934,3.138,2935,3.138,2936,3.138,2937,3.138,2938,3.138,2939,3.138,2940,3.138,2941,3.138,2942,2.906,2943,2.721,2944,3.138,2945,3.138,2946,3.138,2947,2.906,2948,3.138,2949,3.138,2950,3.138,2951,3.138,2952,3.138,2953,3.138,2954,5.12,2955,3.138,2956,4.422,2957,5.559,2958,3.138,2959,3.138,2960,3.138,2961,3.138,2962,3.138,2963,3.138,2964,3.138,2965,3.138,2966,3.138,2967,3.138,2968,3.138,2969,3.138,2970,3.138,2971,3.138,2972,4.422,2973,3.138,2974,3.138,2975,3.138,2976,3.138,2977,3.138,2978,3.138,2979,3.138,2980,3.138,2981,3.138,2982,3.138,2983,4.095,2984,4.422,2985,3.138,2986,3.138,2987,4.422,2988,4.422,2989,4.422,2990,4.422,2991,3.138,2992,5.786,2993,5.623,2994,5.12,2995,3.834,2996,3.138,2997,3.138,2998,3.138,2999,3.138,3000,5.148,3001,3.138,3002,3.138,3003,3.138,3004,3.138,3005,3.138,3006,3.138,3007,3.138,3008,3.138,3009,3.138,3010,3.138,3011,3.138,3012,3.138,3013,3.138,3014,3.138,3015,3.138,3016,3.138,3017,3.138,3018,3.138,3019,3.138,3020,3.138,3021,2.906,3022,3.138,3023,3.138,3024,3.138,3025,4.422,3026,3.138,3027,3.138,3028,3.138,3029,3.138,3030,4.742,3031,4.742,3032,5.12,3033,4.422,3034,3.138,3035,3.138,3036,3.138,3037,3.138,3038,3.138,3039,3.138,3040,3.138,3041,3.138,3042,3.138,3043,4.422,3044,3.138,3045,3.138,3046,4.742,3047,3.138,3048,2.906,3049,3.138,3050,3.138,3051,2.906,3052,4.422,3053,4.422,3054,5.86,3055,5.12,3056,4.422,3057,3.138,3058,3.138,3059,3.138,3060,3.138,3061,4.422,3062,2.721,3063,3.138,3064,2.906,3065,2.906,3066,3.138,3067,3.138,3068,3.138,3069,3.138,3070,5.559,3071,4.422,3072,3.138,3073,3.138,3074,3.138,3075,3.138,3076,3.138,3077,3.138,3078,4.422,3079,4.422,3080,3.138,3081,3.138,3082,3.138,3083,3.138,3084,3.138,3085,3.138,3086,3.138,3087,3.138,3088,3.138,3089,4.422,3090,3.138,3091,3.138,3092,4.422,3093,4.422,3094,3.138,3095,3.138,3096,3.138,3097,3.138,3098,3.138,3099,3.138,3100,3.138,3101,3.138,3102,3.138,3103,3.138,3104,3.138,3105,5.559,3106,3.138,3107,3.138,3108,3.138,3109,3.138,3110,3.138,3111,3.138,3175,5.524,3176,5.524,3177,3.449,3178,3.92,3179,3.92,3180,3.92,3181,3.92,3182,3.92,3183,3.92,3184,3.92]],["title/components/RecordSearchRefinerComponent.html",[114,0.121,314,0.896]],["body/components/RecordSearchRefinerComponent.html",[3,0.166,4,0.14,5,0.077,10,0.321,22,0.667,36,0.526,38,0.553,39,0.01,40,0.459,41,0.418,42,0.553,45,0.96,48,0.622,52,0.628,57,0.667,58,0.535,60,0.737,79,0.375,80,1.382,81,0.367,94,0.708,95,0.687,96,0.215,97,0.087,105,0.431,111,0.006,112,0.007,113,0.006,114,0.2,115,1.039,116,1.305,117,1.123,118,1.412,122,1.34,123,1.677,124,1.094,126,0.839,127,1.422,145,1.487,156,0.839,158,1.041,164,2.1,238,0.793,239,1.412,240,1.272,241,1.123,242,1.132,243,1.123,244,1.797,245,0.985,246,1.066,247,1.066,248,1.094,249,1.604,250,1.039,251,1.123,252,1.123,253,0.985,254,1.123,255,0.985,256,0.985,257,1.066,258,1.669,259,1.449,260,1.066,261,1.123,262,1.066,263,1.231,264,1.265,265,0.985,266,1.039,267,1.123,268,1.039,269,1.376,270,1.695,271,1.066,272,1.449,273,0.985,274,1.123,275,1.039,276,1.039,277,1.123,278,0.985,279,1.066,280,0.985,281,1.123,282,0.985,283,1.094,284,1.123,285,1.039,286,1.039,287,1.123,288,1.039,289,1.449,290,1.123,291,1.066,292,1.123,293,1.039,294,1.123,295,1.039,296,1.094,297,1.265,298,1.449,299,0.985,300,1.039,301,1.449,302,1.039,303,1.123,304,1.449,305,1.039,306,1.34,307,1.123,308,1.039,309,1.039,310,1.039,311,1.123,312,1.066,313,1.123,314,1.568,315,1.668,316,1.123,317,1.039,318,1.123,319,1.039,320,1.123,321,1.012,322,1.609,323,1.039,324,1.123,325,1.039,326,1.449,327,0.985,328,1.449,329,1.066,330,1.123,331,0.985,332,1.012,333,1.012,334,1.123,335,1.039,336,1.123,337,0.985,338,1.123,339,0.985,340,1.066,341,1.066,342,0.985,343,1.123,344,1.039,345,0.886,346,1.123,347,1.039,348,0.985,349,1.123,350,1.066,351,1.094,352,1.123,353,1.039,354,1.012,355,1.123,356,1.066,357,0.771,358,1.123,359,0.985,360,1.066,361,1.123,362,1.039,363,1.123,364,1.066,365,1.523,366,1.039,367,1.123,368,1.066,369,1.123,370,1.123,380,1.523,582,1.831,642,3.202,865,1.666,1241,4.12,1258,3.616,1260,3.452,1459,4.867,1532,3.193,1570,4.115,2174,4.115,2337,4.604,2830,4.917,2992,4.917,2993,5.097,3046,5.444,3185,8.225,3186,5.14,3187,6.632,3188,6.632,3189,6.211,3190,7.343,3191,7.343,3192,5.14,3193,5.14,3194,5.14,3195,5.14,3196,7.343,3197,5.14,3198,5.14,3199,5.14,3200,5.14,3201,5.14,3202,5.14,3203,5.14,3204,5.14,3205,6.632,3206,6.632,3207,5.835,3208,7.759,3209,6.632]],["title/components/RelatedObjectDataComponent.html",[114,0.121,317,0.896]],["body/components/RelatedObjectDataComponent.html",[3,0.13,4,0.109,5,0.06,8,0.97,10,0.438,11,0.47,22,0.563,24,1.007,32,1.195,36,0.572,38,0.793,39,0.01,40,0.521,41,0.465,42,0.822,44,0.632,45,0.747,48,0.773,50,1.611,52,0.488,57,0.839,58,0.672,60,0.718,79,0.421,80,1.075,81,0.286,94,0.551,95,0.535,96,0.209,97,0.11,105,0.659,111,0.004,112,0.006,113,0.004,114,0.214,115,0.808,116,1.103,117,0.874,118,1.193,121,1.811,122,1.306,123,1.663,124,0.851,126,0.914,127,1.144,132,1.4,133,1.358,134,1.75,135,1.488,136,1.488,139,1.358,140,1.358,141,1.358,142,1.45,143,1.567,144,1.567,145,1.256,146,1.256,147,1.114,148,1.289,149,1.306,150,1.075,151,1.289,152,1.075,153,0.969,154,1.046,155,1.075,156,0.914,157,1.075,158,1.112,159,0.914,160,1.075,161,1.075,166,0.969,167,1.358,168,1.018,169,0.995,170,1.239,171,1.207,172,0.969,173,0.969,174,0.969,175,0.995,176,1.323,177,0.851,178,0.897,179,0.995,180,0.944,181,0.897,182,0.995,183,0.92,184,0.995,185,0.851,186,0.808,187,0.684,188,0.771,189,0.771,190,0.995,191,0.944,192,0.92,193,0.969,194,1.358,195,0.851,198,0.995,199,0.969,200,1.488,201,0.995,202,0.995,203,0.897,204,0.995,205,1.538,206,0.829,209,2.816,210,2.262,214,1.493,216,1.493,220,2.366,221,2.835,222,2.619,224,2.776,225,2.167,228,2.484,238,0.617,239,1.193,240,1.074,241,0.874,242,1.145,243,0.874,244,1.67,245,0.767,246,0.829,247,0.829,248,0.851,249,1.413,250,0.808,251,0.874,252,0.874,253,0.767,254,0.874,255,0.767,256,0.767,257,0.829,258,1.623,259,1.224,260,0.829,261,0.874,262,0.829,263,1.084,264,1.114,265,0.767,266,0.808,267,0.874,268,0.808,269,1.162,270,1.531,271,0.829,272,1.224,273,0.767,274,0.874,275,0.808,276,0.808,277,0.874,278,0.767,279,0.829,280,0.767,281,0.874,282,0.767,283,0.851,284,0.874,285,0.808,286,0.808,287,0.874,288,0.808,289,1.224,290,0.874,291,0.829,292,0.874,293,0.808,294,0.874,295,0.808,296,0.851,297,1.114,298,1.224,299,0.767,300,0.808,301,1.224,302,0.808,303,0.874,304,1.224,305,0.808,306,1.132,307,0.874,308,0.808,309,0.808,310,0.808,311,0.874,312,0.829,313,0.874,314,0.808,315,0.767,316,0.874,317,1.415,318,0.874,319,0.808,320,0.874,321,0.787,322,1.453,323,0.808,324,0.874,325,0.808,326,1.224,327,0.767,328,1.224,329,0.829,330,0.874,331,0.767,332,0.787,333,0.787,334,0.874,335,0.808,336,0.874,337,0.767,338,0.874,339,0.767,340,0.829,341,0.829,342,0.767,343,0.874,344,0.808,345,0.689,346,0.874,347,0.808,348,0.767,349,0.874,350,0.829,351,0.851,352,0.874,353,0.808,354,0.787,355,0.874,356,0.829,357,0.6,358,0.874,359,0.767,360,0.829,361,0.874,362,0.808,363,0.874,364,0.829,365,1.341,366,0.808,367,0.874,368,0.829,369,0.874,370,0.874,371,1.697,380,0.829,383,0.969,399,0.652,400,1.021,483,1.409,485,1.296,525,0.652,582,1.104,634,1.585,642,2.705,673,2.22,674,1.931,675,2.167,701,2.522,750,2.366,865,1.296,939,1.687,961,3.212,987,1.919,1139,2.366,1223,3.239,1316,2.916,1331,2.916,1449,2.366,1550,2.262,1699,2.366,1710,2.484,1721,2.484,1772,2.484,1795,2.619,1810,2.484,2005,4.484,2149,2.366,2395,3.036,2560,2.619,2571,4.484,2572,3.202,2573,2.965,2574,3.202,2575,3.202,2576,3.202,2578,3.202,2652,2.776,2653,2.776,2654,4.928,2655,3.202,2656,3.202,2657,2.965,2658,2.776,2667,4.928,2668,3.202,2669,3.518,2670,3.202,2671,3.202,2694,2.776,2776,3.889,2777,3.668,2778,2.806,3123,4.928,3124,3.518,3125,6.163,3127,4.928,3128,3.518,3131,3.518,3132,3.518,3133,3.518,3136,2.965,3137,3.518,3138,3.518,3142,4.928,3143,3.518,3144,3.518,3210,3.999,3211,5.602,3212,7.005,3213,5.602,3214,3.999,3215,5.688,3216,3.999,3217,3.999,3218,3.999,3219,5.602,3220,3.999,3221,5.176,3222,3.518,3223,3.999,3224,3.999,3225,3.999,3226,3.999,3227,3.999,3228,5.602,3229,5.602,3230,5.602,3231,5.602,3232,7.005,3233,7.005,3234,5.602,3235,6.163,3236,5.602,3237,5.602,3238,5.602,3239,5.602]],["title/components/RelatedObjectSelectorComponent.html",[114,0.121,319,0.896]],["body/components/RelatedObjectSelectorComponent.html",[3,0.131,4,0.111,5,0.061,8,0.977,10,0.441,11,0.474,17,1.312,22,0.568,24,1.009,36,0.571,38,0.7,39,0.01,40,0.522,41,0.461,42,0.757,44,0.611,45,0.756,48,0.775,50,1.613,52,0.495,57,0.845,58,0.677,60,0.782,79,0.403,80,1.089,81,0.289,88,1.178,89,4.043,90,3.143,91,3.923,92,2.108,94,0.558,95,0.541,96,0.211,97,0.111,105,0.622,111,0.005,112,0.006,113,0.005,114,0.21,115,0.818,116,1.112,117,0.885,118,1.203,121,1.814,122,1.142,123,1.664,124,0.862,126,0.661,127,1.247,132,1.395,133,1.37,134,1.755,135,1.498,136,1.498,139,1.37,140,1.37,141,1.37,142,1.661,143,1.577,144,1.577,145,1.267,146,1.267,147,1.121,148,1.3,149,1.315,150,1.089,151,1.3,152,1.089,153,0.981,154,1.055,155,1.089,156,0.922,157,1.089,158,1.139,159,1.062,160,1.089,161,1.089,164,1.655,166,0.981,167,1.37,168,1.027,169,1.007,170,1.248,171,1.215,172,0.981,173,0.981,174,0.981,175,1.007,176,1.335,177,0.862,178,0.908,179,1.007,180,0.956,181,0.908,182,1.007,183,0.932,184,1.007,185,0.862,186,0.818,187,0.69,188,0.778,189,0.778,190,1.007,191,0.956,192,0.932,193,0.981,194,1.37,195,0.862,198,1.007,199,0.981,200,1.498,201,1.007,202,1.007,203,0.908,204,1.007,205,1.557,206,0.84,214,1.512,216,1.512,221,2.849,222,2.652,223,3.003,224,2.811,225,2.195,228,2.516,238,0.625,239,1.203,240,1.083,241,0.885,242,1.081,243,0.885,244,1.677,245,0.776,246,0.84,247,0.84,248,0.862,249,1.422,250,0.818,251,0.885,252,0.885,253,0.776,254,0.885,255,0.776,256,0.776,257,0.84,258,1.627,259,1.235,260,0.84,261,0.885,262,0.84,263,1.091,264,1.121,265,0.776,266,0.818,267,0.885,268,0.818,269,1.172,270,1.539,271,0.84,272,1.235,273,0.776,274,0.885,275,0.818,276,0.818,277,0.885,278,0.776,279,0.84,280,0.776,281,0.885,282,0.776,283,0.862,284,0.885,285,0.818,286,0.818,287,0.885,288,0.818,289,1.235,290,0.885,291,0.84,292,0.885,293,0.818,294,0.885,295,0.818,296,0.862,297,1.276,298,1.235,299,0.776,300,0.818,301,1.235,302,0.818,303,0.885,304,1.235,305,0.818,306,1.142,307,0.885,308,0.818,309,0.818,310,0.818,311,0.885,312,0.84,313,0.885,314,0.818,315,1.248,316,0.885,317,0.818,318,0.885,319,1.423,320,0.885,321,0.797,322,1.461,323,0.818,324,0.885,325,0.818,326,1.235,327,0.776,328,1.235,329,0.84,330,0.885,331,0.776,332,0.797,333,0.797,334,0.885,335,0.818,336,0.885,337,0.776,338,0.885,339,0.776,340,0.84,341,0.84,342,0.776,343,0.885,344,0.818,345,0.698,346,0.885,347,0.818,348,0.776,349,0.885,350,0.84,351,1.386,352,0.885,353,0.818,354,0.797,355,0.885,356,0.84,357,0.608,358,0.885,359,0.776,360,0.84,361,0.885,362,0.818,363,0.885,364,0.84,365,1.35,366,0.818,367,0.885,368,0.84,369,0.885,370,0.885,371,1.498,373,1.798,380,1.172,383,0.981,399,0.661,438,0.736,525,0.661,582,1.118,587,1.936,642,2.728,673,2.239,701,1.824,865,2.109,933,2.545,950,4.262,980,3.242,1022,2.383,1023,5.726,1223,2.831,1258,3.282,1316,2.942,1331,2.942,1433,2.396,1449,2.396,1459,4.541,1699,2.396,1710,2.516,1721,3.51,2219,3.563,2220,3.563,2342,3.563,2395,3.063,2560,2.652,2652,2.811,2653,2.811,2657,3.003,2694,2.811,2776,3.923,2777,3.701,2778,2.831,3048,3.003,3215,3.563,3240,4.05,3241,5.651,3242,5.651,3243,7.044,3244,6.509,3245,4.05,3246,4.05,3247,4.05,3248,4.05,3249,4.05,3250,4.05,3251,4.05,3252,4.05,3253,4.05,3254,4.05,3255,4.05,3256,4.05,3257,4.05,3258,4.05,3259,4.05,3260,4.05,3261,4.05,3262,5.651,3263,5.651,3264,5.651,3265,7.044,3266,5.651,3267,4.05,3268,4.05,3269,4.05,3270,4.05,3271,4.05,3272,4.05,3273,4.05,3274,4.05,3275,4.05,3276,4.05,3277,4.05,3278,4.05,3279,4.05,3280,4.05,3281,4.05,3282,4.05,3283,4.05,3284,4.05,3285,7.044,3286,4.972,3287,5.651]],["title/classes/RepeatableComponent.html",[97,0.075,1424,2.404]],["body/classes/RepeatableComponent.html",[3,0.116,4,0.097,5,0.054,8,1.139,10,0.38,11,0.434,13,0.8,22,0.519,24,1.047,35,2.178,36,0.549,38,0.759,39,0.01,40,0.46,41,0.434,42,0.791,44,0.645,45,0.964,48,0.772,50,1.502,52,0.741,57,0.67,58,0.734,60,0.905,79,0.397,81,0.369,94,0.491,95,0.477,96,0.238,97,0.129,105,0.703,111,0.004,112,0.006,113,0.004,114,0.182,121,1.724,123,0.939,125,2.266,126,0.842,132,1.344,133,1.251,134,1.816,135,1.397,136,1.397,139,1.251,140,1.251,141,1.251,142,1.492,143,1.839,144,1.471,146,1.492,147,0.615,156,0.582,158,1.043,159,1.268,164,2.11,166,0.865,167,1.251,168,1.413,169,0.887,170,1.164,171,1.133,172,0.865,173,0.865,174,0.865,175,0.887,176,1.219,177,0.759,178,0.8,179,0.887,180,0.842,181,0.8,182,0.887,183,1.188,184,0.887,185,0.759,186,1.043,187,0.631,188,0.711,189,0.711,190,0.887,191,0.842,192,0.821,193,0.865,194,1.251,195,0.759,198,0.887,199,0.865,200,0.821,201,0.887,202,0.887,203,0.8,204,0.887,205,1.372,208,1.156,214,2.266,216,2.266,221,1.372,226,1.374,242,0.52,297,1.146,321,0.702,322,1.259,327,0.99,371,1.625,373,1.318,380,0.74,383,1.251,386,1.332,389,2.156,398,1.257,399,0.582,409,1.294,418,1.222,423,1.372,424,1.372,425,1.257,438,1.523,442,1.769,448,1.125,475,2.344,560,1.011,582,2.095,588,1.372,620,1.038,626,1.222,628,1.156,673,1.414,865,2.385,994,2.791,1087,2.644,1131,2.645,1137,2.644,1139,2.111,1140,3.762,1158,2.336,1197,2.216,1236,2.856,1244,1.933,1248,4.463,1249,3.894,1250,1.933,1251,3.463,1252,3.332,1253,3.989,1254,3.208,1255,2.587,1258,2.406,1260,1.857,1261,3.208,1262,2.476,1263,4.134,1264,2.645,1265,4.623,1266,2.856,1267,2.856,1268,4.134,1269,2.476,1270,2.856,1271,2.856,1272,2.856,1273,2.856,1274,2.856,1275,2.856,1276,2.856,1277,2.856,1278,2.856,1279,2.856,1280,2.856,1281,2.856,1282,2.856,1283,2.856,1284,2.856,1285,2.856,1286,2.856,1287,2.856,1288,3.585,1289,2.856,1290,4.859,1291,2.645,1292,2.856,1293,2.856,1294,2.856,1295,2.856,1296,2.856,1297,4.134,1298,3.829,1299,3.829,1300,2.856,1301,4.134,1302,2.856,1303,2.856,1304,2.856,1305,2.856,1306,2.856,1307,2.856,1308,4.134,1309,4.932,1310,2.856,1311,2.856,1312,2.856,1313,2.856,1314,2.856,1315,2.856,1316,3.831,1317,3.382,1318,4.134,1319,3.382,1320,4.859,1321,4.134,1322,2.856,1323,2.856,1324,2.856,1325,2.856,1326,2.856,1327,5.326,1328,4.134,1329,4.859,1330,4.859,1331,3.159,1332,2.856,1333,2.856,1334,4.134,1335,4.134,1336,4.618,1337,2.856,1338,2.856,1339,2.856,1340,4.134,1341,2.856,1342,2.856,1343,2.856,1344,2.856,1345,5.326,1346,2.856,1347,2.856,1348,2.856,1349,4.134,1350,2.856,1351,2.856,1352,2.856,1353,4.134,1354,2.856,1355,2.856,1356,2.856,1357,2.856,1358,2.856,1359,2.856,1360,2.856,1361,2.92,1362,2.856,1363,2.856,1364,2.856,1365,2.856,1366,2.856,1367,2.856,1368,2.856,1369,2.856,1370,2.856,1371,2.856,1372,2.856,1373,4.134,1374,3.208,1375,2.856,1376,2.856,1377,2.856,1378,2.856,1379,2.856,1380,2.856,1381,2.856,1382,2.856,1383,2.856,1384,2.476,1385,2.856,1386,2.856,1387,2.856,1388,5.326,1389,4.134,1390,4.134,1391,2.856,1392,2.856,1393,2.856,1394,2.856,1395,4.859,1396,2.856,1397,2.856,1398,2.336,1399,2.476,1400,2.856,1401,4.134,1402,4.859,1403,4.134,1404,4.134,1405,2.856,1406,2.856,1407,2.856,1408,2.856,1409,2.476,1410,4.134,1411,2.856,1412,2.856,1413,2.856,1414,2.476,1415,2.856,1416,2.856,1417,2.856,1418,2.856,1419,2.856,1420,2.856,1421,2.856,1422,2.336,1423,4.859,1424,3.605,1425,3.591,1426,3.208,1427,3.591,1428,3.208,1429,4.859,1430,2.856,1431,2.856,1432,4.859,1433,2.111,1434,2.336,1435,2.856,1436,2.856,1437,2.018,1438,2.018,1439,2.018,1440,2.92,1441,4.134,1442,2.856,1443,2.856,1444,2.856,1445,2.856,1446,2.856,1447,2.856,1448,2.856,1449,2.111,1450,4.134,1451,4.134,1452,2.856,1453,2.856,1454,5.326,1455,5.326,1456,5.326,1457,4.859,1458,4.134,1459,3.591,1460,2.856,1461,2.856,1462,4.859,1463,4.134,1464,2.856,1465,2.856,1466,2.856,1467,2.856,1468,2.856,1469,2.856,1470,2.856,1471,2.856,1472,2.856,1473,2.856,1474,2.856,1475,2.856,1476,2.856,1477,2.856,1478,4.134,1479,4.134,1480,2.856,1481,2.856,1482,2.856,1483,4.134,1484,2.856,1485,2.856,1486,2.856,1487,2.856,1488,2.856,1489,2.856,1490,2.856,1491,2.856,1492,2.856,1493,2.856,1494,2.856,1495,4.134,1496,5.892,1497,2.856,1498,2.856,1499,2.856,1500,2.856,1501,2.856,3288,3.829,3289,3.829,3290,3.567,3291,3.567,3292,3.567,3293,3.567]],["title/components/RepeatableGroupComponent.html",[114,0.121,323,0.896]],["body/components/RepeatableGroupComponent.html",[3,0.119,4,0.1,5,0.055,8,0.925,10,0.421,11,0.442,13,1.511,22,0.53,24,0.988,36,0.57,38,0.767,39,0.01,40,0.55,41,0.476,42,0.799,44,0.608,45,0.685,48,0.776,50,1.62,52,0.753,57,0.874,58,0.701,60,0.685,79,0.315,81,0.262,94,0.505,95,0.49,96,0.2,97,0.146,105,0.308,111,0.004,112,0.006,113,0.004,114,0.218,115,0.741,116,1.213,117,0.801,118,1.121,121,1.767,122,1.064,123,1.658,124,0.781,126,1.006,127,1.091,132,1.351,133,1.276,134,1.559,135,1.418,136,1.418,139,1.276,140,1.276,141,1.276,142,1.716,143,1.8,144,1.494,145,1.181,146,1.511,147,1.46,148,1.212,149,0.741,150,0.986,151,0.844,152,0.986,153,0.889,154,0.685,155,0.986,156,1.212,157,0.986,158,1.011,159,0.598,160,0.986,161,0.986,164,2.152,166,0.889,167,1.276,168,1.225,169,0.912,170,1.182,171,0.983,172,0.889,173,0.889,174,0.889,175,0.912,176,1.244,177,0.781,178,0.822,179,0.912,180,0.866,181,0.822,182,0.912,183,1.905,184,0.912,185,1.723,186,0.741,187,0.753,188,0.849,189,0.849,190,0.912,191,0.866,192,0.844,193,0.889,194,1.8,195,0.781,198,0.912,199,0.889,200,0.844,201,0.912,202,0.912,203,0.822,204,0.912,226,1.607,238,0.566,239,1.121,240,1.01,241,0.801,242,0.983,243,0.801,244,1.623,245,0.703,246,0.76,247,0.76,248,0.781,249,1.347,250,0.741,251,0.801,252,0.801,253,0.703,254,0.801,255,0.703,256,0.703,257,0.76,258,1.541,259,1.151,260,0.76,261,0.801,262,0.76,263,1.034,264,1.062,265,0.703,266,0.741,267,0.801,268,0.741,269,1.092,270,1.472,271,0.76,272,1.151,273,0.703,274,0.801,275,0.741,276,1.501,277,1.623,278,0.703,279,0.76,280,0.703,281,0.801,282,0.703,283,0.781,284,0.801,285,0.741,286,0.741,287,0.801,288,0.741,289,1.151,290,0.801,291,0.76,292,0.801,293,0.741,294,0.801,295,0.741,296,0.781,297,1.426,298,1.151,299,0.703,300,0.741,301,1.151,302,0.741,303,0.801,304,1.151,305,0.741,306,1.064,307,0.801,308,0.741,309,0.741,310,0.741,311,0.801,312,0.76,313,0.801,314,0.741,315,0.703,316,0.801,317,0.741,318,0.801,319,0.741,320,0.801,321,0.722,322,1.624,323,1.582,324,0.801,325,0.741,326,1.151,327,0.703,328,1.151,329,0.76,330,0.801,331,0.703,332,0.722,333,0.722,334,0.801,335,0.741,336,0.801,337,0.703,338,0.801,339,0.703,340,0.76,341,0.76,342,0.703,343,0.801,344,0.741,345,0.632,346,0.801,347,0.741,348,0.703,349,0.801,350,0.76,351,0.781,352,0.801,353,0.741,354,0.722,355,0.801,356,0.76,357,0.55,358,0.801,359,0.703,360,0.76,361,0.801,362,0.741,363,0.801,364,0.76,365,1.278,366,0.741,367,0.801,368,0.76,369,0.801,370,0.801,371,1.212,373,1.953,380,0.76,381,1.125,382,1.221,383,0.889,389,1.997,448,2.125,464,2.089,519,2.803,525,0.598,626,2.308,889,1.909,987,2.111,994,2.172,1022,2.599,1137,3.334,1223,4.184,1235,3.116,1240,1.987,1265,4.036,1269,3.656,1424,4.148,1425,2.169,1427,2.169,1437,3.486,1438,3.486,1439,3.486,1440,3.486,1879,4.412,1980,4.222,2056,3.226,2057,3.226,2058,3.226,2059,2.935,2060,2.935,2061,2.935,2062,2.718,2063,7.283,2064,5.746,2065,5.423,2066,5.222,2067,6.384,2068,5.423,2069,6.686,2070,7.347,2071,7.015,2072,7.015,2073,7.571,2074,6.384,2075,7.015,2076,5.423,2077,5.423,2078,4.934,2087,2.277,2088,4.634,3288,3.905,3289,3.905,3294,2.935,3295,2.935,3296,2.935,3297,3.666,3298,2.935]],["title/components/RepeatableTextfieldComponent.html",[114,0.121,325,0.896]],["body/components/RepeatableTextfieldComponent.html",[3,0.125,4,0.105,5,0.058,8,1.19,10,0.431,11,0.458,13,1.42,22,0.548,24,0.999,36,0.578,38,0.835,39,0.01,40,0.527,41,0.47,42,0.853,44,0.642,45,0.719,48,0.8,50,1.629,52,0.922,57,0.894,58,0.756,60,0.808,79,0.352,81,0.275,94,0.53,95,0.515,96,0.257,97,0.135,105,0.323,111,0.004,112,0.006,113,0.004,114,0.217,115,0.778,116,1.074,117,0.841,118,1.161,121,1.78,122,1.102,123,1.662,124,0.82,126,1.186,127,1.121,129,2.297,132,1.384,133,1.322,134,1.808,135,1.458,136,1.458,139,1.322,140,1.322,141,1.322,142,1.809,143,1.83,144,1.535,145,1.223,146,1.223,147,1.301,148,1.255,149,1.469,150,1.036,151,1.255,152,1.036,153,0.933,154,0.719,155,1.036,156,0.89,157,1.036,158,1.031,159,0.628,160,1.036,161,1.036,164,2.815,166,0.933,167,1.322,168,1.504,169,0.958,170,1.214,171,1.018,172,0.933,173,0.933,174,0.933,175,0.958,176,1.288,177,0.82,178,0.864,179,0.958,180,0.909,181,0.864,182,0.958,183,0.886,184,0.958,185,1.653,186,0.778,187,0.773,188,0.872,189,0.872,190,0.958,191,0.909,192,0.886,193,0.933,194,1.322,195,0.82,198,0.958,199,0.933,200,0.886,201,0.958,202,0.958,203,0.864,204,0.958,206,0.799,214,2.364,216,2.364,221,2.796,238,0.594,239,1.161,240,1.046,241,0.841,242,1.061,243,0.841,244,1.65,245,0.738,246,0.799,247,0.799,248,0.82,249,1.384,250,0.778,251,0.841,252,0.841,253,0.738,254,0.841,255,0.738,256,0.738,257,0.799,258,1.561,259,1.192,260,0.799,261,0.841,262,0.799,263,1.062,264,1.091,265,0.738,266,0.778,267,0.841,268,0.778,269,1.131,270,1.505,271,0.799,272,1.192,273,0.738,274,0.841,275,0.778,276,0.778,277,0.841,278,0.738,279,0.799,280,0.738,281,0.841,282,0.738,283,0.82,284,0.841,285,0.778,286,0.778,287,0.841,288,0.778,289,1.192,290,0.841,291,0.799,292,0.841,293,0.778,294,0.841,295,1.102,296,1.161,297,1.301,298,1.192,299,0.738,300,0.778,301,1.192,302,0.778,303,0.841,304,1.192,305,0.778,306,1.102,307,0.841,308,0.778,309,0.778,310,0.778,311,0.841,312,0.799,313,0.841,314,0.778,315,0.738,316,0.841,317,0.778,318,0.841,319,0.778,320,0.841,321,0.758,322,1.566,323,0.778,324,0.841,325,1.526,326,1.192,327,0.738,328,1.192,329,0.799,330,0.841,331,0.738,332,0.758,333,0.758,334,0.841,335,0.778,336,0.841,337,0.738,338,0.841,339,0.738,340,0.799,341,0.799,342,0.738,343,0.841,344,1.102,345,0.664,346,0.841,347,1.102,348,0.738,349,0.841,350,0.799,351,0.82,352,0.841,353,0.778,354,0.758,355,0.841,356,0.799,357,0.578,358,0.841,359,0.738,360,0.799,361,0.841,362,0.778,363,0.841,364,0.799,365,1.314,366,0.778,367,0.841,368,0.799,369,0.841,370,0.841,371,1.673,373,2.211,380,0.799,381,1.182,382,1.283,383,1.535,400,0.983,401,0.864,438,0.7,445,2.587,448,1.997,464,1.659,560,2.14,612,1.978,620,1.587,981,3.572,994,2.232,1235,4.076,1240,2.087,1265,2.522,1374,2.392,1424,4.208,1425,3.748,1426,2.392,1427,3.748,1428,2.392,1437,3.582,1438,3.582,1439,3.582,1440,3.582,1663,3.748,1664,2.392,2066,4.511,2087,2.392,2556,2.279,2589,2.855,2590,3.787,2591,2.855,2593,4.044,2595,2.392,2596,2.855,2597,5.598,2598,4.696,2599,2.855,2600,4.044,2601,4.044,2602,4.044,2603,4.044,2604,4.044,2605,3.787,2606,4.044,2607,4.044,2608,5.108,2609,2.855,2610,4.044,2611,4.044,2612,4.044,2613,2.673,2614,4.044,3288,5.108,3289,5.108,3294,3.083,3295,3.083,3296,3.083,3298,3.083,3299,3.851,3300,3.851,3301,3.851,3302,3.851]],["title/components/RepeatableVocabComponent.html",[114,0.121,327,0.851]],["body/components/RepeatableVocabComponent.html",[3,0.1,4,0.084,5,0.046,8,1.086,10,0.436,11,0.389,13,1.248,22,0.465,24,1.025,35,1.953,36,0.56,38,0.714,39,0.01,40,0.493,41,0.453,42,0.75,44,0.633,45,1.156,48,0.749,50,1.584,52,0.68,57,0.804,58,0.753,60,0.876,79,0.381,81,0.331,94,0.424,95,0.411,96,0.235,97,0.123,105,0.685,111,0.003,112,0.005,113,0.003,114,0.181,115,0.622,116,0.911,117,0.672,118,0.986,121,1.742,122,0.936,123,1.645,124,0.655,125,2.078,126,0.908,127,0.985,132,1.384,133,1.122,134,1.765,135,1.281,136,1.281,139,1.122,140,1.122,141,1.122,142,1.389,143,1.754,144,1.349,145,1.038,146,1.565,147,1.067,148,1.065,149,0.622,150,0.827,151,0.708,152,0.827,153,0.746,154,0.575,155,0.827,156,0.908,157,0.827,158,1.026,159,1.243,160,0.827,161,0.827,164,1.892,166,0.746,167,1.122,168,1.354,169,0.765,170,1.067,171,1.039,172,0.746,173,0.746,174,0.746,175,0.765,176,1.093,177,0.655,178,0.69,179,0.765,180,0.727,181,0.69,182,0.765,183,1.065,184,0.765,185,0.655,186,0.936,187,0.565,188,0.637,189,0.637,190,0.765,191,0.727,192,0.708,193,0.746,194,1.122,195,0.655,198,0.765,199,0.746,200,0.708,201,0.765,202,0.765,203,0.69,204,0.765,205,1.183,208,0.997,214,2.078,216,2.078,221,1.183,226,1.303,238,0.475,239,0.986,240,0.888,241,0.672,242,0.969,243,0.672,244,1.524,245,0.59,246,0.638,247,0.638,248,0.655,249,1.216,250,0.622,251,0.672,252,0.672,253,0.59,254,0.672,255,0.59,256,0.59,257,0.638,258,1.466,259,1.012,260,0.638,261,0.672,262,0.638,263,0.933,264,0.959,265,0.59,266,0.622,267,0.672,268,0.622,269,0.96,270,1.353,271,0.638,272,1.012,273,0.59,274,0.672,275,0.622,276,0.622,277,0.672,278,0.59,279,0.638,280,0.59,281,0.672,282,0.59,283,0.655,284,0.672,285,0.622,286,0.622,287,0.672,288,0.622,289,1.012,290,0.672,291,0.638,292,0.672,293,0.622,294,0.672,295,0.622,296,0.655,297,1.247,298,1.012,299,0.59,300,0.622,301,1.012,302,0.622,303,0.672,304,1.012,305,0.622,306,0.936,307,0.672,308,0.622,309,0.622,310,0.622,311,0.672,312,0.638,313,0.672,314,0.622,315,0.59,316,0.672,317,0.622,318,0.672,319,0.622,320,0.672,321,0.911,322,1.545,323,0.622,324,0.672,325,0.622,326,1.012,327,1.338,328,1.012,329,0.638,330,0.672,331,0.59,332,0.606,333,0.606,334,0.672,335,0.622,336,0.672,337,0.59,338,0.672,339,0.59,340,0.638,341,0.638,342,0.59,343,0.672,344,0.622,345,0.53,346,0.672,347,0.622,348,0.59,349,0.672,350,0.638,351,0.655,352,0.672,353,0.622,354,0.606,355,0.672,356,0.638,357,0.462,358,0.672,359,0.59,360,0.638,361,0.672,362,0.622,363,0.672,364,0.638,365,1.155,366,0.622,367,0.672,368,0.638,369,0.672,370,0.672,371,1.281,373,1.781,380,0.638,383,1.122,386,1.149,389,2.007,398,1.084,399,0.502,409,1.116,418,1.054,423,1.183,424,1.183,425,1.084,438,1.483,442,1.586,448,1.755,475,2.182,560,0.872,582,1.998,588,1.183,620,0.895,626,1.586,673,1.219,865,2.261,994,2.779,1087,2.425,1131,2.281,1137,2.425,1139,1.821,1140,3.502,1158,2.015,1197,1.911,1236,2.463,1244,1.668,1248,4.33,1249,3.732,1250,1.668,1251,3.224,1252,3.102,1253,3.782,1254,2.876,1255,2.319,1258,2.158,1260,1.602,1261,2.876,1262,2.136,1263,3.707,1264,2.281,1265,4.349,1266,2.463,1267,2.463,1268,3.707,1269,2.136,1270,2.463,1271,2.463,1272,2.463,1273,2.463,1274,2.463,1275,2.463,1276,2.463,1277,2.463,1278,2.463,1279,2.463,1280,2.463,1281,2.463,1282,2.463,1283,2.463,1284,2.463,1285,2.463,1286,2.463,1287,2.463,1288,3.214,1289,2.463,1290,4.456,1291,2.281,1292,2.463,1293,2.463,1294,2.463,1295,2.463,1296,2.463,1297,3.707,1298,3.433,1299,3.433,1300,2.463,1301,3.707,1302,2.463,1303,2.463,1304,2.463,1305,2.463,1306,2.463,1307,2.463,1308,3.707,1309,4.591,1310,2.463,1311,2.463,1312,2.463,1313,2.463,1314,2.463,1315,2.463,1316,3.632,1317,3.032,1318,3.707,1319,3.032,1320,4.456,1321,3.707,1322,2.463,1323,2.463,1324,2.463,1325,2.463,1326,2.463,1327,4.957,1328,3.707,1329,4.456,1330,4.456,1331,2.898,1332,2.463,1333,2.463,1334,3.707,1335,3.707,1336,4.299,1337,2.463,1338,2.463,1339,2.463,1340,3.707,1341,2.463,1342,2.463,1343,2.463,1344,2.463,1345,4.957,1346,2.463,1347,2.463,1348,2.463,1349,3.707,1350,2.463,1351,2.463,1352,2.463,1353,3.707,1354,2.463,1355,2.463,1356,2.463,1357,2.463,1358,2.463,1359,2.463,1360,2.463,1361,2.618,1362,2.463,1363,2.463,1364,2.463,1365,2.463,1366,2.463,1367,2.463,1368,2.463,1369,2.463,1370,2.463,1371,2.463,1372,2.463,1373,3.707,1374,2.876,1375,2.463,1376,2.463,1377,2.463,1378,2.463,1379,2.463,1380,2.463,1381,2.463,1382,2.463,1383,2.463,1384,2.136,1385,2.463,1386,2.463,1387,2.463,1388,4.957,1389,3.707,1390,3.707,1391,2.463,1392,2.463,1393,2.463,1394,2.463,1395,4.456,1396,2.463,1397,2.463,1398,2.015,1399,2.136,1400,2.463,1401,3.707,1402,4.456,1403,3.707,1404,3.707,1405,2.463,1406,2.463,1407,2.463,1408,2.463,1409,2.136,1410,3.707,1411,2.463,1412,2.463,1413,2.463,1414,2.136,1415,2.463,1416,2.463,1417,2.463,1418,2.463,1419,2.463,1420,2.463,1421,2.463,1422,2.015,1423,4.456,1424,4.037,1425,3.294,1426,2.876,1427,3.294,1428,2.876,1429,4.456,1430,2.463,1431,2.463,1432,4.957,1433,1.821,1434,2.015,1435,2.463,1436,2.463,1437,3.148,1438,3.148,1439,3.148,1440,3.502,1441,3.707,1442,2.463,1443,2.463,1444,2.463,1445,2.463,1446,2.463,1447,2.463,1448,2.463,1449,1.821,1450,3.707,1451,3.707,1452,2.463,1453,2.463,1454,4.957,1455,4.957,1456,4.957,1457,4.456,1458,3.707,1459,3.294,1460,2.463,1461,2.463,1462,4.456,1463,3.707,1464,2.463,1465,2.463,1466,2.463,1467,2.463,1468,2.463,1469,2.463,1470,2.463,1471,2.463,1472,2.463,1473,2.463,1474,2.463,1475,2.463,1476,2.463,1477,2.463,1478,3.707,1479,3.707,1480,2.463,1481,2.463,1482,2.463,1483,3.707,1484,2.463,1485,2.463,1486,2.463,1487,2.463,1488,2.463,1489,2.463,1490,2.463,1491,2.463,1492,2.463,1493,2.463,1494,2.463,1495,3.707,1496,5.586,1497,2.463,1498,2.463,1499,2.463,1500,2.463,1501,2.463,3288,3.433,3289,3.433,3294,2.463,3295,2.463,3296,2.463,3298,2.463,3303,3.077,3304,3.077]],["title/classes/Report.html",[97,0.075,3305,3.289]],["body/classes/Report.html",[3,0.217,4,0.183,5,0.101,10,0.419,11,0.655,36,0.567,39,0.01,40,0.517,41,0.467,44,0.681,96,0.253,97,0.133,111,0.008,112,0.009,113,0.008,168,1.502,628,2.172,961,3.774,1014,4.164,1022,3.484,2199,3.967,2337,5.735,2658,5.735,2750,4.97,2751,4.97,2752,4.97,2753,5.898,2754,5.898,2755,5.898,2756,5.898,3305,5.789,3306,7.021,3307,7.268,3308,6.704,3309,4.97]],["title/modules/ReportModule.html",[919,1.478,3310,3.289]],["body/modules/ReportModule.html",[3,0.205,4,0.173,5,0.095,39,0.01,79,0.458,81,0.452,82,1.995,88,1.841,96,0.205,97,0.108,111,0.007,112,0.008,113,0.007,170,1.213,238,0.977,329,1.864,390,2.362,399,1.032,401,1.419,634,2.507,919,2.108,921,2.849,922,2.756,923,3.893,924,3.412,925,3.758,926,3.055,931,3.899,932,3.516,933,2.849,934,2.756,936,3.398,937,3.78,938,3.78,939,2.668,940,3.78,941,3.928,942,3.928,945,5.065,946,3.169,947,3.293,948,5.065,949,5.065,1611,6.041,1612,5.065,2626,6.487,3310,6.684,3311,5.566,3312,5.566,3313,6.327,3314,5.566,3315,5.566,3316,6.419,3317,6.327,3318,6.327,3319,6.327]],["title/classes/ReportResults.html",[97,0.075,3309,3.289]],["body/classes/ReportResults.html",[3,0.219,4,0.184,5,0.101,10,0.422,11,0.658,36,0.558,39,0.01,40,0.422,41,0.46,44,0.643,96,0.254,97,0.133,111,0.008,112,0.009,113,0.008,168,1.597,628,2.187,961,3.714,1014,5.145,1022,2.845,2199,3.992,2337,4.684,2658,4.684,2745,5.936,2746,5.936,2747,5.936,2750,6.141,2751,6.141,2752,6.141,3305,5.002,3306,6.947,3307,5.936,3309,5.81,3320,6.747]],["title/injectables/ReportService.html",[0,1.193,3316,3.289]],["body/injectables/ReportService.html",[0,1.816,2,2.552,3,0.171,4,0.144,5,0.08,7,2.865,8,1.013,9,3.905,10,0.331,11,0.567,12,3.102,13,1.514,14,3.819,15,3.66,16,3.819,17,2.412,18,3.24,19,3.279,20,3.819,21,3.383,22,0.679,24,1.012,25,4.208,26,3.66,27,4.033,28,4.208,29,3.819,30,3.819,31,3.261,32,2.018,33,2.865,34,5.406,35,3.138,36,0.588,37,4.232,38,0.917,39,0.01,40,0.543,41,0.481,42,0.917,44,0.643,46,4.232,48,0.814,49,4.64,50,1.66,51,3.128,52,0.646,53,2.865,54,3.874,55,3.66,56,3.128,57,0.876,58,0.702,59,2.865,60,0.587,61,3.128,62,3.128,63,2.99,64,3.128,65,3.819,66,2.99,67,3.128,68,2.99,69,3.128,70,2.229,71,3.128,72,3.128,73,3.128,74,3.128,75,3.128,76,3.128,77,3.128,78,3.128,79,0.444,80,1.422,81,0.378,82,1.667,83,2.865,84,2.552,85,2.018,86,1.713,87,3.284,88,2.165,92,2.752,93,2.99,94,0.728,95,0.707,96,0.171,97,0.09,98,2.648,99,2.38,100,3.67,101,4.232,102,2.463,105,0.567,107,3.147,108,3.66,109,4.422,110,3.383,111,0.006,112,0.008,113,0.006,168,1.228,242,1.182,799,3.462,837,3.919,952,5.941,960,4.651,961,3.529,964,6.547,981,4.422,987,1.811,991,3.128,993,4.232,994,1.863,1013,4.651,1014,3.284,1015,4.651,1016,4.651,1087,2.303,2638,4.651,3021,5.517,3305,5.517,3306,6.486,3309,5.007,3316,5.007,3321,6.753,3322,6.753,3323,5.286,3324,5.286,3325,5.286,3326,5.286,3327,5.286,3328,5.286,3329,5.286,3330,5.286,3331,5.286,3332,5.286]],["title/classes/Role.html",[97,0.075,2207,2.142]],["body/classes/Role.html",[3,0.215,4,0.182,5,0.1,10,0.416,11,0.652,36,0.539,39,0.01,40,0.531,41,0.458,44,0.707,96,0.275,97,0.144,111,0.007,112,0.009,113,0.007,158,0.943,177,1.416,357,1.297,549,2.278,628,2.155,725,4.598,987,2.278,2158,3.761,2166,3.331,2167,3.761,2198,6.292,2199,3.935,2200,6.41,2205,3.099,2206,3.761,2207,3.975,2208,5.115,2209,3.935,3333,6.65,3334,6.65,3335,6.65]],["title/injectables/RolesService.html",[0,1.193,2224,3.08]],["body/injectables/RolesService.html",[0,1.862,2,2.655,3,0.178,4,0.15,5,0.083,7,2.981,8,1.039,9,3.919,10,0.344,11,0.581,12,3.107,13,1.553,14,3.916,15,3.753,16,3.916,17,2.456,18,3.261,19,3.305,20,3.916,21,3.469,22,0.696,24,1.022,25,4.286,26,3.753,27,4.108,28,4.286,29,3.916,30,3.916,31,3.343,32,2.069,33,2.981,36,0.589,38,0.9,39,0.01,40,0.524,41,0.48,42,0.9,44,0.538,48,0.813,49,4.097,50,1.667,51,3.254,52,0.672,53,2.981,54,3.605,55,3.753,56,3.254,57,0.899,58,0.72,59,2.981,60,0.611,61,3.254,62,3.254,63,3.11,64,3.254,65,3.916,66,3.11,67,3.254,68,3.11,69,3.254,70,2.319,71,3.254,72,3.254,73,3.254,74,3.254,75,3.254,76,3.254,77,3.254,78,3.254,79,0.434,80,1.479,81,0.393,82,1.734,83,2.981,84,2.655,87,3.416,88,2.315,92,2.863,96,0.178,97,0.093,98,2.755,99,2.476,102,2.563,105,0.581,107,3.227,108,3.753,110,3.469,111,0.006,112,0.008,113,0.006,187,0.846,188,0.953,189,0.953,357,1.039,525,0.897,837,4.077,842,4.077,902,4.838,1027,4.301,1223,3.469,2158,3.11,2207,3.841,2209,4.097,2224,4.807,3336,7.955,3337,7.955,3338,6.925,3339,6.925,3340,7.579,3341,5.619,3342,5.499,3343,5.499,3344,5.499]],["title/components/SaveButtonComponent.html",[114,0.121,331,0.851]],["body/components/SaveButtonComponent.html",[3,0.086,4,0.139,5,0.04,8,1.23,10,0.412,11,0.347,13,1.139,22,0.416,24,1.069,36,0.546,38,0.616,39,0.01,40,0.513,41,0.439,42,0.707,44,0.621,45,0.495,48,0.757,50,1.507,52,0.759,57,0.806,58,0.684,60,0.911,79,0.351,81,0.19,85,1.235,86,0.86,94,0.365,95,0.355,96,0.267,97,0.143,105,0.727,111,0.003,112,0.005,113,0.003,114,0.23,115,0.536,116,0.999,117,0.58,118,0.88,121,1.801,122,0.835,123,1.643,124,0.565,125,2.838,126,1.305,127,1.165,129,2.901,132,1.414,133,1.231,134,1.631,135,1.43,136,1.43,138,1.02,139,1.002,140,1.002,141,1.002,142,1.476,143,1.231,144,1.389,145,0.927,146,1.139,147,1.224,148,1.168,149,1.026,150,0.714,151,1.168,152,0.714,153,1.002,154,0.948,155,0.714,156,0.935,157,0.714,158,0.974,159,1.26,160,0.714,161,0.714,164,1.084,166,1.002,167,1.231,168,1.042,169,0.66,170,1.262,171,1.229,172,1.002,173,1.002,174,0.643,175,0.66,176,1.354,177,0.88,178,0.595,179,0.66,180,0.976,181,0.927,182,0.66,183,1.581,184,0.66,185,1.463,186,1.026,187,0.62,188,0.699,189,0.699,190,0.66,191,0.976,192,1.168,193,1.506,194,1.506,195,0.88,198,0.66,199,1.002,200,1.319,201,0.66,202,0.66,203,1.476,204,0.66,206,0.857,207,1.689,208,0.86,226,1.229,238,0.41,239,0.88,240,0.792,241,0.58,242,1.065,243,0.58,244,1.438,245,0.792,246,0.857,247,0.55,248,0.565,249,1.109,250,0.536,251,0.58,252,0.58,253,0.792,254,0.58,255,0.792,256,0.973,257,0.55,258,1.399,259,0.903,260,0.55,261,0.58,262,0.55,263,0.851,264,1.07,265,0.792,266,0.835,267,0.58,268,0.536,269,0.857,270,1.252,271,0.55,272,0.903,273,0.973,274,0.58,275,0.536,276,0.536,277,0.58,278,0.792,279,0.857,280,0.792,281,0.58,282,0.792,283,0.565,284,0.58,285,0.536,286,0.536,287,0.58,288,0.536,289,0.903,290,0.58,291,0.55,292,0.58,293,0.536,294,0.58,295,0.536,296,0.565,297,1.184,298,0.903,299,0.792,300,0.835,301,0.903,302,0.536,303,0.58,304,0.903,305,0.536,306,0.835,307,0.58,308,0.536,309,0.536,310,0.536,311,0.58,312,0.55,313,0.58,314,0.536,315,0.509,316,0.58,317,0.536,318,0.58,319,0.536,320,0.58,321,0.522,322,1.189,323,0.536,324,0.58,325,0.536,326,0.903,327,0.509,328,0.903,329,0.55,330,0.58,331,1.099,332,1.497,333,0.999,334,0.58,335,0.536,336,0.58,337,0.792,338,0.58,339,0.792,340,1.365,341,0.857,342,0.792,343,0.58,344,0.536,345,0.875,346,0.58,347,0.536,348,0.792,349,0.58,350,0.55,351,0.565,352,0.58,353,0.536,354,0.522,355,0.58,356,0.55,357,0.398,358,0.58,359,0.509,360,0.55,361,0.58,362,0.536,363,0.58,364,0.55,365,1.053,366,0.536,367,0.58,368,0.55,369,0.58,370,0.58,371,1.514,372,1.119,373,2.077,374,1.119,375,3.636,377,2.141,380,1.425,381,0.814,382,0.884,383,0.643,384,1.743,385,1.119,386,1.895,387,2.141,388,2.141,389,1.645,390,2.14,391,2.62,392,2.417,393,1.119,394,1.743,395,1.743,396,1.084,397,1.084,398,0.935,399,0.433,400,1.055,401,0.595,402,1.084,403,2.204,404,1.119,405,2.775,406,1.743,407,0.991,408,1.689,409,1.499,410,0.935,411,1.119,412,1.119,413,1.119,414,1.119,415,1.119,416,1.743,417,1.119,418,0.909,419,1.119,420,1.119,421,1.119,422,1.02,423,1.02,424,1.02,425,0.935,426,1.119,427,1.119,428,1.119,429,1.119,430,1.743,431,1.119,432,1.119,433,1.119,434,1.119,435,2.075,436,1.689,437,1.119,438,1.196,439,2.075,440,1.119,441,2.012,442,0.909,443,2.342,444,1.119,445,1.739,446,2.141,447,1.119,448,1.601,449,1.119,450,1.119,451,1.119,452,1.119,453,1.119,454,1.952,455,1.743,456,1.119,457,1.119,458,1.119,459,1.743,460,1.051,461,1.119,462,1.119,463,1.119,464,1.083,465,1.119,466,1.743,467,1.743,468,1.119,469,1.119,470,1.119,471,1.119,472,1.119,473,1.119,474,1.084,475,1.456,476,1.119,477,1.119,478,1.119,479,1.743,480,1.119,481,1.119,482,1.119,483,1.456,484,1.689,485,1.34,486,2.342,487,2.141,488,1.119,489,1.119,490,1.743,491,1.743,492,1.119,493,2.808,494,1.743,495,1.119,496,1.119,497,1.119,498,1.119,499,2.141,500,1.119,501,1.119,502,1.119,503,1.119,504,1.119,505,1.119,506,0.962,507,0.962,508,1.119,509,0.991,510,1.119,511,1.084,512,1.119,513,1.689,514,1.743,515,1.589,516,1.589,517,1.689,518,1.689,519,1.377,520,1.689,521,2.775,522,2.417,523,1.743,524,1.456,525,0.828,526,1.499,527,1.689,528,1.377,529,1.743,530,1.743,531,1.235,532,1.638,533,1.743,534,1.119,535,1.119,536,2.417,537,1.119,538,2.417,539,1.119,540,2.417,541,2.141,542,1.119,543,1.119,544,1.119,545,1.119,546,1.743,547,1.119,548,1.119,549,1.416,550,1.119,551,1.084,552,1.119,553,1.119,554,1.084,555,1.119,556,1.119,557,1.119,558,1.743,559,1.743,560,0.752,561,1.119,562,1.084,563,1.084,564,1.02,565,1.084,566,1.119,567,1.084,568,1.119,569,1.119,570,1.119,571,1.119,572,1.119,573,1.119,574,1.119,575,1.119,576,1.743,577,1.743,578,1.743,579,1.743,580,1.743,581,1.689,582,1.141,583,1.119,584,1.02,585,1.119,586,1.119,587,0.909,588,1.02,589,1.743,590,1.119,591,1.119,592,1.119,593,2.141,594,1.119,595,1.119,596,1.119,597,1.119,598,1.119,599,1.119,600,1.119,601,1.119,602,1.084,603,1.119,604,1.119,605,1.119,606,1.051,607,1.119,608,1.119,609,1.084,610,1.119,611,1.119,612,0.962,613,1.119,614,1.119,615,1.119,616,1.119,617,1.119,618,1.119,619,1.084,620,0.772,621,1.119,622,1.119,623,1.119,624,1.119,625,1.119,626,0.909,3345,2.653,3346,2.653,3347,2.653,3348,2.653,3349,2.653]],["title/classes/SaveResult.html",[97,0.075,2209,2.625]],["body/classes/SaveResult.html",[3,0.217,4,0.183,5,0.101,10,0.419,11,0.655,36,0.511,39,0.01,40,0.488,41,0.445,44,0.706,96,0.275,97,0.145,111,0.008,112,0.009,113,0.008,158,1.106,177,1.425,357,1.276,549,2.828,628,2.169,725,5.032,987,2.293,2158,3.785,2166,3.353,2167,3.785,2198,6.121,2199,3.96,2200,6.121,2205,3.119,2206,3.785,2207,3.766,2208,4.157,2209,4.615,3350,6.693,3351,6.693]],["title/classes/SelectionComponent.html",[97,0.075,435,1.813]],["body/classes/SelectionComponent.html",[3,0.1,4,0.153,5,0.047,8,1.262,10,0.35,11,0.391,13,1.254,22,0.468,24,1.072,36,0.524,38,0.668,39,0.01,40,0.501,41,0.426,42,0.752,44,0.644,48,0.759,50,1.453,52,0.379,57,0.726,58,0.693,60,0.934,79,0.371,81,0.222,85,1.392,86,1.005,94,0.427,95,0.415,96,0.272,97,0.146,105,0.738,111,0.003,112,0.005,113,0.003,114,0.233,116,0.61,121,1.804,123,1.486,125,2.787,126,1.333,127,0.824,129,2.988,132,1.415,133,1.355,134,1.7,135,1.533,136,1.533,138,1.192,139,1.129,140,1.129,141,1.129,142,1.569,143,1.355,144,1.507,146,0.695,147,1.071,148,0.714,149,0.941,151,1.072,153,0.752,154,0.87,156,0.76,158,0.992,159,1.269,166,1.129,167,1.355,168,1.13,169,0.771,170,1.342,171,1.307,172,1.129,173,1.129,174,0.752,175,0.771,176,1.468,177,0.991,178,0.695,179,0.771,180,1.1,181,1.044,182,0.771,183,1.533,184,0.771,185,1.49,186,1.13,187,0.683,188,0.77,189,0.77,190,0.771,191,1.1,192,1.287,193,1.615,194,1.615,195,0.991,198,0.771,199,1.129,200,1.287,201,0.771,202,0.771,203,1.394,204,0.771,206,0.966,207,1.903,208,1.005,226,1.161,242,0.972,245,0.595,246,0.643,253,0.595,255,0.595,256,0.893,264,0.534,265,0.595,266,0.627,273,0.893,278,0.595,279,0.643,280,0.595,282,0.595,297,0.964,299,0.595,300,0.627,331,0.595,332,1.311,333,0.917,337,0.595,339,0.595,340,1.382,341,0.643,342,0.595,345,0.802,348,0.595,371,1.287,372,1.308,373,2.103,374,1.308,377,1.964,380,1.505,381,0.952,382,1.033,383,0.752,384,1.964,385,1.308,386,2.088,387,2.622,388,2.359,389,1.812,390,2.321,391,2.359,392,2.622,393,1.308,394,1.964,395,1.964,396,1.267,397,1.267,398,1.093,399,0.506,400,1.189,401,0.695,402,1.267,403,2.39,404,1.308,405,2.951,406,1.964,407,1.158,408,1.903,409,1.689,410,1.093,411,1.308,412,1.308,413,1.308,414,1.308,415,1.308,416,1.964,417,1.308,418,1.062,419,1.308,420,1.308,421,1.308,422,1.192,423,1.192,424,1.192,425,1.093,426,1.308,427,1.308,428,1.308,429,1.308,430,1.964,431,1.308,432,1.308,433,1.308,434,1.308,435,2.54,436,2.285,437,1.308,438,1.272,439,2.285,440,1.308,441,2.216,442,1.595,443,2.54,444,1.308,445,1.916,446,2.359,447,1.308,448,1.764,449,1.308,450,1.308,451,1.308,452,1.308,453,1.308,454,2.15,455,1.964,456,1.308,457,1.308,458,1.308,459,1.964,460,1.229,461,1.308,462,1.308,463,1.308,464,1.22,465,1.308,466,1.964,467,1.964,468,1.308,469,1.308,470,1.308,471,1.308,472,1.308,473,1.308,474,1.267,475,1.641,476,1.308,477,1.308,478,1.308,479,1.964,480,1.308,481,1.308,482,1.308,483,1.641,484,1.903,485,1.509,486,2.54,487,2.359,488,1.308,489,1.308,490,1.964,491,1.964,492,1.308,493,2.966,494,1.964,495,1.308,496,1.308,497,1.308,498,1.308,499,2.359,500,1.308,501,1.308,502,1.308,503,1.308,504,1.308,505,1.308,506,1.124,507,1.124,508,1.308,509,1.158,510,1.308,511,1.267,512,1.308,513,1.267,514,1.308,515,1.192,516,1.192,517,1.267,518,1.267,519,1.033,520,1.267,521,2.359,522,1.964,523,1.308,524,1.093,525,0.506,526,1.124,527,1.267,528,1.033,529,1.308,530,1.308,531,0.927,532,1.229,533,1.964,534,1.308,535,1.308,536,1.308,537,1.308,538,1.308,539,1.308,540,1.308,541,2.359,542,1.308,543,1.308,544,1.308,545,1.308,546,1.964,547,1.308,548,1.308,549,1.595,550,1.308,551,1.267,552,1.308,553,1.308,554,1.267,555,1.308,556,1.308,557,1.308,558,1.964,559,1.964,560,0.879,561,1.308,562,1.267,563,1.267,564,1.192,565,1.267,566,1.308,567,1.267,568,1.308,569,1.308,570,1.308,571,1.308,572,1.308,573,1.308,574,1.308,575,1.308,576,1.964,577,1.964,578,1.964,579,1.964,580,1.964,581,1.903,582,1.285,583,1.308,584,1.192,585,1.308,586,1.308,587,1.062,588,1.192,589,1.964,590,1.308,591,1.308,592,1.308,593,2.359,594,1.308,595,1.308,596,1.308,597,1.308,598,1.308,599,1.308,600,1.308,601,1.308,602,1.267,603,1.308,604,1.308,605,1.308,606,1.229,607,1.308,608,1.308,609,1.267,610,1.308,611,1.308,612,1.124,613,1.308,614,1.308,615,1.308,616,1.308,617,1.308,618,1.308,619,1.267,620,0.902,621,1.308,622,1.308,623,1.308,624,1.308,625,1.308,626,1.062,628,1.005,1214,3.728,3352,3.101,3353,3.101]],["title/modules/SharedModule.html",[919,1.478,931,1.998]],["body/modules/SharedModule.html",[1,5.392,3,0.112,4,0.094,5,0.052,17,1.117,18,2.715,35,3.067,39,0.01,79,0.461,81,0.246,88,2.241,91,2.393,93,1.95,96,0.112,97,0.059,111,0.004,112,0.006,113,0.004,114,0.094,115,1.683,118,0.734,170,0.966,205,1.326,208,1.117,209,3.168,238,0.532,245,1.597,247,1.728,248,0.734,250,1.683,253,1.597,255,1.476,257,1.728,262,1.728,263,0.578,264,0.594,265,1.597,268,1.683,273,1.597,276,1.683,278,1.597,280,1.597,282,1.597,293,1.683,295,1.683,296,0.734,299,1.597,302,1.683,305,1.683,306,0.697,308,1.683,309,1.683,310,1.556,317,1.556,319,1.683,321,1.639,323,1.683,325,1.683,327,1.597,331,1.476,333,1.639,337,1.597,339,1.597,342,1.597,344,1.683,345,1.435,347,1.683,348,1.597,353,1.683,354,0.679,359,1.597,360,1.728,362,1.683,365,0.715,366,1.683,368,1.728,390,1.287,397,1.409,399,0.563,464,0.903,634,1.366,919,1.149,921,1.553,922,1.502,923,2.874,924,2.059,925,2.774,926,2.874,931,4.165,932,2.347,933,1.553,934,1.502,936,1.553,937,2.523,938,2.523,939,1.454,940,2.523,941,2.622,946,1.727,950,4.763,1212,3.735,1221,5.392,1261,2.142,1262,2.393,1264,2.556,1361,4.113,1611,4.765,1612,2.76,1635,2.142,1859,4.763,1925,4.303,1944,2.76,2013,5.392,2038,2.393,2087,2.142,2146,4.518,2205,1.607,2206,1.95,2224,5.049,2386,4.033,2410,2.76,3354,3.033,3355,3.033,3356,3.033,3357,3.033,3358,6.124,3359,5.049,3360,3.448,3361,3.448,3362,3.448,3363,3.033,3364,3.448,3365,8.535,3366,3.448,3367,3.448,3368,3.448,3369,3.448,3370,3.448,3371,3.448,3372,3.448,3373,3.448,3374,3.448,3375,3.448,3376,3.448,3377,3.448,3378,5.037,3379,3.448,3380,5.952,3381,5.952,3382,2.556,3383,3.448,3384,5.037,3385,3.448,3386,3.448,3387,4.432,3388,3.448,3389,3.448,3390,5.952,3391,5.037,3392,5.952,3393,4.432,3394,3.448,3395,3.448,3396,3.448,3397,3.448,3398,5.037,3399,3.448,3400,3.448,3401,3.448,3402,3.448]],["title/classes/SimpleComponent.html",[97,0.075,121,0.92]],["body/classes/SimpleComponent.html",[3,0.099,4,0.152,5,0.046,8,1.252,10,0.436,11,0.387,13,1.245,22,0.464,24,1.071,36,0.543,38,0.597,39,0.01,40,0.51,41,0.443,42,0.713,44,0.638,48,0.748,52,0.374,57,0.802,58,0.724,60,0.932,79,0.37,81,0.219,85,1.379,86,0.993,94,0.422,95,0.41,96,0.272,97,0.146,105,0.737,111,0.003,112,0.005,113,0.003,114,0.233,116,0.603,121,1.73,123,1.482,125,2.777,126,1.33,127,0.817,129,2.981,132,1.427,133,1.345,134,1.695,135,1.525,136,1.525,138,1.178,139,1.118,140,1.118,141,1.118,142,1.562,143,1.345,144,1.497,145,1.035,146,1.245,147,1.245,148,1.277,149,1.122,151,1.277,153,1.118,154,1.036,156,0.906,158,1.025,159,1.285,166,1.118,167,1.345,168,1.123,170,1.335,171,1.301,172,1.118,173,1.118,174,0.742,176,1.459,177,0.982,178,0.687,180,1.09,181,1.035,183,1.525,185,1.483,186,1.122,187,0.754,188,0.851,189,0.851,191,1.09,192,1.277,193,1.606,194,1.606,195,0.982,199,1.118,200,1.277,203,1.385,206,1.151,207,1.886,208,0.993,226,1.154,242,0.967,245,0.587,246,0.635,253,0.587,255,0.587,256,0.885,264,0.528,265,0.587,266,0.619,273,0.885,278,0.587,279,0.635,280,0.587,282,0.587,297,0.956,299,0.587,300,0.619,331,0.587,332,1.305,333,0.908,337,0.587,339,0.587,340,1.375,341,0.635,342,0.587,345,0.795,348,0.587,371,1.919,372,1.292,373,2.099,374,1.292,377,1.946,380,1.499,381,0.94,382,1.021,383,0.742,384,1.946,385,1.292,386,2.072,387,2.341,388,2.341,389,1.799,390,2.306,391,2.341,392,2.606,393,1.292,394,1.946,395,1.946,396,1.252,397,1.252,398,1.079,399,0.5,400,1.178,401,0.687,402,1.252,403,2.376,404,1.292,405,2.938,406,1.946,407,1.144,408,1.886,409,1.673,410,1.079,411,1.292,412,1.292,413,1.292,414,1.292,415,1.292,416,1.946,417,1.292,418,1.049,419,1.292,420,1.292,421,1.292,422,1.178,423,1.178,424,1.178,425,1.079,426,1.292,427,1.292,428,1.292,429,1.292,430,1.946,431,1.292,432,1.292,433,1.292,434,1.292,435,2.269,436,1.886,437,1.292,438,1.266,439,2.269,440,1.292,441,2.2,442,1.049,443,2.525,444,1.292,445,1.902,446,2.341,447,1.292,448,1.751,449,1.292,450,1.292,451,1.292,452,1.292,453,1.292,454,2.134,455,1.946,456,1.292,457,1.292,458,1.292,459,1.946,460,1.214,461,1.292,462,1.292,463,1.292,464,1.209,465,1.292,466,1.946,467,1.946,468,1.292,469,1.292,470,1.292,471,1.292,472,1.292,473,1.292,474,1.252,475,1.626,476,1.292,477,1.292,478,1.292,479,1.946,480,1.292,481,1.292,482,1.292,483,1.626,484,1.886,485,1.495,486,2.525,487,2.341,488,1.292,489,1.292,490,1.946,491,1.946,492,1.292,493,2.954,494,1.946,495,1.292,496,1.292,497,1.292,498,1.292,499,2.341,500,1.292,501,1.292,502,1.292,503,1.292,504,1.292,505,1.292,506,1.111,507,1.111,508,1.292,509,1.144,510,1.292,511,1.252,512,1.292,513,1.252,514,1.292,515,1.178,516,1.178,517,1.252,518,1.252,519,1.021,520,1.252,521,2.341,522,1.946,523,1.292,524,1.079,525,0.753,526,1.111,527,1.252,528,1.021,529,1.292,530,1.292,531,0.915,532,1.214,533,1.946,534,1.292,535,1.292,536,1.292,537,1.292,538,1.292,539,1.292,540,1.292,541,2.341,542,1.292,543,1.292,544,1.292,545,1.292,546,1.946,547,1.292,548,1.292,549,1.581,550,1.292,551,1.252,552,1.292,553,1.292,554,1.252,555,1.292,556,1.292,557,1.292,558,1.946,559,1.946,560,0.868,561,1.292,562,1.252,563,1.252,564,1.178,565,1.252,566,1.292,567,1.252,568,1.292,569,1.292,570,1.292,571,1.292,572,1.292,573,1.292,574,1.292,575,1.292,576,1.946,577,1.946,578,1.946,579,1.946,580,1.946,581,1.886,582,1.274,583,1.292,584,1.178,585,1.292,586,1.292,587,1.049,588,1.178,589,1.946,590,1.292,591,1.292,592,1.292,593,2.341,594,1.292,595,1.292,596,1.292,597,1.292,598,1.292,599,1.292,600,1.292,601,1.292,602,1.252,603,1.292,604,1.292,605,1.292,606,1.214,607,1.292,608,1.292,609,1.252,610,1.292,611,1.292,612,1.111,613,1.292,614,1.292,615,1.292,616,1.292,617,1.292,618,1.292,619,1.252,620,0.891,621,1.292,622,1.292,623,1.292,624,1.292,625,1.292,626,1.049,628,0.993,3403,3.063,3404,3.063,3405,3.063,3406,3.063,3407,3.063,3408,3.063,3409,3.063,3410,3.063,3411,3.063,3412,3.063,3413,3.063,3414,3.063,3415,3.063,3416,3.063,3417,3.063,3418,3.063]],["title/components/SortComponent.html",[114,0.121,335,0.896]],["body/components/SortComponent.html",[0,1.762,3,0.163,4,0.138,5,0.076,10,0.315,22,0.659,35,2.127,36,0.536,39,0.01,40,0.41,41,0.431,44,0.656,45,0.942,48,0.473,57,1,58,0.801,60,0.948,79,0.446,80,1.356,81,0.468,88,1.906,89,3.133,90,2.435,92,2.625,94,0.694,95,0.674,96,0.212,97,0.086,105,0.423,111,0.006,112,0.007,113,0.006,114,0.199,115,1.019,116,1.29,117,1.102,118,1.395,122,1.324,123,1.676,124,1.074,126,0.823,127,1.288,145,1.469,154,0.942,156,0.823,158,0.715,159,0.823,171,0.942,208,1.634,209,2.197,238,0.778,239,1.395,240,1.256,241,1.102,242,1.165,243,1.102,244,1.788,245,0.967,246,1.046,247,1.046,248,1.074,249,1.59,250,1.019,251,1.102,252,1.102,253,0.967,254,1.102,255,0.967,256,0.967,257,1.046,258,1.662,259,1.431,260,1.046,261,1.102,262,1.046,263,1.22,264,1.254,265,0.967,266,1.019,267,1.102,268,1.019,269,1.359,270,1.683,271,1.046,272,1.431,273,0.967,274,1.102,275,1.019,276,1.019,277,1.102,278,0.967,279,1.046,280,0.967,281,1.102,282,0.967,283,1.074,284,1.102,285,1.019,286,1.019,287,1.102,288,1.019,289,1.431,290,1.102,291,1.046,292,1.102,293,1.019,294,1.102,295,1.019,296,1.074,297,1.254,298,1.431,299,0.967,300,1.019,301,1.431,302,1.019,303,1.102,304,1.431,305,1.019,306,1.324,307,1.102,308,1.019,309,1.019,310,1.019,311,1.102,312,1.046,313,1.102,314,1.019,315,0.967,316,1.102,317,1.019,318,1.102,319,1.019,320,1.102,321,0.993,322,1.598,323,1.019,324,1.102,325,1.019,326,1.431,327,0.967,328,1.431,329,1.046,330,1.102,331,0.967,332,0.993,333,0.993,334,1.102,335,1.557,336,1.102,337,0.967,338,1.102,339,0.967,340,1.046,341,1.046,342,0.967,343,1.102,344,1.019,345,0.869,346,1.102,347,1.019,348,0.967,349,1.102,350,1.046,351,1.074,352,1.102,353,1.019,354,0.993,355,1.102,356,1.046,357,0.757,358,1.102,359,0.967,360,1.046,361,1.102,362,1.019,363,1.102,364,1.046,365,1.509,366,1.019,367,1.102,368,1.046,369,1.102,370,1.102,380,1.656,383,1.222,398,1.777,399,0.823,400,1.287,634,1.998,642,3.163,673,1.998,865,1.634,924,2.061,939,2.127,946,2.526,950,3.303,973,7.024,1022,3.367,1241,4.07,1258,3.391,1260,3.41,1505,3.303,1532,3.133,1568,3.739,1569,3.739,1570,4.037,2146,3.133,2148,4.037,2149,2.984,2157,4.037,2252,4.437,3419,5.043,3420,6.551,3421,7.703,3422,6.402,3423,6.402,3424,7.277,3425,5.043,3426,5.043,3427,5.043,3428,5.043,3429,5.043,3430,5.043,3431,6.551,3432,5.043,3433,5.043,3434,7.984,3435,7.277,3436,5.043,3437,5.043,3438,5.043,3439,5.043,3440,5.043]],["title/components/SpacerComponent.html",[114,0.121,337,0.851]],["body/components/SpacerComponent.html",[3,0.09,4,0.143,5,0.042,8,1.24,10,0.419,11,0.359,13,1.171,22,0.43,24,1.06,36,0.537,38,0.562,39,0.01,40,0.509,41,0.439,42,0.682,44,0.627,45,0.518,48,0.732,50,1.52,52,0.339,57,0.762,58,0.697,60,0.917,79,0.357,81,0.198,85,1.279,86,0.899,94,0.382,95,0.371,96,0.269,97,0.143,105,0.731,111,0.003,112,0.005,113,0.003,114,0.23,115,0.561,116,1.028,117,0.606,118,0.911,121,1.809,122,0.865,123,1.647,124,0.591,125,2.692,126,1.317,127,1.123,129,2.927,132,1.42,133,1.266,134,1.651,135,1.459,136,1.459,138,1.067,139,1.037,140,1.037,141,1.037,142,1.503,143,1.266,144,1.423,145,0.959,146,1.171,147,1.203,148,1.202,149,1.055,150,0.746,151,1.202,152,0.746,153,1.037,154,0.975,155,0.746,156,0.958,157,0.746,158,0.99,159,1.255,160,0.746,161,0.746,166,1.037,167,1.266,168,1.067,169,0.69,170,1.285,171,1.251,172,1.037,173,1.037,174,0.672,175,0.69,176,1.386,177,0.911,178,0.622,179,0.69,180,1.01,181,0.959,182,0.69,183,1.459,184,0.69,185,1.427,186,1.055,187,0.638,188,0.719,189,0.719,190,0.69,191,1.01,192,1.202,193,1.537,194,1.537,195,0.911,198,0.69,199,1.037,200,1.202,201,0.69,202,0.69,203,1.316,204,0.69,206,0.888,207,1.749,208,0.899,226,1.096,238,0.428,239,0.911,240,0.82,241,0.606,242,1.079,243,0.606,244,1.464,245,0.82,246,0.888,247,0.575,248,0.591,249,1.141,250,0.561,251,0.606,252,0.606,253,0.82,254,0.606,255,0.82,256,1.001,257,0.575,258,1.419,259,0.935,260,0.575,261,0.606,262,0.575,263,0.876,264,1.011,265,0.82,266,0.865,267,0.606,268,0.561,269,0.888,270,1.283,271,0.575,272,0.935,273,1.001,274,0.606,275,0.561,276,0.561,277,0.606,278,0.82,279,0.888,280,0.82,281,0.606,282,0.82,283,0.591,284,0.606,285,0.561,286,0.561,287,0.606,288,0.561,289,0.935,290,0.606,291,0.575,292,0.606,293,0.561,294,0.606,295,0.561,296,0.591,297,1.155,298,0.935,299,0.82,300,0.865,301,0.935,302,0.561,303,0.606,304,0.935,305,0.561,306,0.865,307,0.606,308,0.561,309,0.561,310,0.561,311,0.606,312,0.575,313,0.606,314,0.561,315,0.532,316,0.606,317,0.561,318,0.606,319,0.561,320,0.606,321,0.546,322,1.218,323,0.561,324,0.606,325,0.561,326,0.935,327,0.532,328,0.935,329,0.575,330,0.606,331,0.82,332,1.319,333,1.028,334,0.606,335,0.561,336,0.606,337,1.125,338,0.606,339,0.82,340,1.39,341,0.888,342,0.82,343,0.606,344,0.561,345,0.9,346,0.606,347,0.561,348,0.82,349,0.606,350,0.575,351,0.591,352,0.606,353,0.561,354,0.546,355,0.606,356,0.575,357,0.416,358,0.606,359,0.532,360,0.575,361,0.606,362,0.561,363,0.606,364,0.575,365,1.083,366,0.561,367,0.606,368,0.575,369,0.606,370,0.606,371,0.985,372,1.17,373,2.06,374,1.17,377,1.805,380,1.448,381,0.852,382,0.924,383,0.672,384,1.805,385,1.17,386,1.95,387,2.203,388,2.203,389,1.693,390,2.191,391,2.203,392,2.476,393,1.17,394,1.805,395,2.476,396,1.134,397,1.134,398,0.978,399,0.453,400,1.092,401,0.622,402,1.134,403,2.257,404,1.17,405,2.826,406,1.805,407,1.036,408,1.749,409,1.551,410,0.978,411,1.17,412,1.17,413,1.17,414,1.17,415,1.17,416,1.805,417,1.17,418,0.95,419,1.17,420,1.17,421,1.17,422,1.067,423,1.067,424,1.067,425,0.978,426,1.17,427,1.17,428,1.17,429,1.17,430,1.805,431,1.17,432,1.17,433,1.17,434,1.17,435,2.134,436,1.749,437,1.17,438,1.218,439,2.134,440,1.17,441,2.07,442,0.95,443,2.399,444,1.17,445,1.789,446,2.203,447,1.17,448,1.647,449,1.17,450,1.17,451,1.17,452,1.17,453,1.17,454,2.008,455,1.805,456,1.17,457,1.17,458,1.17,459,1.805,460,1.099,461,1.17,462,1.17,463,1.17,464,1.121,465,1.17,466,1.805,467,1.805,468,1.17,469,1.17,470,1.17,471,1.17,472,1.17,473,1.17,474,1.134,475,1.508,476,1.17,477,1.17,478,1.17,479,1.805,480,1.17,481,1.17,482,1.17,483,1.508,484,1.749,485,1.387,486,2.399,487,2.203,488,1.17,489,1.17,490,1.805,491,1.805,492,1.17,493,2.854,494,1.805,495,1.17,496,1.17,497,1.17,498,1.17,499,2.203,500,1.17,501,1.17,502,1.17,503,1.17,504,1.17,505,1.17,506,1.006,507,1.006,508,1.17,509,1.036,510,1.17,511,1.134,512,1.17,513,1.134,514,1.17,515,1.067,516,1.067,517,1.134,518,1.134,519,0.924,520,1.134,521,2.203,522,1.805,523,1.17,524,0.978,525,0.453,526,1.006,527,1.134,528,0.924,529,1.17,530,1.17,531,0.829,532,1.099,533,1.805,534,1.17,535,1.17,536,1.17,537,1.17,538,1.17,539,1.17,540,1.17,541,2.203,542,1.17,543,1.17,544,1.17,545,1.17,546,1.805,547,1.17,548,1.17,549,1.466,550,1.17,551,1.134,552,1.17,553,1.17,554,1.134,555,1.17,556,1.17,557,1.17,558,1.805,559,1.805,560,0.786,561,1.17,562,1.134,563,1.134,564,1.067,565,1.134,566,1.17,567,1.134,568,1.17,569,1.17,570,1.17,571,1.17,572,1.17,573,1.17,574,1.17,575,1.17,576,1.805,577,1.805,578,1.805,579,1.805,580,1.805,581,1.749,582,1.181,583,1.17,584,1.067,585,1.17,586,1.17,587,0.95,588,1.067,589,1.805,590,1.17,591,1.17,592,1.17,593,2.203,594,1.17,595,1.17,596,1.17,597,1.17,598,1.17,599,1.17,600,1.17,601,1.17,602,1.134,603,1.17,604,1.17,605,1.17,606,1.099,607,1.17,608,1.17,609,1.134,610,1.17,611,1.17,612,1.006,613,1.17,614,1.17,615,1.17,616,1.17,617,1.17,618,1.17,619,1.134,620,0.807,621,1.17,622,1.17,623,1.17,624,1.17,625,1.17,626,1.466,3441,2.775]],["title/pipes/StringTemplatePipe.html",[2625,3.289,3358,3.289]],["body/pipes/StringTemplatePipe.html",[3,0.201,4,0.17,5,0.093,11,0.522,22,0.625,24,1.014,36,0.489,38,0.668,39,0.01,40,0.5,41,0.335,42,0.668,44,0.659,48,0.583,57,0.806,58,0.646,60,0.69,79,0.318,80,1.671,81,0.444,96,0.201,97,0.106,105,0.747,111,0.007,112,0.008,113,0.007,122,1.256,126,1.305,242,1.272,515,3.191,526,2.253,620,1.808,2275,5.534,2625,5.534,2627,4.974,2630,5.466,2632,5.976,2635,6.567,2637,5.466,3358,5.534,3442,6.213,3443,7.465,3444,6.213,3445,6.213,3446,7.465,3447,7.465,3448,6.567,3449,7.465,3450,8.792,3451,7.465,3452,8.3,3453,7.465,3454,8.3,3455,8.3,3456,8.3,3457,7.465,3458,7.465,3459,7.465,3460,7.465,3461,6.567,3462,7.465,3463,7.465,3464,7.465,3465,7.465,3466,7.465,3467,6.213,3468,6.213,3469,6.213,3470,6.213,3471,6.213]],["title/components/TabNavButtonComponent.html",[114,0.121,339,0.851]],["body/components/TabNavButtonComponent.html",[3,0.088,4,0.14,5,0.041,8,1.235,10,0.415,11,0.353,13,1.154,22,0.422,24,1.067,32,0.81,36,0.551,38,0.714,39,0.01,40,0.518,41,0.446,42,0.769,44,0.634,45,0.506,48,0.76,50,1.513,52,0.708,57,0.752,58,0.69,60,0.914,79,0.354,81,0.194,85,1.255,86,0.878,94,0.373,95,0.362,96,0.268,97,0.143,105,0.729,111,0.003,112,0.005,113,0.003,114,0.23,115,0.548,116,1.013,117,0.592,118,0.894,121,1.805,122,0.849,123,1.645,124,0.577,125,2.743,126,1.311,127,1.11,129,2.913,132,1.416,133,1.247,134,1.64,135,1.444,136,1.444,138,1.042,139,1.018,140,1.018,141,1.018,142,1.488,143,1.247,144,1.405,145,0.942,146,1.154,147,1.193,148,1.184,149,1.04,150,0.729,151,1.184,152,0.729,153,1.018,154,0.961,155,0.729,156,0.946,157,0.729,158,0.981,159,1.247,160,0.729,161,0.729,166,1.018,167,1.247,168,1.207,169,0.674,170,1.272,171,1.239,172,1.018,173,1.018,174,0.657,175,0.674,176,1.369,177,0.894,178,0.608,179,0.674,180,0.992,181,0.942,182,0.674,183,1.444,184,0.674,185,1.413,186,1.04,187,0.628,188,0.708,189,0.708,190,0.674,191,0.992,192,1.184,193,1.52,194,1.52,195,0.894,198,0.674,199,1.018,200,1.184,201,0.674,202,0.674,203,1.3,204,0.674,206,0.871,207,1.717,208,0.878,226,1.082,238,0.418,239,0.894,240,0.805,241,0.592,242,1.072,243,0.592,244,1.45,245,0.805,246,0.871,247,0.562,248,0.577,249,1.124,250,0.548,251,0.592,252,0.592,253,0.805,254,0.592,255,0.805,256,0.986,257,0.562,258,1.408,259,0.918,260,0.562,261,0.592,262,0.562,263,0.863,264,0.999,265,0.805,266,0.849,267,0.592,268,0.548,269,0.871,270,1.267,271,0.562,272,0.918,273,0.986,274,0.592,275,0.548,276,0.548,277,0.592,278,0.805,279,0.871,280,0.805,281,0.592,282,0.805,283,0.577,284,0.592,285,0.548,286,0.548,287,0.592,288,0.548,289,0.918,290,0.592,291,0.562,292,0.592,293,0.548,294,0.592,295,0.548,296,0.577,297,1.144,298,0.918,299,0.805,300,0.849,301,0.918,302,0.548,303,0.592,304,0.918,305,0.548,306,0.849,307,0.592,308,0.548,309,0.548,310,0.548,311,0.592,312,0.562,313,0.592,314,0.548,315,0.519,316,0.592,317,0.548,318,0.592,319,0.548,320,0.592,321,0.533,322,1.202,323,0.548,324,0.592,325,0.548,326,0.918,327,0.519,328,0.918,329,0.562,330,0.592,331,0.805,332,1.306,333,1.013,334,0.592,335,0.548,336,0.592,337,0.805,338,0.592,339,1.111,340,1.436,341,1.067,342,0.805,343,0.592,344,0.548,345,0.887,346,0.592,347,0.548,348,0.805,349,0.592,350,0.562,351,0.577,352,0.592,353,0.548,354,0.533,355,0.592,356,0.562,357,0.407,358,0.592,359,0.519,360,0.562,361,0.592,362,0.548,363,0.592,364,0.562,365,1.067,366,0.548,367,0.592,368,0.562,369,0.592,370,0.592,371,1.593,372,1.143,373,2.051,374,1.143,377,1.772,380,1.436,381,0.832,382,0.903,383,0.657,384,1.772,385,1.143,386,2.342,387,2.17,388,2.17,389,1.667,390,2.164,391,2.17,392,2.445,393,1.143,394,2.17,395,1.772,396,1.107,397,1.107,398,0.955,399,0.442,400,1.072,401,0.608,402,1.107,403,2.412,404,1.143,405,2.799,406,1.772,407,1.011,408,1.717,409,1.523,410,0.955,411,1.143,412,1.143,413,1.143,414,1.143,415,1.143,416,1.772,417,1.143,418,0.928,419,1.143,420,1.143,421,1.143,422,1.042,423,1.042,424,1.042,425,0.955,426,1.143,427,1.143,428,1.143,429,1.143,430,1.772,431,1.143,432,1.143,433,1.143,434,1.143,435,2.103,436,1.717,437,1.143,438,1.207,439,2.103,440,1.143,441,2.039,442,0.928,443,2.369,444,1.143,445,1.763,446,2.17,447,1.143,448,1.623,449,1.143,450,1.143,451,1.143,452,1.143,453,1.143,454,1.978,455,1.772,456,1.143,457,1.143,458,1.143,459,1.772,460,1.074,461,1.143,462,1.143,463,1.143,464,1.101,465,1.143,466,1.772,467,1.772,468,1.143,469,1.143,470,1.143,471,1.143,472,1.143,473,1.143,474,1.107,475,1.48,476,1.143,477,1.143,478,1.143,479,1.772,480,1.143,481,1.143,482,1.143,483,1.48,484,2.103,485,1.362,486,2.829,487,2.17,488,1.143,489,1.143,490,1.772,491,1.772,492,1.143,493,2.829,494,1.772,495,1.143,496,1.143,497,1.143,498,1.143,499,2.17,500,1.143,501,1.143,502,1.143,503,1.143,504,1.143,505,1.143,506,0.982,507,0.982,508,1.143,509,1.011,510,1.143,511,1.107,512,1.143,513,1.107,514,1.143,515,1.042,516,1.042,517,1.107,518,1.107,519,0.903,520,1.107,521,2.17,522,1.772,523,1.143,524,0.955,525,0.442,526,0.982,527,1.107,528,0.903,529,1.143,530,1.143,531,0.81,532,1.074,533,1.772,534,1.143,535,1.143,536,1.143,537,1.143,538,1.143,539,1.143,540,1.143,541,2.17,542,1.143,543,1.143,544,1.143,545,1.143,546,1.772,547,1.143,548,1.143,549,1.439,550,1.143,551,1.107,552,1.143,553,1.143,554,1.107,555,1.143,556,1.143,557,1.143,558,2.445,559,2.445,560,1.643,561,1.143,562,1.107,563,1.107,564,1.042,565,1.107,566,1.143,567,1.107,568,1.143,569,1.143,570,1.143,571,1.143,572,1.772,573,1.143,574,1.143,575,1.143,576,1.772,577,1.772,578,1.772,579,1.772,580,1.772,581,1.717,582,1.16,583,1.143,584,1.042,585,1.143,586,1.143,587,0.928,588,1.042,589,1.772,590,1.143,591,1.143,592,1.143,593,2.17,594,1.143,595,1.143,596,1.143,597,1.143,598,1.143,599,1.143,600,1.143,601,1.143,602,1.107,603,1.143,604,1.143,605,1.143,606,1.074,607,1.143,608,1.143,609,1.107,610,1.143,611,1.143,612,0.982,613,1.143,614,1.143,615,1.143,616,1.143,617,1.143,618,1.143,619,1.107,620,0.788,621,1.143,622,1.143,623,1.143,624,1.143,625,1.143,626,0.928,652,2.169,2737,3.696,2738,2.384,3422,2.384,3472,4.201,3473,4.201,3474,2.71,3475,2.71,3476,2.71,3477,2.71,3478,2.71]],["title/components/TabOrAccordionContainerComponent.html",[114,0.121,342,0.851]],["body/components/TabOrAccordionContainerComponent.html",[3,0.088,4,0.141,5,0.041,8,1.236,10,0.416,11,0.355,13,1.159,22,0.425,24,1.059,32,0.816,36,0.546,38,0.626,39,0.01,40,0.512,41,0.441,42,0.716,44,0.625,45,0.51,48,0.747,50,1.516,52,0.516,57,0.755,58,0.692,60,0.915,79,0.355,81,0.195,85,1.263,86,0.885,94,0.376,95,0.365,96,0.269,97,0.143,105,0.729,111,0.003,112,0.005,113,0.003,114,0.23,115,0.552,116,1.146,117,0.596,118,0.9,121,1.806,122,0.854,123,1.645,124,0.581,125,2.678,126,1.313,127,1.114,129,2.918,132,1.418,133,1.253,134,1.644,135,1.449,136,1.449,138,1.05,139,1.024,140,1.024,141,1.024,142,1.493,143,1.253,144,1.411,145,0.948,146,1.159,147,1.196,148,1.19,149,1.045,150,0.734,151,1.19,152,0.734,153,1.024,154,0.965,155,0.734,156,0.95,157,0.734,158,1.017,159,1.25,160,0.734,161,0.734,166,1.024,167,1.253,168,1.058,169,0.679,170,1.276,171,1.243,172,1.024,173,1.024,174,0.662,175,0.679,176,1.374,177,0.9,178,0.612,179,0.679,180,0.998,181,0.948,182,0.679,183,1.449,184,0.679,185,1.417,186,1.045,187,0.631,188,0.712,189,0.712,190,0.679,191,0.998,192,1.19,193,1.526,194,1.526,195,0.9,198,0.679,199,1.024,200,1.19,201,0.679,202,0.679,203,1.305,204,0.679,206,0.876,207,1.727,208,0.885,226,1.087,238,0.421,239,0.9,240,0.81,241,0.596,242,1.074,243,0.596,244,1.455,245,0.81,246,0.876,247,0.566,248,0.581,249,1.13,250,0.552,251,0.596,252,0.596,253,0.81,254,0.596,255,0.81,256,0.991,257,0.566,258,1.412,259,0.923,260,0.566,261,0.596,262,0.566,263,0.867,264,1.003,265,0.81,266,0.854,267,0.596,268,0.552,269,0.876,270,1.272,271,0.566,272,0.923,273,0.991,274,0.596,275,0.552,276,0.552,277,0.596,278,0.81,279,0.876,280,0.81,281,0.596,282,0.81,283,0.581,284,0.596,285,0.552,286,0.552,287,0.596,288,0.552,289,0.923,290,0.596,291,0.566,292,0.596,293,0.552,294,0.596,295,0.552,296,0.581,297,1.147,298,0.923,299,0.81,300,0.854,301,0.923,302,0.552,303,0.596,304,0.923,305,0.552,306,0.854,307,0.596,308,0.552,309,0.552,310,0.552,311,0.596,312,0.566,313,0.596,314,0.552,315,0.523,316,0.596,317,0.552,318,0.596,319,0.552,320,0.596,321,0.537,322,1.207,323,0.552,324,0.596,325,0.552,326,0.923,327,0.523,328,0.923,329,0.566,330,0.596,331,0.81,332,1.31,333,1.018,334,0.596,335,0.552,336,0.596,337,0.81,338,0.596,339,0.81,340,1.381,341,0.876,342,1.116,343,0.596,344,0.552,345,0.891,346,0.596,347,0.552,348,0.81,349,0.596,350,0.566,351,0.581,352,0.596,353,0.552,354,0.537,355,0.596,356,0.566,357,0.41,358,0.596,359,0.523,360,0.566,361,0.596,362,0.552,363,0.596,364,0.566,365,1.072,366,0.552,367,0.596,368,0.566,369,0.596,370,0.596,371,1.449,372,1.151,373,2.054,374,1.151,377,1.782,380,1.44,381,0.838,382,0.909,383,0.662,384,1.782,385,1.151,386,2.35,387,2.18,388,2.18,389,1.886,390,2.173,391,2.18,392,2.455,393,1.151,394,1.782,395,1.782,396,1.116,397,1.116,398,0.962,399,0.445,400,1.079,401,0.612,402,1.116,403,2.238,404,1.151,405,2.808,406,1.782,407,1.019,408,1.727,409,1.532,410,0.962,411,1.151,412,1.151,413,1.151,414,1.151,415,1.151,416,1.782,417,1.151,418,0.935,419,1.151,420,1.151,421,1.151,422,1.05,423,1.05,424,1.05,425,0.962,426,1.151,427,1.151,428,1.151,429,1.151,430,1.782,431,1.151,432,1.151,433,1.151,434,1.151,435,2.113,436,1.727,437,1.151,438,1.21,439,2.113,440,1.151,441,2.049,442,0.935,443,2.378,444,1.151,445,1.771,446,2.18,447,1.151,448,1.63,449,1.151,450,1.151,451,1.151,452,1.151,453,1.151,454,1.988,455,1.782,456,1.151,457,1.151,458,1.151,459,1.782,460,1.082,461,1.151,462,1.151,463,1.151,464,1.107,465,1.151,466,1.782,467,1.782,468,1.151,469,1.151,470,1.151,471,1.151,472,1.151,473,1.151,474,1.116,475,1.489,476,1.151,477,1.151,478,1.782,479,2.808,480,2.18,481,2.18,482,1.782,483,1.489,484,2.113,485,1.369,486,2.837,487,2.18,488,1.151,489,1.151,490,1.782,491,1.782,492,1.151,493,2.837,494,1.782,495,1.151,496,1.151,497,1.151,498,1.151,499,2.18,500,1.151,501,2.455,502,1.151,503,1.151,504,1.151,505,1.151,506,0.99,507,0.99,508,1.151,509,1.019,510,1.151,511,1.116,512,1.151,513,1.116,514,1.151,515,1.05,516,1.05,517,1.116,518,1.116,519,0.909,520,1.116,521,2.18,522,1.782,523,1.151,524,0.962,525,0.689,526,0.99,527,1.116,528,0.909,529,1.151,530,1.151,531,0.816,532,1.082,533,1.782,534,1.151,535,1.151,536,1.151,537,1.151,538,1.151,539,1.151,540,1.151,541,2.18,542,1.151,543,1.151,544,1.151,545,1.151,546,1.782,547,1.151,548,1.151,549,1.447,550,1.151,551,1.116,552,1.151,553,1.151,554,1.116,555,1.151,556,1.151,557,1.151,558,1.782,559,1.782,560,0.774,561,1.151,562,1.116,563,1.116,564,1.05,565,1.116,566,1.151,567,1.116,568,1.151,569,1.151,570,1.151,571,1.151,572,1.151,573,1.151,574,1.151,575,1.151,576,1.782,577,1.782,578,1.782,579,1.782,580,1.782,581,1.727,582,1.166,583,1.151,584,1.05,585,1.151,586,1.151,587,0.935,588,1.05,589,1.782,590,1.151,591,1.151,592,1.151,593,2.18,594,1.151,595,1.151,596,1.151,597,1.151,598,1.151,599,1.151,600,1.151,601,1.151,602,1.116,603,1.151,604,1.151,605,1.151,606,1.082,607,1.151,608,1.151,609,1.116,610,1.151,611,1.151,612,0.99,613,1.151,614,1.151,615,1.151,616,1.151,617,1.151,618,1.151,619,1.116,620,0.794,621,1.151,622,1.151,623,1.151,624,1.151,625,1.151,626,0.935,652,2.186,3479,4.226,3480,2.73,3481,2.73]],["title/components/TextAreaComponent.html",[114,0.121,344,0.896]],["body/components/TextAreaComponent.html",[3,0.124,4,0.104,5,0.057,8,1.188,10,0.471,11,0.455,13,0.856,22,0.545,24,1.018,36,0.579,38,0.779,39,0.01,40,0.516,41,0.473,42,0.809,44,0.662,45,0.712,48,0.782,50,1.642,52,0.77,57,1.005,58,0.823,60,0.86,79,0.351,81,0.273,94,0.525,95,0.51,96,0.256,97,0.135,105,0.32,111,0.004,112,0.006,113,0.004,114,0.22,115,0.771,116,1.067,117,0.834,118,1.154,121,1.778,122,1.095,123,1.662,124,0.812,126,1.182,127,1.115,129,2.808,132,1.382,133,1.313,134,1.804,135,1.45,136,1.45,139,1.313,140,1.313,141,1.663,142,1.805,143,1.527,144,1.527,145,1.215,146,1.215,147,1.297,148,1.247,149,1.464,150,1.026,151,1.247,152,1.026,153,0.925,154,0.712,155,1.026,156,0.884,157,1.026,158,1.027,159,0.884,160,1.026,161,1.026,164,1.559,166,0.925,167,1.313,168,1.439,169,0.949,170,1.208,171,1.012,172,0.925,173,0.925,174,0.925,175,0.949,176,1.28,177,0.812,178,1.215,179,0.949,180,0.901,181,1.215,182,0.949,183,0.878,184,0.949,185,1.648,186,0.771,187,0.838,188,0.945,189,0.945,190,0.949,191,0.901,192,0.878,193,0.925,194,1.313,195,0.812,198,0.949,199,0.925,200,0.878,201,0.949,202,0.949,203,0.856,204,0.949,206,0.791,214,2.352,216,2.352,221,2.786,238,0.589,239,1.154,240,1.039,241,0.834,242,1.057,243,0.834,244,1.645,245,0.732,246,0.791,247,0.791,248,0.812,249,1.377,250,0.771,251,0.834,252,0.834,253,0.732,254,0.834,255,0.732,256,0.732,257,0.791,258,1.558,259,1.184,260,0.791,261,0.834,262,0.791,263,1.057,264,1.086,265,0.732,266,0.771,267,0.834,268,0.771,269,1.124,270,1.499,271,0.791,272,1.184,273,0.732,274,0.834,275,0.771,276,0.771,277,0.834,278,0.732,279,0.791,280,0.732,281,0.834,282,0.732,283,0.812,284,0.834,285,0.771,286,0.771,287,0.834,288,0.771,289,1.184,290,0.834,291,0.791,292,0.834,293,0.771,294,0.834,295,1.095,296,1.154,297,1.363,298,1.184,299,0.732,300,0.771,301,1.184,302,0.771,303,0.834,304,1.184,305,0.771,306,1.095,307,0.834,308,0.771,309,0.771,310,0.771,311,0.834,312,0.791,313,0.834,314,0.771,315,0.732,316,0.834,317,0.771,318,0.834,319,0.771,320,0.834,321,0.751,322,1.503,323,0.771,324,0.834,325,1.273,326,1.184,327,0.732,328,1.184,329,0.791,330,0.834,331,0.732,332,0.751,333,0.751,334,0.834,335,0.771,336,0.834,337,0.732,338,0.834,339,0.732,340,0.791,341,0.791,342,0.732,343,0.834,344,1.386,345,0.657,346,0.834,347,1.095,348,0.732,349,0.834,350,0.791,351,0.812,352,0.834,353,0.771,354,0.751,355,0.834,356,0.791,357,0.573,358,0.834,359,0.732,360,0.791,361,0.834,362,0.771,363,0.834,364,0.791,365,1.307,366,0.771,367,0.834,368,0.791,369,0.834,370,0.834,371,1.45,373,2.208,380,0.791,381,1.171,382,1.271,383,1.663,400,0.974,401,0.856,438,0.694,445,2.579,448,1.203,464,1.651,525,0.623,560,2.133,612,1.965,620,1.834,981,3.549,994,1.345,1235,4.935,1237,3.762,1238,3.207,1239,3.207,1240,3.416,1241,3.366,1242,3.207,1244,2.068,1248,3.718,1249,2.715,1250,2.068,1251,1.986,1252,1.912,1253,2.068,1254,2.37,1255,1.912,1258,1.778,1374,2.37,1424,2.937,1425,2.258,1426,2.37,1427,2.258,1428,2.37,1437,2.158,1438,2.158,1439,2.158,1440,2.158,1663,3.729,1664,2.37,2066,4.127,2079,2.829,2080,2.829,2081,2.829,2082,2.829,2083,2.829,2084,2.829,2085,2.829,2087,2.37,2556,2.258,2589,2.829,2590,4.375,2591,2.829,2593,4.018,2595,2.37,2596,2.829,2597,5.581,2598,4.672,2599,2.829,2600,4.018,2601,4.018,2602,4.018,2603,4.018,2604,4.018,2605,3.762,2606,4.018,2607,4.018,2608,5.372,2609,2.829,2610,4.018,2611,4.018,2612,4.018,2613,4.375,2614,4.018,3482,3.816,3483,3.816]],["title/components/TextBlockComponent.html",[114,0.121,345,0.764]],["body/components/TextBlockComponent.html",[3,0.087,4,0.14,5,0.04,8,1.233,10,0.414,11,0.35,13,1.401,22,0.42,24,1.057,36,0.538,38,0.55,39,0.01,40,0.506,41,0.44,42,0.672,44,0.628,45,0.502,48,0.726,50,1.511,52,0.328,57,0.811,58,0.718,60,0.964,79,0.353,81,0.192,85,1.247,86,0.871,94,0.37,95,0.359,96,0.268,97,0.143,105,0.728,111,0.003,112,0.005,113,0.003,114,0.229,115,0.543,116,1.007,117,0.587,118,0.889,121,1.803,122,0.843,123,1.644,124,0.572,125,2.664,126,1.309,127,1.106,129,3.204,132,1.415,133,1.24,134,1.637,135,1.438,136,1.438,138,1.033,139,1.012,140,1.012,141,1.012,142,1.483,143,1.24,144,1.399,145,0.936,146,1.148,147,1.189,148,1.178,149,1.034,150,0.722,151,1.178,152,0.722,153,1.012,154,0.956,155,0.722,156,0.942,157,0.722,158,0.978,159,1.244,160,0.722,161,0.722,166,1.012,167,1.24,168,1.049,169,0.668,170,1.268,171,1.235,172,1.012,173,1.012,174,0.651,175,0.668,176,1.363,177,0.889,178,0.602,179,0.668,180,0.986,181,0.936,182,0.668,183,1.438,184,0.668,185,1.408,186,1.034,187,0.625,188,0.705,189,0.705,190,0.668,191,0.986,192,1.178,193,1.514,194,1.514,195,0.889,198,0.668,199,1.012,200,1.178,201,0.668,202,0.668,203,1.294,204,0.668,206,0.866,207,1.706,208,0.871,226,1.077,238,0.415,239,0.889,240,0.8,241,0.587,242,1.069,243,0.587,244,1.445,245,0.8,246,0.866,247,0.557,248,0.572,249,1.118,250,0.543,251,0.587,252,0.587,253,0.8,254,0.587,255,0.8,256,0.981,257,0.557,258,1.405,259,0.912,260,0.557,261,0.587,262,0.557,263,0.858,264,0.994,265,0.8,266,0.843,267,0.587,268,0.543,269,0.866,270,1.261,271,0.557,272,0.912,273,0.981,274,0.587,275,0.543,276,0.543,277,0.587,278,0.8,279,0.866,280,0.8,281,0.587,282,0.8,283,0.572,284,0.587,285,0.543,286,0.543,287,0.587,288,0.543,289,0.912,290,0.587,291,0.557,292,0.587,293,0.543,294,0.587,295,0.543,296,0.572,297,1.189,298,0.912,299,0.8,300,0.843,301,0.912,302,0.543,303,0.587,304,0.912,305,0.543,306,0.843,307,0.587,308,0.543,309,0.543,310,0.543,311,0.587,312,0.557,313,0.587,314,0.543,315,0.515,316,0.587,317,0.543,318,0.587,319,0.543,320,0.587,321,0.529,322,1.197,323,0.543,324,0.587,325,0.543,326,0.912,327,0.515,328,0.912,329,0.557,330,0.587,331,0.8,332,1.302,333,1.007,334,0.587,335,0.543,336,0.587,337,0.8,338,0.587,339,0.8,340,1.372,341,0.866,342,0.8,343,0.587,344,0.543,345,1.14,346,0.587,347,0.543,348,0.8,349,0.587,350,0.557,351,0.572,352,0.587,353,0.543,354,0.529,355,0.587,356,0.557,357,0.403,358,0.587,359,0.515,360,0.557,361,0.587,362,0.543,363,0.587,364,0.557,365,1.062,366,0.543,367,0.587,368,0.557,369,0.587,370,0.587,371,1.178,372,1.133,373,2.047,374,1.133,377,1.76,380,1.432,381,0.825,382,0.895,383,0.651,384,1.76,385,1.133,386,1.91,387,2.158,388,2.158,389,1.87,390,2.154,391,2.158,392,2.434,393,1.133,394,1.76,395,1.76,396,1.098,397,1.098,398,0.947,399,0.438,400,1.065,401,0.602,402,1.098,403,2.219,404,1.133,405,2.789,406,1.76,407,1.003,408,1.706,409,1.513,410,0.947,411,1.133,412,1.133,413,1.133,414,1.133,415,1.133,416,1.76,417,1.133,418,0.92,419,1.133,420,1.133,421,1.133,422,1.033,423,1.033,424,1.033,425,0.947,426,1.133,427,1.133,428,1.133,429,1.133,430,1.76,431,1.133,432,1.133,433,1.133,434,1.133,435,2.092,436,1.706,437,1.133,438,1.203,439,2.092,440,1.133,441,2.028,442,0.92,443,2.358,444,1.133,445,1.753,446,2.158,447,1.133,448,1.971,449,1.133,450,1.133,451,1.133,452,1.133,453,1.133,454,1.968,455,1.76,456,1.133,457,1.133,458,1.133,459,1.76,460,1.065,461,1.133,462,1.133,463,1.133,464,1.093,465,1.133,466,1.76,467,1.76,468,1.133,469,1.133,470,1.133,471,1.133,472,1.133,473,1.133,474,1.098,475,1.471,476,1.133,477,1.133,478,1.133,479,1.76,480,1.133,481,1.133,482,1.133,483,1.471,484,1.706,485,1.353,486,2.358,487,2.158,488,1.133,489,1.133,490,1.76,491,1.76,492,1.133,493,2.821,494,1.76,495,1.133,496,1.133,497,1.133,498,1.133,499,2.158,500,1.133,501,1.133,502,1.133,503,1.133,504,1.133,505,1.133,506,0.974,507,0.974,508,1.133,509,1.003,510,1.133,511,1.098,512,1.76,513,1.098,514,1.133,515,1.033,516,1.033,517,1.098,518,1.098,519,0.895,520,1.098,521,2.158,522,1.76,523,1.133,524,0.947,525,0.438,526,0.974,527,1.098,528,0.895,529,1.133,530,1.133,531,0.803,532,1.065,533,1.76,534,1.133,535,1.133,536,1.133,537,1.133,538,1.133,539,1.133,540,1.133,541,2.158,542,1.133,543,1.133,544,1.133,545,1.133,546,1.76,547,1.133,548,1.133,549,1.43,550,1.133,551,1.098,552,1.133,553,1.133,554,1.098,555,1.133,556,1.133,557,1.133,558,1.76,559,1.76,560,0.761,561,1.133,562,1.098,563,1.098,564,1.033,565,1.098,566,1.133,567,1.098,568,1.133,569,1.133,570,1.133,571,1.133,572,1.133,573,1.133,574,1.133,575,1.133,576,1.76,577,1.76,578,1.76,579,1.76,580,1.76,581,1.706,582,1.152,583,1.133,584,1.033,585,1.133,586,1.133,587,0.92,588,1.033,589,1.76,590,1.133,591,1.133,592,1.133,593,2.158,594,1.133,595,1.133,596,1.133,597,1.133,598,1.133,599,1.133,600,1.133,601,1.133,602,1.098,603,1.133,604,1.133,605,1.133,606,1.065,607,1.133,608,1.133,609,1.098,610,1.133,611,1.133,612,0.974,613,1.133,614,1.133,615,1.133,616,1.133,617,1.133,618,1.133,619,1.098,620,0.782,621,1.133,622,1.133,623,1.133,624,1.133,625,1.133,626,0.92,3484,2.687,3485,2.687]],["title/components/TextFieldComponent.html",[114,0.121,347,0.896]],["body/components/TextFieldComponent.html",[3,0.125,4,0.105,5,0.058,8,1.191,10,0.473,11,0.459,13,0.866,22,0.549,24,1.021,36,0.576,38,0.783,39,0.01,40,0.518,41,0.472,42,0.813,44,0.663,45,0.721,48,0.776,50,1.644,52,0.667,57,1.008,58,0.825,60,0.863,79,0.353,81,0.276,94,0.532,95,0.516,96,0.257,97,0.135,105,0.324,111,0.004,112,0.006,113,0.004,114,0.217,115,0.78,116,1.076,117,0.844,118,1.164,121,1.781,122,1.104,123,1.662,124,0.822,126,1.188,127,1.123,129,2.639,132,1.364,133,1.325,134,1.809,135,1.46,136,1.46,139,1.325,140,1.325,141,1.672,142,1.81,143,1.537,144,1.537,145,1.226,146,1.226,147,1.302,148,1.258,149,1.471,150,1.038,151,1.258,152,1.038,153,0.936,154,0.721,155,1.038,156,0.892,157,1.038,158,1.032,159,0.892,160,1.038,161,1.038,164,1.578,166,0.936,167,1.325,168,1.443,169,0.961,170,1.216,171,1.02,172,0.936,173,0.936,174,0.936,175,0.961,176,1.291,177,0.822,178,1.226,179,0.961,180,0.912,181,1.226,182,0.961,183,0.889,184,0.961,185,1.654,186,0.78,187,0.775,188,0.873,189,0.873,190,0.961,191,0.912,192,0.889,193,0.936,194,1.325,195,0.822,198,0.961,199,0.936,200,0.889,201,0.961,202,0.961,203,0.866,204,0.961,206,0.801,214,2.368,216,2.368,221,2.799,238,0.596,239,1.164,240,1.048,241,0.844,242,1.062,243,0.844,244,1.651,245,0.74,246,0.801,247,0.801,248,0.822,249,1.386,250,0.78,251,0.844,252,0.844,253,0.74,254,0.844,255,0.74,256,0.74,257,0.801,258,1.562,259,1.194,260,0.801,261,0.844,262,0.801,263,1.064,264,1.093,265,0.74,266,0.78,267,0.844,268,0.78,269,1.134,270,1.507,271,0.801,272,1.194,273,0.74,274,0.844,275,0.78,276,0.78,277,0.844,278,0.74,279,0.801,280,0.74,281,0.844,282,0.74,283,0.822,284,0.844,285,0.78,286,0.78,287,0.844,288,0.78,289,1.194,290,0.844,291,0.801,292,0.844,293,0.78,294,0.844,295,1.104,296,1.164,297,1.339,298,1.194,299,0.74,300,0.78,301,1.194,302,0.78,303,0.844,304,1.194,305,0.78,306,1.104,307,0.844,308,0.78,309,0.78,310,0.78,311,0.844,312,0.801,313,0.844,314,0.78,315,0.74,316,0.844,317,0.78,318,0.844,319,0.78,320,0.844,321,0.76,322,1.51,323,0.78,324,0.844,325,1.282,326,1.194,327,0.74,328,1.194,329,0.801,330,0.844,331,0.74,332,0.76,333,0.76,334,0.844,335,0.78,336,0.844,337,0.74,338,0.844,339,0.74,340,0.801,341,0.801,342,0.74,343,0.844,344,1.104,345,0.665,346,0.844,347,1.394,348,0.74,349,0.844,350,0.801,351,0.822,352,0.844,353,0.78,354,0.76,355,0.844,356,0.801,357,0.58,358,0.844,359,0.74,360,0.801,361,0.844,362,0.78,363,0.844,364,0.801,365,1.316,366,0.78,367,0.844,368,0.801,369,0.844,370,0.844,371,0.889,373,2.211,380,0.801,381,1.185,382,1.287,383,1.537,400,0.986,401,0.866,438,0.702,445,2.589,448,1.218,464,1.662,560,1.798,612,1.982,620,1.59,981,3.579,994,1.361,1235,4.945,1237,3.794,1238,3.234,1239,3.234,1240,3.945,1241,3.395,1242,3.234,1244,2.093,1248,3.738,1249,2.738,1250,2.093,1251,2.01,1252,1.935,1253,2.093,1254,2.399,1255,1.935,1258,1.8,1374,2.399,1424,2.962,1425,2.285,1426,2.399,1427,2.285,1428,2.399,1437,2.184,1438,2.184,1439,2.184,1440,2.184,1663,3.754,1664,2.399,2066,4.517,2079,2.863,2080,2.863,2081,2.863,2082,2.863,2083,2.863,2084,2.863,2085,2.863,2087,2.399,2556,2.285,2589,2.863,2590,3.794,2591,2.863,2593,4.052,2595,2.399,2596,2.863,2597,5.603,2598,4.703,2599,2.863,2600,4.052,2601,4.052,2602,4.052,2603,4.052,2604,4.052,2605,3.794,2606,4.052,2607,4.052,2608,5.114,2609,2.863,2610,4.052,2611,4.052,2612,4.052,2613,2.681,2614,4.052]],["title/components/ToggleComponent.html",[114,0.121,348,0.851]],["body/components/ToggleComponent.html",[3,0.09,4,0.142,5,0.042,8,1.239,10,0.419,11,0.359,13,1.17,22,0.43,24,1.06,36,0.537,38,0.561,39,0.01,40,0.509,41,0.439,42,0.681,44,0.626,45,0.517,48,0.732,50,1.52,52,0.338,57,0.761,58,0.696,60,0.917,79,0.357,81,0.198,85,1.277,86,0.898,94,0.381,95,0.37,96,0.269,97,0.143,105,0.73,111,0.003,112,0.005,113,0.003,114,0.23,115,0.56,116,1.027,117,0.605,118,0.91,121,1.809,122,0.864,123,1.646,124,0.59,125,2.69,126,1.317,127,1.122,129,2.926,132,1.42,133,1.264,134,1.65,135,1.458,136,1.458,138,1.065,139,1.036,140,1.036,141,1.036,142,1.502,143,1.264,144,1.421,145,0.958,146,1.17,147,1.203,148,1.201,149,1.054,150,0.745,151,1.201,152,0.745,153,1.036,154,0.974,155,0.745,156,0.957,157,0.745,158,0.989,159,1.254,160,0.745,161,0.745,166,1.036,167,1.264,168,1.066,169,0.689,170,1.284,171,1.25,172,1.036,173,1.036,174,0.671,175,0.689,176,1.385,177,0.91,178,0.621,179,0.689,180,1.009,181,0.958,182,0.689,183,1.458,184,0.689,185,1.426,186,1.054,187,0.637,188,0.718,189,0.718,190,0.689,191,1.009,192,1.201,193,1.691,194,1.536,195,0.91,198,0.689,199,1.036,200,1.201,201,0.689,202,0.689,203,1.315,204,0.689,206,0.886,207,1.746,208,0.898,226,1.095,238,0.428,239,0.91,240,0.819,241,0.605,242,1.079,243,0.605,244,1.463,245,0.819,246,0.886,247,0.575,248,0.59,249,1.14,250,0.56,251,0.605,252,0.605,253,0.819,254,0.605,255,0.819,256,1,257,0.575,258,1.419,259,0.934,260,0.575,261,0.605,262,0.575,263,0.875,264,1.011,265,0.819,266,0.864,267,0.605,268,0.56,269,0.886,270,1.282,271,0.575,272,0.934,273,1,274,0.605,275,0.56,276,0.56,277,0.605,278,0.819,279,0.886,280,0.819,281,0.605,282,0.819,283,0.59,284,0.605,285,0.56,286,0.56,287,0.605,288,0.56,289,0.934,290,0.605,291,0.575,292,0.605,293,0.56,294,0.605,295,0.56,296,0.59,297,1.154,298,0.934,299,0.819,300,0.864,301,0.934,302,0.56,303,0.605,304,0.934,305,0.56,306,0.864,307,0.605,308,0.56,309,0.56,310,0.56,311,0.605,312,0.575,313,0.605,314,0.56,315,0.531,316,0.605,317,0.56,318,0.605,319,0.56,320,0.605,321,0.545,322,1.217,323,0.56,324,0.605,325,0.56,326,0.934,327,0.531,328,0.934,329,0.575,330,0.605,331,0.819,332,1.318,333,1.027,334,0.605,335,0.56,336,0.605,337,0.819,338,0.605,339,0.819,340,1.389,341,0.886,342,0.819,343,0.605,344,0.56,345,0.899,346,0.605,347,0.56,348,1.124,349,0.605,350,0.575,351,0.59,352,0.605,353,0.56,354,0.545,355,0.605,356,0.575,357,0.416,358,0.605,359,0.531,360,0.575,361,0.605,362,0.56,363,0.605,364,0.575,365,1.082,366,0.56,367,0.605,368,0.575,369,0.605,370,0.605,371,0.983,372,1.168,373,2.093,374,1.168,377,1.802,380,1.448,381,0.85,382,0.923,383,0.671,384,1.802,385,1.168,386,1.948,387,2.2,388,2.2,389,1.691,390,2.189,391,2.2,392,2.474,393,1.168,394,1.802,395,1.802,396,1.132,397,1.132,398,0.976,399,0.452,400,1.091,401,0.621,402,1.132,403,2.255,404,1.168,405,2.824,406,1.802,407,1.034,408,1.746,409,1.549,410,0.976,411,1.168,412,1.168,413,1.168,414,1.168,415,1.168,416,1.802,417,1.168,418,0.949,419,1.168,420,1.168,421,1.168,422,1.065,423,1.065,424,1.065,425,0.976,426,1.168,427,1.168,428,1.168,429,1.168,430,1.802,431,1.168,432,1.168,433,1.168,434,1.168,435,2.132,436,1.746,437,1.168,438,1.217,439,2.132,440,1.168,441,2.068,442,0.949,443,2.397,444,1.168,445,1.787,446,2.2,447,1.168,448,1.645,449,1.168,450,1.168,451,1.168,452,1.168,453,1.168,454,2.006,455,1.802,456,1.168,457,1.168,458,1.168,459,1.802,460,1.098,461,1.168,462,1.168,463,1.168,464,1.12,465,1.168,466,1.802,467,1.802,468,1.168,469,1.168,470,1.168,471,1.168,472,1.168,473,1.168,474,1.132,475,1.506,476,1.168,477,1.168,478,1.168,479,1.802,480,1.168,481,1.168,482,1.168,483,1.506,484,1.746,485,1.385,486,2.397,487,2.2,488,1.168,489,1.168,490,1.802,491,1.802,492,1.168,493,2.852,494,1.802,495,1.168,496,1.168,497,1.168,498,1.168,499,2.2,500,1.168,501,1.168,502,1.168,503,1.168,504,1.168,505,1.168,506,1.004,507,1.004,508,1.168,509,1.034,510,1.168,511,1.132,512,1.168,513,1.132,514,1.168,515,1.065,516,1.065,517,1.132,518,1.132,519,0.923,520,1.132,521,2.2,522,1.802,523,1.168,524,0.976,525,0.452,526,1.004,527,1.132,528,0.923,529,1.168,530,1.168,531,0.828,532,1.098,533,1.802,534,1.168,535,1.168,536,1.168,537,1.168,538,1.168,539,1.168,540,1.168,541,2.2,542,1.168,543,1.168,544,1.168,545,1.168,546,1.802,547,1.168,548,1.168,549,1.464,550,1.168,551,1.132,552,1.168,553,1.168,554,1.132,555,1.168,556,1.168,557,1.168,558,1.802,559,1.802,560,0.785,561,1.168,562,1.132,563,1.132,564,1.065,565,1.132,566,1.168,567,1.132,568,1.168,569,1.168,570,1.168,571,1.168,572,1.168,573,1.168,574,1.168,575,1.168,576,1.802,577,1.802,578,1.802,579,1.802,580,1.802,581,1.746,582,1.18,583,1.168,584,1.065,585,1.168,586,1.168,587,0.949,588,1.065,589,1.802,590,1.168,591,1.168,592,1.168,593,2.2,594,1.168,595,1.168,596,1.168,597,1.168,598,1.168,599,1.168,600,1.168,601,1.168,602,1.132,603,1.168,604,1.168,605,1.168,606,1.098,607,1.168,608,1.168,609,1.132,610,1.168,611,1.168,612,1.004,613,1.168,614,1.168,615,1.168,616,1.168,617,1.168,618,1.168,619,1.132,620,0.806,621,1.168,622,1.168,623,1.168,624,1.168,625,1.168,626,0.949,3486,2.77]],["title/modules/TransferOwnerModule.html",[919,1.478,3487,3.289]],["body/modules/TransferOwnerModule.html",[3,0.212,4,0.179,5,0.098,39,0.01,79,0.45,81,0.468,82,2.063,96,0.212,97,0.111,111,0.007,112,0.009,113,0.007,238,1.01,350,1.872,399,1.067,401,1.467,634,2.592,919,2.179,921,2.945,922,2.849,923,3.948,924,3.342,925,3.586,926,3.158,931,3.928,932,3.586,933,2.945,934,2.849,936,3.465,937,3.855,938,3.855,939,2.758,940,3.855,941,4.006,942,4.006,947,3.405,3487,6.614,3488,5.754,3489,5.754,3490,6.54,3491,5.754,3492,6.54,3493,6.54]],["title/injectables/TranslationService.html",[0,1.193,35,1.871]],["body/injectables/TranslationService.html",[0,1.887,2,2.713,3,0.182,4,0.153,5,0.085,7,3.045,10,0.351,11,0.589,12,3.019,17,2.598,18,3.187,22,0.706,32,2.097,35,2.96,36,0.565,38,0.823,39,0.01,40,0.479,41,0.454,42,0.936,44,0.594,48,0.752,52,0.857,57,0.729,70,2.369,79,0.41,80,1.511,81,0.402,88,2.333,93,3.969,96,0.182,97,0.095,105,0.643,111,0.006,112,0.008,113,0.006,135,1.293,153,1.362,158,0.995,159,0.917,187,0.857,188,0.966,189,0.966,226,1.429,300,1.418,357,0.843,438,1.276,525,0.917,587,1.924,645,4.943,676,3.804,677,3.49,836,4.943,842,5.203,865,2.274,874,5.203,889,2.925,896,6.127,900,4.165,904,4.943,914,3.9,946,2.814,1087,2.447,1193,3.324,1520,5.313,1527,5.565,1530,5.565,1747,4.165,2110,6.174,2187,3.9,2366,4.165,2885,3.9,2932,3.9,3363,4.943,3382,5.203,3494,8.705,3495,7.018,3496,7.018,3497,5.618,3498,8.416,3499,7.018,3500,7.018,3501,5.618,3502,5.618,3503,5.618,3504,4.943,3505,5.618,3506,5.618,3507,5.618,3508,5.618,3509,5.618,3510,5.618,3511,4.165,3512,5.618,3513,5.618,3514,5.618,3515,5.618,3516,5.618,3517,5.618,3518,4.165,3519,5.203,3520,7.018,3521,5.618,3522,5.618,3523,4.943,3524,3.9,3525,7.654,3526,7.018,3527,8.537,3528,8.017,3529,4.498,3530,6.127,3531,5.618,3532,5.618,3533,5.618,3534,5.618,3535,5.618,3536,5.618,3537,6.174,3538,5.618,3539,7.018,3540,5.618,3541,5.618,3542,5.618,3543,5.618,3544,7.018,3545,5.618,3546,5.618,3547,5.618]],["title/components/TreeNodeCheckboxComponent.html",[114,0.121,353,0.896]],["body/components/TreeNodeCheckboxComponent.html",[3,0.18,4,0.152,5,0.083,10,0.347,36,0.456,39,0.01,40,0.436,41,0.376,44,0.541,45,1.036,79,0.356,81,0.397,96,0.226,97,0.094,111,0.006,112,0.008,113,0.006,114,0.218,115,1.122,116,1.371,117,1.213,118,1.75,122,1.407,123,1.68,124,1.182,126,1.136,127,1.347,145,1.562,156,0.906,238,0.857,239,1.483,240,1.335,241,1.213,242,1.164,243,1.213,244,1.833,245,1.064,246,1.151,247,1.151,248,1.182,249,1.663,250,1.122,251,1.213,252,1.213,253,1.064,254,1.213,255,1.064,256,1.064,257,1.151,258,1.722,259,1.522,260,1.151,261,1.213,262,1.151,263,1.276,264,1.311,265,1.064,266,1.122,267,1.213,268,1.122,269,1.445,270,1.744,271,1.151,272,1.522,273,1.064,274,1.213,275,1.122,276,1.122,277,1.213,278,1.064,279,1.151,280,1.064,281,1.213,282,1.064,283,1.182,284,1.213,285,1.122,286,1.122,287,1.213,288,1.122,289,1.522,290,1.213,291,1.151,292,1.213,293,1.122,294,1.213,295,1.122,296,1.182,297,1.311,298,1.522,299,1.064,300,1.122,301,1.522,302,1.122,303,1.213,304,1.522,305,1.122,306,1.407,307,1.213,308,1.122,309,1.122,310,1.122,311,1.213,312,1.151,313,1.213,314,1.122,315,1.064,316,1.213,317,1.122,318,1.213,319,1.122,320,1.213,321,1.093,322,1.656,323,1.122,324,1.213,325,1.122,326,1.522,327,1.064,328,1.522,329,1.151,330,1.213,331,1.064,332,1.093,333,1.093,334,1.213,335,1.122,336,1.213,337,1.064,338,1.213,339,1.064,340,1.151,341,1.151,342,1.064,343,1.213,344,1.122,345,0.956,346,1.213,347,1.122,348,1.064,349,1.213,350,1.151,351,1.182,352,1.213,353,1.613,354,1.71,355,1.213,356,1.151,357,0.833,358,1.213,359,1.064,360,1.151,361,1.213,362,1.122,363,1.213,364,1.151,365,1.579,366,1.122,367,1.213,368,1.151,369,1.213,370,1.213,380,1.579,460,2.76,3393,4.883,3548,7.612,3549,5.551,3550,6.965,3551,6.965,3552,7.612,3553,5.551,3554,7.612,3555,5.551,3556,5.551,3557,5.551]],["title/classes/User.html",[97,0.075,357,0.666]],["body/classes/User.html",[3,0.209,4,0.176,5,0.097,10,0.403,11,0.64,36,0.579,39,0.01,40,0.525,41,0.484,44,0.71,96,0.272,97,0.143,111,0.007,112,0.009,113,0.007,158,0.913,177,1.73,357,1.287,549,2.207,628,2.088,725,4.514,987,2.207,2158,3.644,2166,4.071,2167,4.596,2198,6.599,2199,3.813,2200,6.357,2205,3.787,2206,4.596,2207,3.924,2208,4.003,2209,3.813,3558,6.444,3559,6.444,3560,6.444,3561,6.444,3562,6.444,3563,6.444,3564,6.444,3565,6.444]],["title/interfaces/UserForm.html",[3566,2.905,3567,3.289]],["body/interfaces/UserForm.html",[3,0.196,4,0.165,5,0.091,10,0.378,11,0.617,39,0.01,40,0.514,41,0.472,44,0.706,48,0.567,58,0.629,60,0.672,79,0.421,92,3.15,94,0.833,95,0.809,96,0.266,105,0.708,111,0.009,112,0.008,113,0.007,154,1.477,156,1.199,171,1.372,186,1.223,226,1.477,242,0.883,399,0.987,438,1.1,515,3.042,582,1.67,701,2.725,1087,3.446,1319,3.962,2159,4.486,2166,4.121,2167,4.474,2205,3.834,2206,4.652,2207,2.921,2244,5.446,2385,4.486,2398,4.844,2892,4.486,3341,6.099,3566,3.962,3567,5.446,3568,4.486,3569,5.323,3570,7.237,3571,7.346,3572,6.051,3573,4.486,3574,5.323,3575,4.844,3576,4.844,3577,5.323,3578,5.323,3579,5.323,3580,5.323,3581,5.323,3582,5.323,3583,5.323,3584,5.323,3585,5.323,3586,5.323,3587,4.844,3588,5.323,3589,7.629,3590,5.323,3591,6.463,3592,6.463,3593,5.323,3594,5.323,3595,5.323,3596,5.323,3597,5.323,3598,5.323,3599,6.051,3600,6.051,3601,6.051,3602,6.051,3603,6.051,3604,6.051]],["title/interfaces/UserForm-1.html",[994,1.312,3566,2.438,3567,2.76]],["body/interfaces/UserForm-1.html",[3,0.203,4,0.171,5,0.094,10,0.392,11,0.63,39,0.01,40,0.521,41,0.475,44,0.706,48,0.588,58,0.652,60,0.696,79,0.384,92,3.264,96,0.26,105,0.674,111,0.007,112,0.008,113,0.007,154,1.401,156,1.023,171,1.401,186,1.267,226,1.401,242,0.915,399,1.023,515,2.886,1087,3.269,1319,4.106,2159,4.648,2166,4.17,2167,3.546,2205,3.88,2206,4.708,2207,3.027,2244,5.564,2385,4.648,2398,5.019,2892,4.648,3341,6.172,3566,4.106,3567,5.564,3568,4.648,3570,7.324,3574,5.516,3575,5.019,3576,5.019,3577,5.516,3578,5.516,3579,5.516,3580,5.516,3581,5.516,3582,5.516,3583,5.516,3584,5.516,3585,5.516,3586,5.516,3587,5.019,3588,5.516,3589,7.684,3590,5.516,3591,6.603,3592,6.603,3593,5.516,3594,5.516,3595,5.516,3596,5.516,3597,5.516,3605,5.516]],["title/modules/UserProfileModule.html",[919,1.478,3606,3.289]],["body/modules/UserProfileModule.html",[3,0.211,4,0.178,5,0.098,39,0.01,79,0.453,81,0.466,82,2.054,96,0.211,97,0.111,111,0.007,112,0.009,113,0.007,238,1.006,356,1.871,399,1.063,401,1.461,634,2.582,919,2.17,921,2.934,922,2.838,923,3.942,924,3.445,925,3.578,926,3.145,931,3.925,932,3.578,933,2.934,934,2.838,936,3.457,937,3.846,938,3.846,939,2.748,940,3.846,941,3.997,942,3.997,946,3.263,947,3.391,2362,5.731,2364,5.731,3606,6.61,3607,5.731,3608,5.731,3609,6.515,3610,5.731,3611,6.515,3612,6.515]],["title/injectables/UserSimpleService.html",[0,1.193,2146,2.756]],["body/injectables/UserSimpleService.html",[0,1.685,2,2.276,3,0.153,4,0.129,5,0.071,8,0.941,9,3.861,10,0.295,11,0.526,12,3.106,13,1.405,14,3.545,15,4.234,16,3.545,17,2.532,18,3.177,19,3.201,20,3.545,21,3.14,22,0.63,24,0.981,25,3.982,26,3.397,27,3.816,28,3.982,29,3.545,30,3.545,31,3.026,32,1.873,33,2.555,36,0.592,38,0.922,39,0.01,40,0.537,41,0.483,42,0.922,44,0.646,48,0.828,49,4.752,50,1.638,51,2.79,52,0.576,53,2.555,54,3.665,55,3.397,56,2.79,57,0.813,58,0.652,59,2.555,60,0.524,61,2.79,62,2.79,63,2.666,64,2.79,65,3.545,66,2.666,67,2.79,68,2.666,69,2.79,70,1.988,71,2.79,72,2.79,73,2.79,74,2.79,75,2.79,76,2.79,77,2.79,78,2.79,79,0.419,80,1.268,81,0.337,82,1.487,83,2.555,84,2.276,87,2.929,88,2.183,92,2.454,96,0.153,97,0.08,98,2.362,99,2.123,102,2.197,105,0.714,107,3.879,108,4.613,110,4.221,111,0.005,112,0.007,113,0.005,187,0.765,188,0.863,189,0.863,357,1.23,525,0.769,855,3.496,856,5.563,872,3.087,1027,5.235,1195,5.69,1223,3.14,1227,4.148,1234,4.148,2146,3.893,2158,2.666,2166,4.023,2167,3.982,2209,4.926,3341,6.248,3524,3.273,3613,8.772,3614,4.715,3615,6.268,3616,6.268,3617,7.504,3618,7.504,3619,7.504,3620,6.268,3621,6.268,3622,7.504,3623,6.268,3624,6.268,3625,6.268,3626,6.268,3627,4.715,3628,6.268,3629,4.715,3630,4.715,3631,4.715,3632,4.715,3633,6.268,3634,4.715,3635,6.268,3636,4.715,3637,4.715,3638,6.268,3639,4.715,3640,6.268,3641,4.715,3642,4.715,3643,4.715,3644,4.715,3645,4.715,3646,4.715,3647,4.148,3648,4.715,3649,3.893,3650,6.268,3651,4.715,3652,4.715,3653,4.715,3654,4.715,3655,4.715,3656,7.041,3657,4.715,3658,4.715,3659,4.715,3660,4.715,3661,4.715,3662,4.715]],["title/injectables/UtilityService.html",[0,1.193,1361,2.509]],["body/injectables/UtilityService.html",[0,1.509,2,1.936,3,0.13,4,0.11,5,0.06,7,2.174,10,0.251,17,2.942,22,0.564,24,1.097,36,0.546,38,0.896,39,0.01,40,0.521,41,0.45,42,0.896,44,0.678,48,0.828,57,0.91,58,0.905,60,0.89,79,0.359,81,0.287,85,2.096,86,1.3,88,1.633,94,0.552,95,0.536,96,0.13,97,0.068,105,0.736,111,0.008,112,0.006,113,0.005,126,0.916,132,1.42,153,1.854,158,0.568,187,1.07,188,1.136,189,1.136,226,1.048,263,1.491,403,3.318,438,1.53,442,2.403,524,2.471,525,1.248,606,2.224,701,2.528,837,2.974,865,1.819,900,2.974,936,2.916,961,3.055,994,1.978,1087,2.445,1336,5.125,1361,3.174,1746,5.2,1770,3.487,1772,5.36,1781,2.974,1782,2.974,1791,5.672,1810,3.487,1833,5.473,2275,4.161,2391,3.676,2426,5.615,2427,5.615,2634,6.125,2808,4.938,2847,3.529,2898,2.974,3189,4.494,3511,5.672,3663,8.414,3664,5.613,3665,5.613,3666,5.613,3667,5.613,3668,5.613,3669,5.613,3670,5.613,3671,5.613,3672,5.613,3673,5.613,3674,5.613,3675,5.613,3676,7.014,3677,5.613,3678,4.011,3679,7.65,3680,8.414,3681,7.014,3682,7.014,3683,7.014,3684,5.613,3685,4.011,3686,4.869,3687,5.613,3688,5.613,3689,5.613,3690,5.613,3691,4.011,3692,7.65,3693,5.613,3694,6.475,3695,5.613,3696,4.011,3697,4.938,3698,5.613,3699,5.613,3700,4.011,3701,5.613,3702,7.382,3703,4.011,3704,5.613,3705,4.011,3706,5.613,3707,4.011,3708,5.613,3709,4.011,3710,4.938,3711,4.011,3712,4.011,3713,5.613,3714,4.011,3715,3.529,3716,7.014,3717,4.011,3718,4.011,3719,4.011,3720,4.011,3721,5.613,3722,4.011,3723,4.011,3724,7.014,3725,7.65,3726,4.011,3727,4.011,3728,5.613,3729,4.011,3730,4.011,3731,4.011,3732,4.011,3733,4.011,3734,4.011,3735,4.011,3736,4.011,3737,5.613,3738,5.613,3739,4.011,3740,4.011,3741,4.011,3742,5.613,3743,4.011,3744,4.938,3745,4.011,3746,4.011,3747,4.011,3748,4.011,3749,5.613,3750,4.011,3751,4.011,3752,4.011,3753,6.475,3754,4.011,3755,4.011,3756,4.011,3757,4.011,3758,4.011,3759,4.011,3760,4.011,3761,4.011,3762,5.613,3763,4.011]],["title/components/WorkspaceFieldComponent.html",[114,0.121,362,0.896]],["body/components/WorkspaceFieldComponent.html",[3,0.129,4,0.108,5,0.06,8,0.596,10,0.248,11,0.468,12,1.359,22,0.56,24,0.786,32,1.186,36,0.554,38,0.427,39,0.01,40,0.403,41,0.438,42,0.427,44,0.639,45,0.741,48,0.522,52,0.485,58,0.814,60,0.775,70,2.35,79,0.39,80,1.067,81,0.284,88,1.155,94,0.546,95,0.531,96,0.209,97,0.095,105,0.711,107,1.849,111,0.004,112,0.006,113,0.006,114,0.218,115,0.802,116,1.097,117,1.407,118,1.186,121,0.823,122,1.126,123,1.662,124,0.845,126,0.909,127,1.236,132,1.432,134,1.217,136,1.692,138,2.932,145,1.249,146,1.444,147,1.377,149,1.411,151,1.692,154,1.202,156,1.05,159,0.909,171,0.741,187,0.68,205,1.526,206,1.335,214,1.481,216,1.481,226,1.04,238,0.613,239,1.186,240,1.068,241,0.867,242,1.214,243,0.867,244,1.666,245,0.761,246,0.823,247,0.823,248,0.845,249,1.407,250,0.802,251,0.867,252,0.867,253,0.761,254,0.867,255,0.761,256,0.761,257,0.823,258,1.573,259,1.217,260,0.823,261,0.867,262,0.823,263,1.08,264,1.109,265,0.761,266,0.802,267,0.867,268,0.802,269,1.156,270,1.525,271,0.823,272,1.217,273,0.761,274,0.867,275,0.802,276,0.802,277,0.867,278,0.761,279,0.823,280,0.761,281,0.867,282,0.761,283,0.845,284,0.867,285,0.802,286,0.802,287,0.867,288,0.802,289,1.217,290,0.867,291,0.823,292,0.867,293,0.802,294,0.867,295,0.802,296,0.845,297,1.109,298,1.217,299,0.761,300,0.802,301,1.217,302,0.802,303,0.867,304,1.217,305,0.802,306,1.126,307,0.867,308,0.802,309,0.802,310,0.802,311,0.867,312,0.823,313,0.867,314,0.802,315,0.761,316,0.867,317,0.802,318,0.867,319,0.802,320,0.867,321,0.781,322,1.448,323,0.802,324,0.867,325,0.802,326,1.217,327,0.761,328,1.217,329,0.823,330,0.867,331,0.761,332,0.781,333,0.781,334,0.867,335,0.802,336,0.867,337,0.761,338,0.867,339,0.761,340,0.823,341,0.823,342,0.761,343,0.867,344,0.802,345,0.684,346,0.867,347,0.802,348,0.761,349,0.867,350,0.823,351,0.845,352,0.867,353,0.802,354,1.267,355,0.867,356,0.823,357,0.596,358,0.867,359,0.761,360,0.823,361,0.867,362,1.411,363,1.407,364,0.823,365,1.581,366,0.802,367,0.867,368,0.823,369,0.867,370,0.867,380,1.581,381,1.218,382,2.45,398,1.398,399,0.647,400,1.422,401,0.89,409,1.439,410,1.963,438,1.269,441,1.573,442,1.359,460,1.573,474,1.622,525,0.647,587,1.909,701,2.899,833,4.46,865,2.087,936,1.787,1030,4.46,1034,3.492,1035,7.242,1036,4.131,1037,5.664,1038,6.142,1039,5.664,1040,5.664,1041,6.142,1042,5.664,1043,3.492,1044,6.708,1045,3.999,1046,4.337,1047,3.492,1048,4.902,1049,3.492,1051,4.131,1052,3.492,1053,3.492,1057,3.492,1060,4.902,1062,5.154,1063,5.154,1064,3.868,1065,4.902,1066,4.902,1068,6.142,1069,4.131,1070,4.902,1072,3.492,1074,3.461,1075,3.492,1077,3.492,1078,4.902,1079,4.46,1080,3.492,1081,3.492,1082,3.492,1083,3.492,1084,3.492,1085,3.649,1090,3.492,1091,3.492,1092,3.492,1093,3.492,1094,3.492,1096,3.177,1097,3.177,1098,3.492,1099,2.599,1100,3.649,1101,3.177,1102,3.492,1103,3.177,1104,3.492,1105,3.492,1106,4.902,1116,3.492,1117,3.492,1118,3.492,1119,3.492,1120,3.492,1121,3.492,1122,3.492,1123,4.46,1124,3.492,1125,3.492,1126,3.492,1127,3.492,1128,3.492,1129,3.492,1144,3.492,1145,3.492,1180,3.868,1309,4.131,1384,2.755,1532,2.465,1663,2.348,1712,2.755,2118,3.492,2521,2.755,2674,3.177,2695,3.177,3189,4.46,3359,4.469,3764,7.497,3765,4.902,3766,3.969,3767,3.969,3768,3.969,3769,3.969,3770,3.969,3771,3.969,3772,3.969,3773,3.969,3774,3.969,3775,3.969,3776,3.969,3777,3.969,3778,3.969,3779,3.492,3780,5.572,3781,3.492,3782,3.969,3783,3.969,3784,3.969,3785,3.969,3786,3.969,3787,3.969,3788,3.969,3789,3.969,3790,3.969,3791,3.969,3792,3.969,3793,6.438,3794,3.969,3795,5.572,3796,3.969,3797,5.572,3798,3.969,3799,3.969,3800,3.969,3801,3.969,3802,3.969,3803,3.969,3804,3.492,3805,5.572,3806,3.969,3807,3.969,3808,3.969,3809,3.492,3810,3.969,3811,3.969,3812,3.969,3813,3.969,3814,3.969,3815,3.969,3816,3.969,3817,3.969,3818,3.969,3819,5.572,3820,3.969,3821,3.969,3822,3.969,3823,3.969,3824,3.969,3825,3.969,3826,3.969,3827,3.969,3828,3.969,3829,5.572,3830,5.572,3831,3.969,3832,3.969]],["title/modules/WorkspaceListModule.html",[919,1.478,3833,3.289]],["body/modules/WorkspaceListModule.html",[3,0.204,4,0.172,5,0.095,39,0.01,41,0.459,79,0.45,81,0.449,82,1.983,96,0.204,97,0.107,105,0.528,111,0.007,112,0.008,113,0.007,187,0.918,188,1.035,189,1.035,238,0.971,364,1.863,365,1.559,399,1.026,401,1.41,403,3.275,525,1.026,634,2.492,919,2.679,921,2.832,922,2.739,923,3.883,924,3.406,925,3.504,926,3.036,931,3.893,932,3.504,933,2.832,934,2.739,936,3.622,937,3.766,938,4.029,939,2.652,940,4.029,941,4.187,942,4.187,945,5.034,946,3.15,947,3.274,948,6.019,949,5.034,1212,4.662,1960,5.219,3833,6.574,3834,5.532,3835,5.532,3836,6.288,3837,5.532,3838,6.288,3839,6.288]],["title/components/WorkspaceSelectorComponent.html",[114,0.121,366,0.896]],["body/components/WorkspaceSelectorComponent.html",[3,0.147,4,0.124,5,0.068,8,1.036,10,0.462,11,0.512,13,1.656,22,0.614,24,1.032,36,0.578,38,0.794,39,0.01,40,0.528,41,0.471,42,0.829,44,0.656,45,0.846,48,0.792,50,1.636,52,0.553,57,0.958,58,0.768,60,0.767,79,0.394,81,0.324,94,0.624,95,0.606,96,0.224,97,0.117,105,0.62,111,0.005,112,0.007,113,0.005,114,0.21,115,0.915,116,1.201,117,0.99,118,1.299,121,1.836,122,1.233,123,1.672,124,0.964,126,0.996,127,1.221,132,1.378,133,1.479,134,1.684,135,1.588,136,1.588,139,1.479,140,1.479,141,1.479,142,1.656,143,1.672,144,1.672,145,1.368,146,1.368,147,1.189,148,1.404,149,1.233,150,1.218,151,1.042,152,1.218,153,1.098,154,0.846,155,1.218,156,0.996,157,1.218,158,1.047,159,0.739,160,1.218,161,1.218,166,1.098,167,1.479,168,1.109,169,1.127,170,1.323,171,1.139,172,1.098,173,1.098,174,1.098,175,1.127,176,1.441,177,0.964,178,1.016,179,1.127,180,1.07,181,1.016,182,1.127,183,1.042,184,1.127,185,0.964,186,0.915,187,0.553,188,0.624,189,0.624,190,1.127,191,1.07,192,1.042,193,1.098,194,1.479,195,0.964,198,1.127,199,1.098,200,1.042,201,1.127,202,1.127,203,1.016,204,1.127,205,1.742,206,0.94,238,0.699,239,1.299,240,1.17,241,0.99,242,1.077,243,0.99,244,1.735,245,0.868,246,0.94,247,0.94,248,0.964,249,1.508,250,0.915,251,0.99,252,0.99,253,0.868,254,0.99,255,0.868,256,0.868,257,0.94,258,1.624,259,1.333,260,0.94,261,0.99,262,0.94,263,1.157,264,1.189,265,0.868,266,0.915,267,0.99,268,0.915,269,1.266,270,1.613,271,0.94,272,1.333,273,0.868,274,0.99,275,0.915,276,0.915,277,0.99,278,0.868,279,0.94,280,0.868,281,0.99,282,0.868,283,0.964,284,0.99,285,0.915,286,0.915,287,0.99,288,0.915,289,1.333,290,0.99,291,0.94,292,0.99,293,0.915,294,0.99,295,0.915,296,0.964,297,1.189,298,1.333,299,0.868,300,0.915,301,1.333,302,0.915,303,0.99,304,1.333,305,0.915,306,1.233,307,0.99,308,0.915,309,0.915,310,0.915,311,0.99,312,0.94,313,0.99,314,0.915,315,0.868,316,0.99,317,0.915,318,0.99,319,0.915,320,0.99,321,0.892,322,1.532,323,0.915,324,0.99,325,0.915,326,1.333,327,0.868,328,1.333,329,0.94,330,0.99,331,0.868,332,0.892,333,0.892,334,0.99,335,0.915,336,0.99,337,0.868,338,0.99,339,0.868,340,0.94,341,0.94,342,0.868,343,0.99,344,0.915,345,0.78,346,0.99,347,0.915,348,0.868,349,0.99,350,0.94,351,0.964,352,0.99,353,0.915,354,0.892,355,0.99,356,0.94,357,0.68,358,0.99,359,0.868,360,0.94,361,0.99,362,0.915,363,0.99,364,0.94,365,1.683,366,1.64,367,0.99,368,1.431,369,0.99,370,0.99,373,1.156,436,2.494,438,0.824,439,2.82,441,1.795,442,2.09,443,2.494,448,2.329,551,1.851,560,1.284,1214,4.885,3387,3.985,3764,6.071,3779,5.369,3840,4.53,3841,6.102,3842,4.53,3843,4.53,3844,4.53,3845,4.53,3846,4.53,3847,4.53,3848,4.53,3849,4.53,3850,4.53,3851,4.53,3852,4.53,3853,4.53,3854,4.53,3855,4.53]],["title/injectables/WorkspaceTypeService.html",[0,1.193,3359,3.08]],["body/injectables/WorkspaceTypeService.html",[0,1.86,2,2.65,3,0.178,4,0.15,5,0.083,7,2.975,8,1.038,9,3.918,10,0.343,11,0.581,12,3.107,13,1.551,14,3.911,15,3.748,16,3.911,17,2.454,18,3.26,19,3.303,20,3.911,21,3.464,22,0.695,24,1.022,25,4.282,26,3.748,27,4.104,28,4.282,29,3.911,30,3.911,31,3.339,32,2.067,33,2.975,36,0.59,38,0.899,39,0.01,40,0.537,41,0.48,42,0.899,44,0.636,48,0.819,49,4.704,50,1.667,51,3.248,52,0.67,53,2.975,54,3.6,55,3.748,56,3.248,57,0.897,58,0.719,59,2.975,60,0.61,61,3.248,62,3.248,63,3.104,64,3.248,65,3.911,66,3.104,67,3.248,68,3.104,69,3.248,70,2.315,71,3.248,72,3.248,73,3.248,74,3.248,75,3.248,76,3.248,77,3.248,78,3.248,79,0.428,80,1.476,81,0.392,82,1.731,83,2.975,84,2.65,87,3.409,88,2.313,96,0.178,97,0.093,98,2.749,99,2.472,102,2.558,105,0.636,107,3.223,108,3.748,110,3.464,111,0.006,112,0.008,113,0.006,187,0.845,525,0.895,843,4.829,870,4.829,963,4.829,1027,4.296,1223,3.464,2207,3.339,3359,4.801,3504,4.829,3765,6.084,3856,8.195,3857,7.95,3858,6.916,3859,7.95,3860,6.916,3861,5.488,3862,6.916]],["title/dependencies.html",[922,2.32,3863,3.723]],["body/dependencies.html",[19,2.287,39,0.01,49,3.519,85,2.172,86,2.356,95,0.972,111,0.007,112,0.008,113,0.007,170,1.394,286,1.202,354,1.651,390,2.22,681,5.232,922,2.591,924,2.971,946,2.979,987,2.037,994,2.095,1633,5.389,1635,3.694,1637,4.409,1638,4.409,1639,4.409,1755,3.694,2386,5.819,2410,4.761,2932,5.45,3382,5.389,3448,5.232,3537,5.232,3710,5.232,3864,5.947,3865,5.947,3866,5.947,3867,7.851,3868,5.947,3869,5.947,3870,5.947,3871,5.947,3872,5.947,3873,5.947,3874,5.947,3875,7.269,3876,5.947,3877,5.947,3878,7.269,3879,5.947,3880,5.947,3881,5.947,3882,7.269,3883,5.947,3884,5.947,3885,5.947,3886,5.947,3887,5.947,3888,5.947,3889,5.947,3890,7.269,3891,5.232,3892,5.947,3893,5.947,3894,5.947,3895,5.947,3896,7.269,3897,5.947,3898,7.269,3899,7.269,3900,5.947,3901,5.947,3902,5.947,3903,5.947,3904,5.947,3905,5.947,3906,5.232,3907,5.947,3908,5.947,3909,7.269,3910,5.947,3911,7.269,3912,5.947,3913,5.947,3914,5.947,3915,5.947,3916,5.947,3917,5.947,3918,5.947,3919,5.947,3920,5.947,3921,8.388,3922,5.947,3923,5.947,3924,7.269,3925,5.947,3926,7.269,3927,5.947,3928,5.947,3929,5.947,3930,5.947,3931,5.947,3932,5.947,3933,5.947,3934,5.947,3935,5.947,3936,5.947,3937,5.947,3938,7.269,3939,5.947,3940,7.508,3941,7.269,3942,8.178,3943,5.947,3944,5.947,3945,5.947,3946,5.947,3947,5.947,3948,5.947,3949,5.947,3950,5.947,3951,5.947,3952,5.947,3953,5.947,3954,5.947,3955,5.947,3956,5.947,3957,5.947,3958,5.947,3959,4.761,3960,5.947,3961,7.269,3962,5.947,3963,5.232,3964,5.947,3965,5.232,3966,5.947,3967,5.947,3968,5.947]],["title/miscellaneous/functions.html",[3969,3.276,3970,4.685]],["body/miscellaneous/functions.html",[10,0.425,38,0.935,39,0.01,40,0.544,41,0.424,42,0.935,48,0.738,111,0.008,112,0.009,113,0.008,464,2.061,2244,5.832,3569,5.975,3575,6.298,3576,6.839,3587,6.298,3598,5.975,3605,5.975,3969,5.975,3970,5.975,3971,8.543,3972,8.692,3973,8.543,3974,7.867,3975,8.305]],["title/index.html",[10,0.233,714,2.981,3976,3.276]],["body/index.html",[4,0.18,39,0.009,88,1.917,90,3.18,111,0.007,112,0.009,113,0.007,263,1.498,306,1.331,354,1.297,516,2.533,832,4.092,1138,5.273,1160,5.273,1161,5.273,1162,5.273,1163,4.884,1890,4.313,2308,4.884,2336,4.884,2395,3.57,2403,6.799,2778,4.238,3781,5.795,3977,7.857,3978,6.081,3979,6.587,3980,7.728,3981,6.587,3982,7.728,3983,5.795,3984,6.587,3985,5.795,3986,6.587,3987,4.884,3988,8.46,3989,6.587,3990,5.795,3991,6.587,3992,6.587,3993,5.795,3994,5.795,3995,6.587,3996,6.587,3997,6.587,3998,6.587,3999,6.587,4000,6.187,4001,4.884,4002,6.587,4003,6.587,4004,6.587,4005,6.587,4006,6.587,4007,4.884,4008,6.587,4009,6.587,4010,6.587,4011,6.587,4012,6.587,4013,5.693,4014,6.587,4015,4.884,4016,5.795,4017,5.795,4018,4.884,4019,6.587,4020,6.587,4021,5.795,4022,5.795,4023,6.587,4024,5.273,4025,6.587,4026,5.795]],["title/license.html",[714,2.981,1167,2.76,3976,3.276]],["body/license.html",[4,0.235,5,0.05,21,1.004,22,0.202,24,0.996,36,0.131,39,0.004,40,0.206,41,0.178,52,0.245,79,0.103,88,0.961,97,0.034,105,0.168,111,0.004,112,0.004,113,0.004,114,0.147,128,2.922,147,1.208,151,0.461,164,0.819,168,0.6,185,1.039,187,0.514,195,0.703,200,0.76,263,0.706,266,0.405,283,0.427,286,0.667,306,0.667,351,0.427,357,1.127,402,0.819,454,2.232,464,1.521,507,1.197,511,1.72,519,1.1,524,0.706,549,0.687,554,2.372,564,1.269,587,1.848,606,2.3,609,1.994,676,1.087,799,1.313,865,1.989,877,1.605,889,2.809,934,0.873,961,3.467,966,1.605,993,3.37,994,1.901,1036,1.186,1063,1.605,1069,1.487,1074,3.031,1087,0.873,1096,1.605,1099,2.756,1100,1.313,1101,3.37,1113,1.764,1136,6.518,1138,1.605,1140,2.38,1152,3.351,1157,6.669,1158,4.199,1163,4.303,1165,6.274,1166,6.455,1167,6.69,1168,5.659,1169,3.745,1170,1.605,1172,6.952,1173,6.325,1174,6.589,1175,3.37,1176,4.319,1177,5.31,1178,6.908,1179,6.714,1180,2.922,1181,4,1182,1.605,1183,1.605,1184,2.292,1185,4.55,1186,6.014,1187,2.643,1188,3.906,1189,2.643,1190,2.643,1191,5.072,1192,4.319,1193,2.491,1194,3.812,1195,2.292,1196,5.133,1197,5.064,1198,4.319,1200,1.605,1252,1.004,1255,1.004,1260,2.191,1291,1.487,1336,1.392,1409,2.292,1449,3.631,1577,1.487,1601,6.416,1632,3.618,1734,1.487,1749,1.487,1792,1.487,1810,1.245,1902,5.758,1907,1.487,1908,1.487,1959,1.764,1960,2.292,1963,4.319,1965,3.37,2059,3.37,2061,2.643,2062,1.487,2074,1.605,2149,2.491,2167,1.134,2187,1.392,2208,4.127,2253,2.643,2254,5.399,2255,2.905,2308,4.55,2336,4.754,2366,3.121,2368,1.245,2376,2.905,2378,4.319,2382,4.319,2383,3.37,2385,3.121,2388,1.764,2395,3.475,2397,1.764,2400,2.448,2405,3.37,2458,1.764,2483,2.905,2520,1.764,2573,2.448,2588,1.764,2590,1.392,2605,1.392,2613,2.292,2718,2.905,2732,2.905,2777,2.162,2807,5.106,2830,5.493,2885,2.922,2896,1.764,2897,3.703,2898,4.303,2899,1.605,2942,3.618,2943,1.392,2947,1.487,2995,1.392,3051,1.487,3062,3.387,3064,5.493,3134,6.019,3136,5.072,3146,6.019,3221,4.647,3222,1.764,3461,4.293,3519,2.448,3524,3.387,3529,3.906,3530,1.605,3566,4.019,3568,3.121,3686,5.062,3697,1.764,3715,3.703,3906,5.106,3959,4.319,3963,4.747,3965,1.764,3983,1.764,3985,1.764,3987,6.012,3990,1.764,3993,2.905,4000,4.319,4001,6.256,4007,4,4013,1.392,4017,5.641,4018,3.121,4021,1.764,4024,3.906,4027,2.005,4028,4.209,4029,2.005,4030,3.302,4031,4.747,4032,5.395,4033,4.209,4034,7.409,4035,2.005,4036,3.703,4037,2.005,4038,2.005,4039,3.302,4040,7.161,4041,5.804,4042,2.005,4043,2.005,4044,6.412,4045,2.005,4046,2.005,4047,7.409,4048,4.209,4049,3.302,4050,9,4051,3.302,4052,6.137,4053,5.395,4054,2.005,4055,2.005,4056,4.88,4057,6.412,4058,3.302,4059,6.412,4060,2.005,4061,3.302,4062,2.005,4063,4.209,4064,7.836,4065,4.319,4066,3.302,4067,4.88,4068,2.005,4069,2.005,4070,3.302,4071,4.88,4072,3.302,4073,3.302,4074,5.901,4075,3.302,4076,4.88,4077,6.137,4078,5.395,4079,2.005,4080,4.209,4081,6.137,4082,2.005,4083,2.005,4084,2.005,4085,6.412,4086,3.302,4087,7.012,4088,3.302,4089,2.005,4090,2.005,4091,2.643,4092,2.005,4093,3.302,4094,4.209,4095,2.005,4096,2.005,4097,2.005,4098,2.005,4099,2.005,4100,2.005,4101,2.005,4102,2.005,4103,2.005,4104,2.005,4105,3.302,4106,2.005,4107,2.005,4108,3.302,4109,4.209,4110,3.302,4111,2.005,4112,2.005,4113,3.302,4114,2.905,4115,2.005,4116,3.302,4117,3.302,4118,2.005,4119,2.005,4120,3.302,4121,4.209,4122,3.302,4123,3.302,4124,2.005,4125,2.005,4126,5.804,4127,2.005,4128,1.764,4129,2.005,4130,2.005,4131,2.005,4132,4.88,4133,2.005,4134,3.302,4135,4.209,4136,2.005,4137,5.31,4138,6.644,4139,2.005,4140,7.409,4141,4.88,4142,5.395,4143,5.804,4144,4.209,4145,2.005,4146,4.209,4147,3.302,4148,2.005,4149,2.005,4150,2.005,4151,4.209,4152,2.005,4153,2.005,4154,3.302,4155,3.302,4156,2.005,4157,6.019,4158,2.005,4159,4.88,4160,6.412,4161,4.209,4162,3.302,4163,8.58,4164,4.209,4165,6.644,4166,2.005,4167,3.302,4168,4.209,4169,6.644,4170,6.842,4171,4.88,4172,2.005,4173,3.302,4174,2.905,4175,4.88,4176,4.88,4177,5.319,4178,2.005,4179,4.209,4180,1.605,4181,8.193,4182,3.302,4183,2.005,4184,6.412,4185,2.005,4186,3.703,4187,6.412,4188,7.513,4189,4.88,4190,3.302,4191,6.412,4192,7.012,4193,5.804,4194,2.005,4195,2.005,4196,2.005,4197,6.412,4198,2.005,4199,3.302,4200,1.764,4201,2.005,4202,4.209,4203,2.005,4204,4.209,4205,2.005,4206,2.005,4207,2.005,4208,4.209,4209,3.703,4210,2.005,4211,2.005,4212,2.005,4213,2.905,4214,2.005,4215,2.005,4216,2.005,4217,4.209,4218,4.209,4219,4.209,4220,2.005,4221,2.005,4222,5.395,4223,2.005,4224,2.005,4225,3.302,4226,2.005,4227,4.209,4228,2.005,4229,2.005,4230,2.005,4231,2.005,4232,3.302,4233,2.005,4234,8.063,4235,2.005,4236,2.005,4237,3.302,4238,2.005,4239,3.302,4240,3.618,4241,2.005,4242,2.005,4243,2.005,4244,2.005,4245,3.302,4246,4.209,4247,2.005,4248,3.302,4249,2.005,4250,2.005,4251,5.804,4252,2.005,4253,4.293,4254,2.005,4255,6.137,4256,2.005,4257,5.395,4258,2.005,4259,3.302,4260,2.005,4261,2.005,4262,3.703,4263,4.209,4264,2.005,4265,2.005,4266,2.005,4267,2.005,4268,4.209,4269,4.209,4270,2.005,4271,2.005,4272,2.905,4273,3.302,4274,3.302,4275,2.005,4276,7.293,4277,3.302,4278,2.005,4279,2.005,4280,2.005,4281,2.005,4282,2.005,4283,2.005,4284,4.209,4285,1.764,4286,2.005,4287,5.215,4288,2.005,4289,2.005,4290,5.395,4291,5.395,4292,2.005,4293,2.005,4294,4.209,4295,2.005,4296,2.005,4297,4.88,4298,2.005,4299,3.302,4300,2.005,4301,2.005,4302,2.005,4303,2.005,4304,2.005,4305,3.302,4306,3.302,4307,2.005,4308,4.209,4309,2.005,4310,2.005,4311,3.302,4312,2.005,4313,2.005,4314,2.005,4315,2.005,4316,3.302,4317,3.302,4318,3.302,4319,3.302,4320,6.644,4321,4.209,4322,5.804,4323,2.005,4324,2.005,4325,3.703,4326,4.209,4327,4.88,4328,4.88,4329,3.703,4330,4.88,4331,3.302,4332,2.005,4333,5.804,4334,1.764,4335,3.302,4336,3.302,4337,5.395,4338,3.302,4339,4.293,4340,4.88,4341,3.302,4342,4.209,4343,4.384,4344,5.395,4345,2.005,4346,2.005,4347,2.005,4348,4.209,4349,3.302,4350,2.005,4351,2.005,4352,2.005,4353,2.005,4354,3.302,4355,2.005,4356,2.005,4357,2.005,4358,4.209,4359,2.005,4360,2.005,4361,3.302,4362,4.209,4363,2.005,4364,3.302,4365,1.605,4366,2.005,4367,2.005,4368,3.302,4369,3.302,4370,7.959,4371,4.209,4372,2.905,4373,3.302,4374,3.302,4375,3.302,4376,4.293,4377,3.302,4378,2.005,4379,2.005,4380,2.005,4381,2.005,4382,5.804,4383,3.302,4384,2.005,4385,2.005,4386,2.005,4387,2.005,4388,3.302,4389,2.005,4390,3.302,4391,2.005,4392,5.395,4393,6.412,4394,4.293,4395,2.005,4396,7.012,4397,2.005,4398,2.005,4399,1.764,4400,2.005,4401,2.005,4402,2.005,4403,2.005,4404,4.209,4405,4.88,4406,3.302,4407,2.005,4408,2.005,4409,2.005,4410,2.005,4411,2.005,4412,3.302,4413,2.005,4414,2.005,4415,4.209,4416,4.88,4417,2.005,4418,3.302,4419,3.302,4420,2.005,4421,2.005,4422,3.703,4423,2.005,4424,2.005,4425,2.005,4426,2.005,4427,2.005,4428,3.302,4429,2.005,4430,2.005,4431,2.005,4432,2.005,4433,2.005,4434,2.005,4435,2.005,4436,2.005,4437,2.005,4438,5.395,4439,2.005,4440,2.005,4441,3.906,4442,2.005,4443,1.764,4444,2.005,4445,2.005,4446,2.005,4447,2.005,4448,2.005,4449,2.005,4450,3.302,4451,6.137,4452,1.764,4453,4.88,4454,2.005,4455,2.005,4456,4.209,4457,2.005,4458,2.005,4459,3.703,4460,2.005,4461,3.302,4462,2.005,4463,2.005,4464,2.005,4465,2.005,4466,2.005,4467,2.005,4468,2.005,4469,2.005,4470,3.302,4471,2.005,4472,2.005,4473,2.005,4474,3.302,4475,3.302,4476,2.005,4477,2.005,4478,4.209,4479,2.005,4480,2.005,4481,3.302,4482,2.005,4483,3.302,4484,2.005,4485,4.209,4486,6.137,4487,2.005,4488,3.302,4489,3.302,4490,2.005,4491,2.005,4492,1.764,4493,2.005,4494,2.005,4495,3.302,4496,2.005,4497,4.88,4498,2.005,4499,5.395,4500,2.005,4501,2.005,4502,2.005,4503,2.005,4504,2.005,4505,3.302,4506,3.302,4507,3.302,4508,4.209,4509,2.005,4510,3.302,4511,2.005,4512,2.643,4513,4.209,4514,2.005,4515,3.302,4516,2.005,4517,3.302,4518,2.005,4519,3.302,4520,2.005,4521,2.005,4522,3.302,4523,8.063,4524,3.302,4525,2.005,4526,5.395,4527,6.842,4528,4.209,4529,2.005,4530,2.005,4531,2.005,4532,4.88,4533,2.005,4534,2.005,4535,4.209,4536,2.005,4537,3.302,4538,2.005,4539,2.005,4540,2.005,4541,2.005,4542,2.005,4543,2.005,4544,2.005,4545,4.88,4546,3.302,4547,2.005,4548,2.005,4549,4.209,4550,2.005,4551,3.302,4552,4.209,4553,2.005,4554,3.302,4555,2.005,4556,2.005,4557,2.005,4558,2.005,4559,3.302,4560,4.209,4561,2.005,4562,3.302,4563,2.005,4564,3.302,4565,2.005,4566,2.005,4567,2.005,4568,4.209,4569,3.302,4570,2.005,4571,4.88,4572,2.005,4573,4.209,4574,2.005,4575,2.005,4576,1.764,4577,3.302,4578,2.005,4579,2.005,4580,2.005,4581,4.209,4582,3.302,4583,3.302,4584,2.005,4585,3.302,4586,4.209,4587,4.88,4588,2.005,4589,2.005,4590,3.302,4591,2.005,4592,4.209,4593,2.005,4594,3.302,4595,2.005,4596,2.005,4597,2.005,4598,1.764,4599,2.005,4600,3.302,4601,4.209,4602,3.302,4603,2.005,4604,3.302,4605,2.005,4606,2.005,4607,3.302,4608,3.302,4609,2.005,4610,2.005,4611,3.302,4612,2.005,4613,2.005,4614,2.005,4615,2.005,4616,4.209,4617,2.005,4618,2.005,4619,2.005,4620,2.005,4621,2.005,4622,4.88,4623,3.302,4624,4.209,4625,2.005,4626,2.005,4627,2.005,4628,2.005,4629,2.005,4630,3.302,4631,2.005,4632,2.005,4633,2.005,4634,1.764,4635,2.005,4636,2.005,4637,2.005,4638,2.005,4639,2.005,4640,2.005,4641,2.005,4642,2.005,4643,2.005,4644,2.005,4645,2.005,4646,3.302,4647,2.005,4648,2.005,4649,2.005,4650,2.005,4651,2.005,4652,2.005,4653,2.005,4654,2.005,4655,2.005,4656,2.005,4657,4.209,4658,2.005,4659,2.005,4660,2.005,4661,3.302,4662,2.005,4663,2.005,4664,2.005,4665,1.764,4666,2.005,4667,2.005,4668,2.905,4669,3.302,4670,1.764,4671,3.302,4672,1.764,4673,2.005,4674,2.005,4675,4.209,4676,3.302,4677,2.005,4678,3.302,4679,2.005,4680,2.005,4681,2.005,4682,2.005,4683,2.005,4684,2.005,4685,2.905,4686,2.005,4687,2.005,4688,2.005,4689,3.302,4690,2.005,4691,4.209,4692,2.005,4693,2.005,4694,2.005,4695,2.005,4696,2.005,4697,2.005,4698,2.005,4699,2.005,4700,2.005,4701,2.005,4702,2.005,4703,2.005,4704,2.005,4705,2.005,4706,2.005,4707,2.005,4708,2.005,4709,2.005,4710,2.005,4711,2.005,4712,2.005,4713,2.005,4714,2.005,4715,2.005,4716,2.005,4717,2.005,4718,2.005,4719,1.605,4720,1.764,4721,2.005,4722,2.905,4723,2.005,4724,2.005,4725,2.005,4726,2.005,4727,2.005,4728,2.005,4729,3.302,4730,3.302,4731,2.005,4732,2.005,4733,2.005,4734,2.005,4735,2.005,4736,2.005,4737,2.005,4738,2.005,4739,2.005,4740,2.005,4741,3.302,4742,2.005,4743,2.005,4744,2.005,4745,2.005,4746,2.005,4747,2.005,4748,1.605,4749,2.005,4750,2.005,4751,2.005,4752,2.005,4753,2.005,4754,2.005,4755,1.764,4756,2.005,4757,2.005,4758,2.005,4759,2.005]],["title/modules.html",[921,2.709]],["body/modules.html",[39,0.009,111,0.008,112,0.009,113,0.008,634,3.592,920,5.039,921,3.061,931,3.061,1146,5.039,1604,5.039,2191,5.039,2349,5.039,2356,5.039,3147,5.039,3310,5.039,3487,5.039,3606,5.039,3833,5.039,4018,6.72,4760,9.063,4761,9.063]],["title/overview.html",[4762,5.293]],["body/overview.html",[1,4.772,2,1.915,18,2.403,35,2.715,39,0.01,111,0.004,112,0.006,113,0.004,115,1.582,116,0.781,209,2.804,238,0.612,245,1.501,247,1.624,250,1.582,253,1.501,255,1.234,257,1.624,260,1.624,262,1.624,264,1.267,265,1.501,268,1.582,271,1.726,273,1.501,275,1.681,276,1.582,278,1.501,280,1.501,282,1.501,285,1.582,288,1.582,291,1.624,293,1.582,295,1.582,299,1.501,302,1.582,305,1.582,308,1.582,309,1.582,310,1.301,312,1.726,314,1.301,317,1.301,319,1.582,321,1.541,323,1.582,325,1.582,327,1.501,329,1.624,331,1.234,333,1.541,335,1.301,337,1.501,339,1.501,342,1.501,344,1.582,345,1.349,347,1.582,348,1.501,350,1.624,353,1.582,356,1.624,359,1.501,360,1.624,362,1.582,364,1.624,366,1.582,368,1.624,628,1.286,919,1.321,920,6.022,921,1.786,922,1.728,923,1.915,924,1.621,925,1.849,926,1.915,927,3.49,928,3.49,929,3.49,930,3.49,931,4.176,932,2.596,933,1.786,934,1.728,950,4.215,1146,5.805,1147,3.49,1148,3.49,1149,3.49,1151,3.49,1152,4.567,1153,5.104,1154,5.104,1155,5.104,1169,3.866,1221,4.772,1361,3.64,1604,5.805,1605,3.49,1606,3.49,1609,3.49,1859,4.215,1890,2.598,1925,3.809,2013,4.772,2146,3.998,2191,5.805,2192,3.49,2193,3.49,2195,3.49,2224,4.468,2349,5.805,2350,3.49,2351,3.49,2353,3.49,2356,5.805,2357,3.49,2358,3.49,2360,3.49,2626,4.772,2627,3.176,3147,6.022,3148,3.49,3149,3.49,3152,3.49,3310,6.169,3311,3.49,3312,3.49,3314,3.49,3315,3.49,3316,4.772,3354,3.49,3355,3.49,3356,3.49,3357,3.49,3358,5.805,3359,4.468,3487,5.805,3488,3.49,3489,3.49,3491,3.49,3568,2.941,3606,5.805,3607,3.49,3608,3.49,3610,3.49,3833,5.805,3834,3.49,3835,3.49,3837,3.49,4762,3.49,4763,3.967,4764,3.967,4765,3.967]],["title/additional-documentation/installation-guide.html",[528,1.069,4343,1.898,4441,2.568,4766,2.378]],["body/additional-documentation/installation-guide.html",[5,0.096,19,2.447,39,0.01,40,0.398,88,1.852,111,0.007,112,0.009,113,0.007,226,1.414,264,1.097,332,1.491,354,1.253,454,2.447,516,2.447,799,4.959,894,4.951,922,3.645,994,2.243,1168,4.419,1193,4.481,1197,3.954,1712,4.419,1965,6.063,2336,4.719,2395,3.45,2632,5.096,2720,5.6,2778,3.794,3518,5.615,3524,4.419,3649,5.309,3744,5.6,3959,6.063,4013,4.419,4024,6.472,4026,5.6,4065,5.096,4074,4.719,4285,5.6,4287,4.419,4441,6.063,4459,6.663,4672,5.6,4766,6.203,4767,6.365,4768,7.573,4769,5.615,4770,6.365,4771,6.365,4772,6.365,4773,6.365,4774,7.573,4775,6.365,4776,6.365,4777,6.365,4778,6.365,4779,8.761,4780,6.365,4781,6.365,4782,6.063,4783,7.573,4784,6.365,4785,6.365,4786,6.365,4787,6.365,4788,6.365,4789,5.6,4790,7.573,4791,6.365,4792,6.365,4793,6.365,4794,6.365,4795,6.365,4796,6.365,4797,6.365,4798,6.365,4799,5.6,4800,6.365,4801,5.6,4802,6.365,4803,6.365,4804,6.365,4805,6.365,4806,6.365,4807,6.365,4808,6.365]],["title/additional-documentation/configuration-guide.html",[528,1.069,894,1.898,4343,1.898,4766,2.378]],["body/additional-documentation/configuration-guide.html",[5,0.096,17,2.066,21,3.194,39,0.009,111,0.007,112,0.009,113,0.007,127,1.128,147,1.098,264,1.098,509,2.38,832,3.96,889,3.319,894,5.339,994,2.246,1014,3.96,1085,4.964,1139,3.772,1169,4.425,1177,4.727,1184,4.425,1191,4.727,1193,4.953,1194,5.025,1755,3.96,1810,3.96,1852,4.727,2138,5.104,2149,3.772,2187,5.616,2205,2.971,2378,5.104,2394,5.262,2395,4.384,2405,5.104,2778,4.193,2885,5.262,3423,5.609,3511,5.62,3529,5.104,3573,4.727,3649,5.2,3686,4.425,3940,6.669,3978,4.727,3987,4.727,4013,4.425,4016,5.609,4022,5.609,4074,4.727,4157,5.609,4174,5.609,4186,5.609,4209,5.609,4240,4.727,4262,5.609,4325,5.609,4670,5.609,4719,5.104,4766,4.727,4769,6.548,4782,5.104,4799,5.609,4801,5.609,4809,7.58,4810,7.58,4811,6.375,4812,6.375,4813,6.375,4814,6.375,4815,7.58,4816,6.375,4817,6.375,4818,6.375,4819,6.375,4820,7.58,4821,6.669,4822,6.375,4823,6.375,4824,6.375,4825,6.375,4826,6.375,4827,5.609,4828,6.375,4829,8.371,4830,7.58,4831,6.375,4832,6.375,4833,5.609,4834,6.375,4835,5.104,4836,5.609,4837,5.609,4838,6.375,4839,6.375,4840,5.609,4841,6.375,4842,6.375]],["title/additional-documentation/configuration-guide/configuring-web-forms.html",[528,0.939,4343,1.667,4365,2.256,4843,1.667,4844,2.479]],["body/additional-documentation/configuration-guide/configuring-web-forms.html",[5,0.123,10,0.253,17,1.828,39,0.01,40,0.54,41,0.473,58,0.797,60,0.781,90,1.95,93,2.284,97,0.12,111,0.005,112,0.007,113,0.005,114,0.215,116,1.11,122,1.421,127,1.542,132,1.251,147,1.506,159,1.06,180,1.332,183,1.847,185,1.498,195,1.201,200,0.929,226,1.573,240,1.081,263,1.18,297,1.12,315,1.627,332,0.795,345,0.972,357,0.975,389,1.309,464,1.058,519,2.165,524,2.29,525,1.251,526,3.18,531,2.212,587,1.383,628,1.828,641,3.552,742,3.552,748,4.511,865,1.309,889,4.096,894,4.984,934,1.759,966,3.233,977,3.233,980,3.233,1022,3.439,1051,2.994,1069,4.818,1085,3.693,1087,1.759,1099,2.644,1137,3.428,1181,2.994,1184,2.803,1185,4.181,1193,3.337,1194,2.508,1195,3.915,1414,2.803,1577,2.994,1740,2.994,1772,3.503,1888,4.181,1890,3.693,1904,4.37,1960,2.803,1980,3.845,2060,3.233,2067,3.233,2069,3.233,2187,2.803,2206,3.675,2208,2.508,2239,6.189,2275,5.216,2337,3.915,2366,2.994,2368,2.508,2382,4.515,2383,3.233,2387,3.233,2394,4.511,2395,2.188,2400,2.994,2484,5.925,2674,6.427,2777,3.693,2778,2.825,2830,4.181,2885,2.803,2892,2.994,2899,3.233,2995,3.915,3000,6.125,3030,4.818,3031,5.834,3062,3.915,3136,5.487,3207,7.062,3235,3.552,3382,4.181,3511,4.181,3518,2.994,3519,5.834,3521,5.203,3523,3.552,3524,2.803,3530,3.233,3566,3.693,3649,2.508,3804,3.552,3809,3.552,3977,3.552,3978,4.181,3994,3.552,4000,3.233,4001,4.818,4007,4.818,4018,2.994,4031,3.552,4036,4.961,4065,3.233,4074,4.181,4114,3.552,4128,3.552,4137,4.818,4177,3.233,4180,3.233,4200,6.511,4240,4.181,4272,4.961,4287,4.511,4329,3.552,4334,3.552,4339,3.552,4365,4.515,4372,3.552,4394,5.717,4399,5.717,4422,4.961,4443,4.961,4492,3.552,4512,4.515,4634,3.552,4668,3.552,4685,3.552,4719,4.515,4720,3.552,4722,3.552,4748,4.515,4782,3.233,4789,5.717,4821,3.552,4827,4.961,4836,3.552,4837,3.552,4843,2.389,4844,3.552,4845,2.994,4846,3.552,4847,5.64,4848,3.233,4849,4.038,4850,4.038,4851,6.499,4852,4.038,4853,4.038,4854,4.038,4855,4.038,4856,4.038,4857,8.261,4858,4.038,4859,4.038,4860,4.038,4861,4.038,4862,8.424,4863,4.038,4864,4.038,4865,4.038,4866,4.038,4867,4.038,4868,4.038,4869,4.038,4870,4.038,4871,4.961,4872,4.038,4873,5.64,4874,5.64,4875,5.64,4876,4.515,4877,4.038,4878,4.038,4879,4.038,4880,4.038,4881,4.038,4882,4.038,4883,4.038,4884,5.64,4885,5.64,4886,4.038,4887,4.038,4888,4.038,4889,4.038,4890,5.64,4891,4.038,4892,4.038,4893,5.64,4894,5.64,4895,6.499,4896,6.499,4897,6.499,4898,6.499,4899,8.261,4900,4.038,4901,5.64,4902,7.035,4903,4.038,4904,4.038,4905,4.038,4906,4.038,4907,4.038,4908,5.64,4909,5.64,4910,5.64,4911,7.035,4912,6.499,4913,3.552,4914,4.038,4915,3.552,4916,4.038,4917,4.038,4918,4.038,4919,4.038,4920,4.038,4921,4.038,4922,5.64,4923,5.64,4924,5.64,4925,4.038,4926,4.038,4927,4.038,4928,4.038,4929,4.038,4930,6.499,4931,5.64,4932,4.038,4933,4.038,4934,4.038,4935,4.038,4936,4.038,4937,4.038,4938,4.038,4939,4.038,4940,4.038,4941,4.038]],["title/additional-documentation/configuration-guide/configuring-email-notifications.html",[528,0.939,2205,1.313,4343,1.667,4835,2.256,4843,1.667]],["body/additional-documentation/configuration-guide/configuring-email-notifications.html",[5,0.114,11,0.58,19,2.108,36,0.359,39,0.01,57,0.982,111,0.006,112,0.008,113,0.006,126,1.401,132,1.127,185,1.471,192,1.59,226,1.29,239,1.611,263,0.919,269,1.433,297,0.944,524,2.667,525,1.127,526,3.201,531,1.638,676,4.698,748,5.253,889,4.264,894,4.702,896,5.532,987,2.367,1085,3.589,1103,6.058,1577,5.611,1963,4.388,2205,4.182,2253,4.388,2368,3.405,2387,4.388,2778,4.103,2898,4.064,3286,6.079,3518,4.064,3519,4.064,3521,4.388,3573,4.064,3649,4.292,3891,4.822,3987,5.123,4001,4.064,4007,4.064,4015,4.064,4091,4.388,4137,5.611,4213,4.822,4240,5.123,4287,5.253,4376,4.822,4452,6.079,4512,5.532,4598,6.079,4665,6.079,4835,6.058,4843,4.478,4845,4.064,4846,4.822,4848,5.532,4871,6.079,4876,4.388,4913,6.99,4915,4.822,4942,8.191,4943,6.91,4944,7.568,4945,5.481,4946,6.91,4947,7.946,4948,5.611,4949,7.568,4950,6.91,4951,8.59,4952,5.481,4953,4.822,4954,6.658,4955,5.481,4956,5.481,4957,5.481,4958,5.481,4959,7.568,4960,7.568,4961,6.91,4962,5.481,4963,5.481,4964,5.481,4965,5.481,4966,5.481,4967,4.822,4968,5.481,4969,5.481,4970,5.481,4971,5.481,4972,5.481,4973,7.946,4974,5.481,4975,6.91,4976,6.91,4977,5.481,4978,5.481,4979,5.481,4980,5.481,4981,5.481]],["title/additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html",[528,0.837,1755,1.56,2778,1.258,4343,1.486,4843,1.486,4982,2.21]],["body/additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html",[5,0.091,11,0.51,15,4.295,19,2.337,39,0.01,111,0.007,112,0.008,113,0.007,124,1.294,127,1.076,132,0.992,185,1.294,192,1.997,206,1.644,315,1.412,516,3.047,524,2.141,525,0.992,526,3.147,531,1.816,832,3.775,889,3.834,894,4.358,987,3,1085,4.823,1755,5.392,2308,4.506,2400,4.506,2484,4.865,2778,4.387,2943,4.219,3221,4.865,3649,4.923,3686,4.219,3978,4.506,4015,4.506,4091,4.865,4137,5.876,4180,4.865,4287,5.113,4576,5.347,4755,5.347,4769,4.506,4843,4.358,4845,4.506,4848,5.897,4876,4.865,4948,6.576,4953,5.347,4954,6.48,4967,6.973,4982,5.347,4983,6.077,4984,6.077,4985,6.077,4986,7.366,4987,6.077,4988,7.366,4989,6.077,4990,6.077,4991,6.077,4992,6.077,4993,7.366,4994,7.366,4995,7.366,4996,6.077,4997,7.366,4998,7.366,4999,7.366,5000,7.366,5001,6.077,5002,6.077,5003,6.077,5004,7.366,5005,6.077,5006,7.366,5007,6.077]],["title/additional-documentation/configuration-guide/configuring-authentication.html",[528,1.069,2138,2.568,4343,1.898,4843,1.898]],["body/additional-documentation/configuration-guide/configuring-authentication.html",[5,0.102,39,0.01,57,1.017,88,1.965,111,0.008,112,0.009,113,0.008,226,1.261,286,1.364,865,2.188,894,3.996,934,2.941,987,2.686,2139,5.941,2776,4.687,2778,3.383,3065,5.006,3177,5.941,3573,5.006,3647,5.941,3649,4.194,3686,4.687,4013,4.687,4015,5.006,4253,5.941,4748,5.406,4769,5.006,4833,5.941,4840,5.941,4843,4.639,4845,5.006,5008,8.528,5009,6.752,5010,6.752,5011,6.752,5012,6.752,5013,6.752,5014,6.752,5015,6.752,5016,6.752,5017,6.752,5018,6.752,5019,7.841,5020,6.752,5021,6.752,5022,6.752,5023,6.752,5024,6.752,5025,7.841,5026,6.752,5027,6.752,5028,6.752,5029,6.752,5030,6.752]],["title/additional-documentation/rest-api-documentation.html",[528,0.939,2394,1.956,4343,1.667,4948,2.089,5031,2.479]],["body/additional-documentation/rest-api-documentation.html",[39,0.009,111,0.008,112,0.009,113,0.008,2394,4.944,4177,5.702,4948,5.28,5031,6.266,5032,7.122]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["0",{"_index":582,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{}}}],["0\">there",{"_index":3233,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["0':locale",{"_index":821,"title":{},"body":{"components/AsynchComponent.html":{}}}],["0.0.2",{"_index":3928,"title":{},"body":{"dependencies.html":{}}}],["0.1.0",{"_index":3957,"title":{},"body":{"dependencies.html":{}}}],["0.19.0",{"_index":3872,"title":{},"body":{"dependencies.html":{}}}],["0.2.9",{"_index":3964,"title":{},"body":{"dependencies.html":{}}}],["0.29.0",{"_index":3867,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":3960,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3922,"title":{},"body":{"dependencies.html":{}}}],["0.9.0",{"_index":3968,"title":{},"body":{"dependencies.html":{}}}],["02110",{"_index":1208,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["0\\':locale",{"_index":828,"title":{},"body":{"components/AsynchComponent.html":{}}}],["0px",{"_index":1483,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["1",{"_index":994,"title":{"interfaces/UserForm-1.html":{}},"body":{"injectables/DashboardService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/UtilityService.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["1.0",{"_index":4902,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["1.0.0",{"_index":3926,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3911,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":3878,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3966,"title":{},"body":{"dependencies.html":{}}}],["1.0.4",{"_index":3888,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":3865,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":3941,"title":{},"body":{"dependencies.html":{}}}],["1.2.8",{"_index":3930,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":3919,"title":{},"body":{"dependencies.html":{}}}],["1.3.0.html#map",{"_index":2580,"title":{},"body":{"components/MapComponent.html":{}}}],["1.3.1",{"_index":3908,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":3915,"title":{},"body":{"dependencies.html":{}}}],["1.5.2",{"_index":3948,"title":{},"body":{"dependencies.html":{}}}],["1.8",{"_index":4813,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["10",{"_index":993,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{},"license.html":{}}}],["11",{"_index":4299,"title":{},"body":{"license.html":{}}}],["12",{"_index":1890,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"index.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["13",{"_index":2458,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["1301",{"_index":1209,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["134.074574",{"_index":2408,"title":{},"body":{"components/MapComponent.html":{}}}],["15",{"_index":4488,"title":{},"body":{"license.html":{}}}],["16",{"_index":4489,"title":{},"body":{"license.html":{}}}],["17.0.14",{"_index":3904,"title":{},"body":{"dependencies.html":{}}}],["1991",{"_index":1171,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["1996",{"_index":4304,"title":{},"body":{"license.html":{}}}],["2",{"_index":1169,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"overview.html":{},"additional-documentation/configuration-guide.html":{}}}],["2.0.0",{"_index":3946,"title":{},"body":{"dependencies.html":{}}}],["2.0.3",{"_index":3883,"title":{},"body":{"dependencies.html":{}}}],["2.0.6",{"_index":3920,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":3914,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":3905,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":3912,"title":{},"body":{"dependencies.html":{}}}],["2.6.1",{"_index":3892,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":3870,"title":{},"body":{"dependencies.html":{}}}],["2.9",{"_index":3962,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1252,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["2007",{"_index":4028,"title":{},"body":{"license.html":{}}}],["2017",{"_index":1159,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["22",{"_index":4764,"title":{},"body":{"overview.html":{}}}],["24.673148",{"_index":2407,"title":{},"body":{"components/MapComponent.html":{}}}],["25",{"_index":2455,"title":{},"body":{"components/MapComponent.html":{}}}],["28",{"_index":4641,"title":{},"body":{"license.html":{}}}],["29",{"_index":4027,"title":{},"body":{"license.html":{}}}],["3",{"_index":2378,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["3.0.1",{"_index":3886,"title":{},"body":{"dependencies.html":{}}}],["3.0.6",{"_index":3874,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3944,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":3880,"title":{},"body":{"dependencies.html":{}}}],["3.3.7",{"_index":3876,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2074,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"license.html":{}}}],["34.26516142452615",{"_index":2381,"title":{},"body":{"components/MapComponent.html":{}}}],["4",{"_index":2405,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["4.0.0",{"_index":3916,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":3935,"title":{},"body":{"dependencies.html":{}}}],["4.0.3",{"_index":3907,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":3917,"title":{},"body":{"dependencies.html":{}}}],["4.17.5",{"_index":3909,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":3937,"title":{},"body":{"dependencies.html":{}}}],["4.7.0",{"_index":3895,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":2456,"title":{},"body":{"components/MapComponent.html":{}}}],["5",{"_index":2605,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["5.1.3",{"_index":3903,"title":{},"body":{"dependencies.html":{}}}],["51",{"_index":1201,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["57",{"_index":4763,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":3899,"title":{},"body":{"dependencies.html":{}}}],["6.5.3",{"_index":3938,"title":{},"body":{"dependencies.html":{}}}],["6.x",{"_index":4770,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["60",{"_index":4536,"title":{},"body":{"license.html":{}}}],["61",{"_index":4765,"title":{},"body":{"overview.html":{}}}],["6b",{"_index":4389,"title":{},"body":{"license.html":{}}}],["6d",{"_index":4410,"title":{},"body":{"license.html":{}}}],["7",{"_index":4331,"title":{},"body":{"license.html":{}}}],["7.0.0",{"_index":3890,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":885,"title":{},"body":{"classes/BaseService.html":{}}}],["8.0.1",{"_index":3954,"title":{},"body":{"dependencies.html":{}}}],["8.11.0",{"_index":4020,"title":{},"body":{"index.html":{}}}],["80",{"_index":2075,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["9",{"_index":3592,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9!#$%&'*+\\/=?^_",{"_index":3590,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9]([a",{"_index":3591,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9])?(\\.[a",{"_index":3593,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9])?)*$/i",{"_index":3594,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9]+\\.pdf",{"_index":2703,"title":{},"body":{"components/PDFListComponent.html":{}}}],["9a",{"_index":2701,"title":{},"body":{"components/PDFListComponent.html":{}}}],["_",{"_index":94,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["_.assign(targetprogress",{"_index":808,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.clonedeep(basefieldinst.options",{"_index":1347,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.clonedeep(this.value",{"_index":1713,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.clonedeepwith(basefieldinst[f",{"_index":1356,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.clonedeepwith(basefieldinst[f.field",{"_index":1364,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.concat",{"_index":3737,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.concat(this.workspaceapps",{"_index":3806,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.each(config.field",{"_index":3735,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.each(config.fields",{"_index":3711,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.each(data",{"_index":3714,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.each(itemarray",{"_index":1809,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.each(progressarr",{"_index":777,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.each(this.disabledelements",{"_index":3777,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.each(this.field.fields",{"_index":487,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.each(this.field.formmodel.controls",{"_index":1430,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.each(this.field.value",{"_index":2862,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["_.each(this.fields",{"_index":1335,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.each(typeconfs",{"_index":1585,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["_.each(value",{"_index":2847,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"injectables/UtilityService.html":{}}}],["_.extend({data",{"_index":3760,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.filter(this.plans.items",{"_index":3275,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.filter(this.users",{"_index":2338,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.find(config.mapping",{"_index":3729,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.find(this.activerefiners",{"_index":3079,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.find(this.classes[f.class].comp",{"_index":1975,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.find(this.field.options",{"_index":3844,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["_.find(this.field.progressarr",{"_index":805,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.find(this.field.selectoptions",{"_index":440,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.find(this.getformcontrol()['controls",{"_index":465,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.find(this.refinerconfig",{"_index":3058,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.find(this.users",{"_index":2277,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.find(this.value",{"_index":3827,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.find(this.workspaceapps",{"_index":3820,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.findindex(that2.layers",{"_index":2538,"title":{},"body":{"components/MapComponent.html":{}}}],["_.first(value",{"_index":3757,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.foreach(allattachments",{"_index":2706,"title":{},"body":{"components/PDFListComponent.html":{}}}],["_.foreach(dependentfieldnames",{"_index":2905,"title":{},"body":{"classes/RbValidator.html":{}}}],["_.foreach(facets",{"_index":3108,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(fielddesc",{"_index":1853,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(formcontrol.controls",{"_index":476,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.foreach(params.activerefiners",{"_index":2991,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(querystr.split",{"_index":3088,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(role.users",{"_index":2270,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.foreach(roles",{"_index":2265,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.foreach(this.activerefiners",{"_index":3071,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(this.currentuser.newroles",{"_index":2304,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.foreach(this.field.onchange.control.subfields",{"_index":594,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.foreach(this.fieldnames",{"_index":1702,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(this.fields",{"_index":1398,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.foreach(this.forceclone",{"_index":1354,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.foreach(this.refinerconfig",{"_index":3066,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(this.searchfields",{"_index":1823,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(this.searchfieldstr.split",{"_index":1922,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(this.skipclone",{"_index":1352,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.foreach(this.sourcedata",{"_index":1735,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(this.titlefieldarr",{"_index":1763,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.foreach(this.value",{"_index":3216,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["_.foreach(value",{"_index":591,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.forown(fieldmap",{"_index":2045,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["_.forown(fieldname",{"_index":1837,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.forown(fld",{"_index":1704,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.forown(fldname",{"_index":1793,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.forown(refinervalues",{"_index":3097,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.forown(servicearr",{"_index":2132,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.forown(this.fieldmap._rootcomp",{"_index":1086,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["_.get(d",{"_index":3717,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.get(data",{"_index":1791,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/UtilityService.html":{}}}],["_.includes(cloneopts.copy",{"_index":1371,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.includes(cloneopts.skipclone",{"_index":1370,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.includes(this.currentuser.roles",{"_index":2300,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.includes(this.hiddenusers",{"_index":2272,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.includes(user.roles",{"_index":2339,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.isarray(data",{"_index":3712,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.isarray(fielddesc",{"_index":1850,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isarray(plan.title",{"_index":3277,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.isarray(this.classes[f.class].comp",{"_index":1973,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.isarray(this.field.value",{"_index":458,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isarray(value",{"_index":590,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isarray(valueelem",{"_index":1329,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isarray(versionvalue",{"_index":2689,"title":{},"body":{"components/PDFListComponent.html":{}}}],["_.isempty(_.trim(this.field.searchfiltername",{"_index":3282,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.isempty(control.value",{"_index":2902,"title":{},"body":{"classes/RbValidator.html":{}}}],["_.isempty(data",{"_index":1782,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/UtilityService.html":{}}}],["_.isempty(exactsearchnames",{"_index":2996,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(existinguser",{"_index":2280,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.isempty(facetsearchnames",{"_index":3001,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(focustabid",{"_index":570,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(key",{"_index":2116,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.isempty(name",{"_index":406,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(oid",{"_index":759,"title":{},"body":{"components/AsynchComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(packagetype",{"_index":1004,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(password",{"_index":3600,"title":{},"body":{"interfaces/UserForm.html":{}}}],["_.isempty(plan.title",{"_index":1019,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(plan.title[0",{"_index":1020,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(recordtype",{"_index":1001,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(refiner.activevalue",{"_index":3004,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(refiner.value",{"_index":3106,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(sort",{"_index":1007,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(state",{"_index":1010,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(targetstep",{"_index":2961,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(term",{"_index":1821,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isempty(this.cssclasses",{"_index":2598,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["_.isempty(this.field.name",{"_index":420,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(this.field.relatedrecordid",{"_index":773,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.isempty(this.field.value",{"_index":584,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(this.refinerconfig.value",{"_index":3204,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["_.isempty(this.searchfilter.name",{"_index":2334,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.isempty(tval",{"_index":596,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(val",{"_index":437,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(value",{"_index":2556,"title":{},"body":{"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["_.isfunction(disabledelement.prop",{"_index":1115,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["_.isfunction(newelem.setemptyvalue",{"_index":1376,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isfunction(newinst.postinit",{"_index":1366,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isfunction(this.field.gettitle",{"_index":1914,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isnull(ctrlindex",{"_index":413,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isnull(data",{"_index":3734,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.isnull(fc.controls",{"_index":415,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isnull(oid",{"_index":757,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.isnull(this.field.value",{"_index":1884,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isstring(data",{"_index":1783,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isstring(f",{"_index":1355,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isstring(fielddesc",{"_index":1846,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isstring(fieldname",{"_index":1834,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isstring(fldname",{"_index":1789,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isstring(this.titlefielddelim",{"_index":1762,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isundefined(ctrlindex",{"_index":414,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isundefined(data",{"_index":1781,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/UtilityService.html":{}}}],["_.isundefined(fc.controls",{"_index":416,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isundefined(fieldpath",{"_index":3727,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.isundefined(inst.compclass",{"_index":1981,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.isundefined(key",{"_index":2117,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.isundefined(oid",{"_index":758,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.isundefined(options['cansort",{"_index":1444,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isundefined(options['delegateerrorhandling",{"_index":1303,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isundefined(options['restricttoselection",{"_index":1688,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isundefined(options['showversioncolumn",{"_index":2677,"title":{},"body":{"components/PDFListComponent.html":{}}}],["_.isundefined(options['unflattenflag",{"_index":1697,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isundefined(options['useversionlabelforfilename",{"_index":2680,"title":{},"body":{"components/PDFListComponent.html":{}}}],["_.isundefined(packagetype",{"_index":1005,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(plan.title",{"_index":1018,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(recordtype",{"_index":1002,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(sort",{"_index":1008,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(state",{"_index":1011,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(this.field.relatedrecordid",{"_index":772,"title":{},"body":{"components/AsynchComponent.html":{}}}],["_.isundefined(this.field.value",{"_index":1885,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.isundefined(this.value",{"_index":2609,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["_.isundefined(value",{"_index":3103,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.join(_.get(data",{"_index":3758,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.join(this.currentuser.roles",{"_index":2316,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.join(user.roles",{"_index":2287,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.keys(subtracker.loaded).length",{"_index":2129,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.map(data",{"_index":1830,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.map(fields",{"_index":1988,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.map(fieldsarr",{"_index":1948,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.map(options['defaultselection",{"_index":3796,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.map(servicearr",{"_index":2122,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.map(this.options",{"_index":3825,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.map(this.roles",{"_index":2295,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.map(this.searchfilter.roles",{"_index":2327,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.map(this.users",{"_index":2285,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.map(this.value",{"_index":1325,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.merge(this.classes,componentclasses",{"_index":2041,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["_.merge(this.drawoptions",{"_index":2489,"title":{},"body":{"components/MapComponent.html":{}}}],["_.merge(this.leafletoptions",{"_index":2485,"title":{},"body":{"components/MapComponent.html":{}}}],["_.remove(that2.layers",{"_index":2548,"title":{},"body":{"components/MapComponent.html":{}}}],["_.remove(this.activerefiners",{"_index":3053,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.remove(this.fields",{"_index":1383,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.remove(this.value",{"_index":2856,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["_.size(params.activerefiners",{"_index":2986,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.startswith(qobj[0",{"_index":3092,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.template(config.template",{"_index":3763,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.template(disabledexpression",{"_index":1091,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["_.tolower(term",{"_index":1822,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.tolower(title).includes(_.tolower(this.searchfiltername",{"_index":3279,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.tolower(user.name).indexof(_.tolower(this.searchfilter.name",{"_index":2341,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.tonumber(versionvalue",{"_index":2692,"title":{},"body":{"components/PDFListComponent.html":{}}}],["_.tostring(_.head(ele",{"_index":1849,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.trim(luceneescapequery.escape(term",{"_index":1819,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["_.trim(this.searchfilter.name",{"_index":2335,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["_.unset(val",{"_index":2849,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["__config",{"_index":14,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["_blank",{"_index":1599,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["a.value",{"_index":455,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["aaf",{"_index":5008,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["ability",{"_index":4458,"title":{},"body":{"license.html":{}}}],["above",{"_index":2383,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["absence",{"_index":4332,"title":{},"body":{"license.html":{}}}],["absent",{"_index":3522,"title":{},"body":{"injectables/TranslationService.html":{}}}],["absolute",{"_index":4711,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":4740,"title":{},"body":{"license.html":{}}}],["abstractcontrol",{"_index":2889,"title":{},"body":{"classes/RbValidator.html":{}}}],["abuse",{"_index":4107,"title":{},"body":{"license.html":{}}}],["accept",{"_index":4546,"title":{},"body":{"license.html":{}}}],["acceptance",{"_index":4545,"title":{},"body":{"license.html":{}}}],["access",{"_index":3221,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["accessdeniedobjects",{"_index":2655,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["accessed",{"_index":4987,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["accessible",{"_index":4610,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":833,"title":{},"body":{"classes/BaseService.html":{},"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["accompanied",{"_index":4371,"title":{},"body":{"license.html":{}}}],["accompanies",{"_index":4715,"title":{},"body":{"license.html":{}}}],["accord",{"_index":4330,"title":{},"body":{"license.html":{}}}],["according",{"_index":4706,"title":{},"body":{"license.html":{}}}],["achieve",{"_index":4721,"title":{},"body":{"license.html":{}}}],["acknowledges",{"_index":4266,"title":{},"body":{"license.html":{}}}],["acquired",{"_index":4590,"title":{},"body":{"license.html":{}}}],["action",{"_index":124,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["actionbutton",{"_index":196,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["actionbuttoncomponent",{"_index":115,"title":{"components/ActionButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["actions",{"_index":4553,"title":{},"body":{"license.html":{}}}],["activate",{"_index":3063,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["active",{"_index":3065,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["activerefiner.name",{"_index":3081,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activerefiner:recordsearchrefiner",{"_index":3080,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activerefiners",{"_index":3045,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activevalue",{"_index":3032,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activities",{"_index":4179,"title":{},"body":{"license.html":{}}}],["activity",{"_index":4637,"title":{},"body":{"license.html":{}}}],["actual",{"_index":3697,"title":{},"body":{"injectables/UtilityService.html":{},"license.html":{}}}],["actual_component",{"_index":370,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["actually",{"_index":4433,"title":{},"body":{"license.html":{}}}],["adapt",{"_index":4156,"title":{},"body":{"license.html":{}}}],["add",{"_index":2942,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["addactiverefiner",{"_index":3154,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["addactiverefiner(refiner",{"_index":3077,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["addbuttonclass",{"_index":1272,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addbuttontext",{"_index":1266,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addbuttontextclass",{"_index":1270,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addcomponentclasses",{"_index":2016,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["addcomponentclasses(componentclasses",{"_index":2024,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["added",{"_index":4329,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["addelem",{"_index":3288,"title":{},"body":{"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addelem(event",{"_index":1425,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["addelem(val:any",{"_index":1373,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["additional",{"_index":4343,"title":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}},"body":{"license.html":{}}}],["addlocaluser",{"_index":3615,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["addlocaluser(username",{"_index":3626,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["addlocation",{"_index":2841,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["addrendercompleteelement(fieldsmeta",{"_index":2925,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["address",{"_index":4665,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["addressed",{"_index":4153,"title":{},"body":{"license.html":{}}}],["admin",{"_index":2239,"title":{},"body":{"components/ManageRolesComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["adopted",{"_index":4302,"title":{},"body":{"license.html":{}}}],["advantage",{"_index":4823,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["adversely",{"_index":4465,"title":{},"body":{"license.html":{}}}],["advised",{"_index":4702,"title":{},"body":{"license.html":{}}}],["affects",{"_index":4466,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4657,"title":{},"body":{"license.html":{}}}],["affirmed",{"_index":4572,"title":{},"body":{"license.html":{}}}],["affirms",{"_index":4260,"title":{},"body":{"license.html":{}}}],["afterviewchecked",{"_index":385,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["afterviewinit",{"_index":384,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["afterwards",{"_index":3460,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["again",{"_index":1104,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["against",{"_index":4319,"title":{},"body":{"license.html":{}}}],["aggregate",{"_index":4358,"title":{},"body":{"license.html":{}}}],["agree",{"_index":4652,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":4690,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":4601,"title":{},"body":{"license.html":{}}}],["aim",{"_index":4104,"title":{},"body":{"license.html":{}}}],["allattachmentspromise",{"_index":2697,"title":{},"body":{"components/PDFListComponent.html":{}}}],["allattachmentspromise.then(allattachments",{"_index":2704,"title":{},"body":{"components/PDFListComponent.html":{}}}],["alleging",{"_index":4580,"title":{},"body":{"license.html":{}}}],["allow",{"_index":4128,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["allowed",{"_index":4036,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["allows",{"_index":3521,"title":{},"body":{"injectables/TranslationService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["along",{"_index":1198,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["already",{"_index":1063,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["alternative",{"_index":4385,"title":{},"body":{"license.html":{}}}],["although",{"_index":4100,"title":{},"body":{"license.html":{}}}],["alwaysactive",{"_index":3030,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["anchor",{"_index":246,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["anchororbutton",{"_index":207,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["anchororbuttoncomponent",{"_index":245,"title":{"components/AnchorOrButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["ancillary",{"_index":4547,"title":{},"body":{"license.html":{}}}],["and/or",{"_index":1176,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["andrew",{"_index":2426,"title":{},"body":{"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"injectables/UtilityService.html":{}}}],["ands",{"_index":248,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["andshow",{"_index":4745,"title":{},"body":{"license.html":{}}}],["andsservice",{"_index":1,"title":{"injectables/ANDSService.html":{}},"body":{"injectables/ANDSService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["andsvocab.component",{"_index":3375,"title":{},"body":{"modules/SharedModule.html":{}}}],["andsvocabcomponent",{"_index":247,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["angular",{"_index":3393,"title":{},"body":{"modules/SharedModule.html":{},"components/TreeNodeCheckboxComponent.html":{}}}],["angular/.../forms.ts",{"_index":3972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular/common",{"_index":671,"title":{},"body":{"components/AsynchComponent.html":{},"components/ExportFormComponent.html":{}}}],["angular/core",{"_index":81,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["angular/dashboard/app/dashboard.module.ts",{"_index":935,"title":{},"body":{"modules/DashboardModule.html":{}}}],["angular/dashboard/app/sort.component.ts",{"_index":3419,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:23",{"_index":3425,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:24",{"_index":3427,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:25",{"_index":3426,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:26",{"_index":3428,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:27",{"_index":3429,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:31",{"_index":3430,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dmp/app/dmp.module.ts",{"_index":1156,"title":{},"body":{"modules/DmpModule.html":{}}}],["angular/e2e/app.po.ts",{"_index":629,"title":{},"body":{"classes/AngularPage.html":{}}}],["angular/e2e/app.po.ts:4",{"_index":633,"title":{},"body":{"classes/AngularPage.html":{}}}],["angular/e2e/app.po.ts:8",{"_index":632,"title":{},"body":{"classes/AngularPage.html":{}}}],["angular/export/app/export",{"_index":1502,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["angular/export/app/export.module.ts",{"_index":1610,"title":{},"body":{"modules/ExportModule.html":{}}}],["angular/forms",{"_index":399,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{}}}],["angular/http",{"_index":82,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"modules/DmpModule.html":{},"injectables/EmailNotificationService.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"modules/WorkspaceListModule.html":{},"injectables/WorkspaceTypeService.html":{}}}],["angular/localauth/app/local_auth.component.ts",{"_index":2137,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:42",{"_index":2155,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:43",{"_index":2156,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:44",{"_index":2150,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:65",{"_index":2154,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:85",{"_index":2152,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.module.ts",{"_index":2196,"title":{},"body":{"modules/LocalAuthModule.html":{}}}],["angular/manageroles/app/manage_roles.component.ts",{"_index":2210,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:122",{"_index":2235,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:127",{"_index":2229,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:146",{"_index":2231,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:47",{"_index":2250,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:48",{"_index":2238,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:49",{"_index":2249,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:50",{"_index":2241,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:51",{"_index":2240,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:52",{"_index":2237,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:53",{"_index":2242,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:54",{"_index":2243,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:55",{"_index":2225,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:89",{"_index":2227,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.component.ts:97",{"_index":2233,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["angular/manageroles/app/manage_roles.module.ts",{"_index":2354,"title":{},"body":{"modules/ManageRolesModule.html":{}}}],["angular/manageusers/app/forms.ts",{"_index":3569,"title":{},"body":{"interfaces/UserForm.html":{},"miscellaneous/functions.html":{}}}],["angular/manageusers/app/manage_users.module.ts",{"_index":2361,"title":{},"body":{"modules/ManageUsersModule.html":{}}}],["angular/platform",{"_index":939,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"components/RelatedObjectDataComponent.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["angular/record_search/app/record",{"_index":3185,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["angular/record_search/app/record_search.module.ts",{"_index":3153,"title":{},"body":{"modules/RecordSearchModule.html":{}}}],["angular/report/app/multivaluefieldpipe.ts",{"_index":2628,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["angular/report/app/multivaluefieldpipe.ts:14",{"_index":2633,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["angular/report/app/report.module.ts",{"_index":3317,"title":{},"body":{"modules/ReportModule.html":{}}}],["angular/shared/ands",{"_index":6,"title":{},"body":{"injectables/ANDSService.html":{}}}],["angular/shared/base",{"_index":829,"title":{},"body":{"classes/BaseService.html":{}}}],["angular/shared/config",{"_index":891,"title":{},"body":{"injectables/ConfigService.html":{}}}],["angular/shared/dashboard",{"_index":951,"title":{},"body":{"injectables/DashboardService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["angular/shared/email",{"_index":1222,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["angular/shared/form/action",{"_index":119,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["angular/shared/form/dmp",{"_index":1033,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["angular/shared/form/field",{"_index":371,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["angular/shared/form/record",{"_index":3112,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["angular/shared/form/records.service.ts",{"_index":2913,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:231",{"_index":2916,"title":{},"body":{"classes/RecordActionResult.html":{}}}],["angular/shared/form/records.service.ts:232",{"_index":2915,"title":{},"body":{"classes/RecordActionResult.html":{}}}],["angular/shared/form/records.service.ts:233",{"_index":2914,"title":{},"body":{"classes/RecordActionResult.html":{}}}],["angular/shared/form/records.service.ts:237",{"_index":3179,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:238",{"_index":3180,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:239",{"_index":3181,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:240",{"_index":3183,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:241",{"_index":3178,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:242",{"_index":3182,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:243",{"_index":3176,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:254",{"_index":3184,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:264",{"_index":3163,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:265",{"_index":3162,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:266",{"_index":3161,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:267",{"_index":3160,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:275",{"_index":3165,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:284",{"_index":3168,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:290",{"_index":3174,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:300",{"_index":3167,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:312",{"_index":3169,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:316",{"_index":3164,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:327",{"_index":3172,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:347",{"_index":3166,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:354",{"_index":3170,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:364",{"_index":3173,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/tree",{"_index":3548,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["angular/shared/form/validators.ts",{"_index":2883,"title":{},"body":{"classes/RbValidator.html":{}}}],["angular/shared/form/validators.ts:34",{"_index":2890,"title":{},"body":{"classes/RbValidator.html":{}}}],["angular/shared/form/validators.ts:43",{"_index":2895,"title":{},"body":{"classes/RbValidator.html":{}}}],["angular/shared/form/workspace",{"_index":3764,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["angular/shared/loadable.component.ts",{"_index":2093,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:30",{"_index":2096,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:31",{"_index":2098,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:32",{"_index":2097,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:33",{"_index":2095,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:41",{"_index":2102,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:48",{"_index":2105,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:53",{"_index":2099,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:59",{"_index":2101,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:63",{"_index":2103,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:68",{"_index":2104,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:76",{"_index":2100,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:89",{"_index":2106,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/report",{"_index":3306,"title":{},"body":{"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{}}}],["angular/shared/roles",{"_index":3336,"title":{},"body":{"injectables/RolesService.html":{}}}],["angular/shared/shared.module.ts",{"_index":3360,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/shared/stringtemplatepipe.ts",{"_index":3442,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["angular/shared/stringtemplatepipe.ts:14",{"_index":3445,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["angular/shared/stringtemplatepipe.ts:22",{"_index":3467,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["angular/shared/translation",{"_index":3494,"title":{},"body":{"injectables/TranslationService.html":{}}}],["angular/shared/user",{"_index":2198,"title":{},"body":{"classes/LoginResult.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["angular/shared/user.service",{"_index":3613,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["angular/shared/util",{"_index":3663,"title":{},"body":{"injectables/UtilityService.html":{}}}],["angular/shared/workspace",{"_index":3856,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["angular/transfer_owner/app/transfer_owner.module.ts",{"_index":3492,"title":{},"body":{"modules/TransferOwnerModule.html":{}}}],["angular/userprofile/app/forms.ts",{"_index":3605,"title":{},"body":{"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["angular/userprofile/app/user_profile.module.ts",{"_index":3611,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["angular/workspace_list/app/workspace_list.module.ts",{"_index":3838,"title":{},"body":{"modules/WorkspaceListModule.html":{}}}],["angular2",{"_index":3363,"title":{},"body":{"modules/SharedModule.html":{},"injectables/TranslationService.html":{}}}],["angularpage",{"_index":627,"title":{"classes/AngularPage.html":{}},"body":{"classes/AngularPage.html":{}}}],["anti",{"_index":4289,"title":{},"body":{"license.html":{}}}],["anyone",{"_index":4340,"title":{},"body":{"license.html":{}}}],["anything",{"_index":3461,"title":{},"body":{"pipes/StringTemplatePipe.html":{},"license.html":{}}}],["aotmode",{"_index":2571,"title":{},"body":{"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["apache",{"_index":4773,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["api",{"_index":4948,"title":{"additional-documentation/rest-api-documentation.html":{}},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["api//method",{"_index":5001,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api//url",{"_index":5003,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api/send",{"_index":4952,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["api/v1/messaging/emailnotification",{"_index":4968,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["api/v1/object/$packagetype",{"_index":5004,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api/v1/recordmetadata/$oid",{"_index":5006,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api/v1/search",{"_index":5005,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["apis",{"_index":4984,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["app",{"_index":1045,"title":{},"body":{"components/DmpFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/WorkspaceFieldComponent.html":{}}}],["app.js",{"_index":4794,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["appear",{"_index":4930,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["append",{"_index":3804,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["appendlocation(newloc:any",{"_index":2844,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["applicable",{"_index":4169,"title":{},"body":{"license.html":{}}}],["application",{"_index":3518,"title":{},"body":{"injectables/TranslationService.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["application/json;charset=utf",{"_index":884,"title":{},"body":{"classes/BaseService.html":{}}}],["applicationref",{"_index":1046,"title":{},"body":{"components/DmpFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/WorkspaceFieldComponent.html":{}}}],["applications",{"_index":4755,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["applied",{"_index":4133,"title":{},"body":{"license.html":{}}}],["applies",{"_index":4049,"title":{},"body":{"license.html":{}}}],["applink",{"_index":3784,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["apply",{"_index":2830,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["applyeditnotesbuttontext",{"_index":2817,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["applyfilter",{"_index":3188,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["applyfilter(event",{"_index":3195,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["applyfilter(event:any",{"_index":3199,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["applying",{"_index":3999,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":4191,"title":{},"body":{"license.html":{}}}],["appropriately",{"_index":4324,"title":{},"body":{"license.html":{}}}],["approximates",{"_index":4710,"title":{},"body":{"license.html":{}}}],["apps",{"_index":4791,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["ardc",{"_index":4010,"title":{},"body":{"index.html":{}}}],["area",{"_index":2590,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["area'},{'name",{"_index":298,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["args",{"_index":2632,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{},"additional-documentation/installation-guide.html":{}}}],["args?:any[]):string",{"_index":2637,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["arialabel",{"_index":3552,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["arise",{"_index":4115,"title":{},"body":{"license.html":{}}}],["arising",{"_index":4694,"title":{},"body":{"license.html":{}}}],["around",{"_index":4830,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["arrange",{"_index":4611,"title":{},"body":{"license.html":{}}}],["arrangement",{"_index":4624,"title":{},"body":{"license.html":{}}}],["array",{"_index":1772,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"injectables/UtilityService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["arrayproperty",{"_index":1619,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["arrays",{"_index":1746,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/UtilityService.html":{}}}],["article",{"_index":4298,"title":{},"body":{"license.html":{}}}],["asc",{"_index":3435,"title":{},"body":{"components/SortComponent.html":{}}}],["asking",{"_index":4069,"title":{},"body":{"license.html":{}}}],["assert",{"_index":4084,"title":{},"body":{"license.html":{}}}],["assests/locales",{"_index":4938,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["assets",{"_index":3983,"title":{},"body":{"index.html":{},"license.html":{}}}],["assists",{"_index":3980,"title":{},"body":{"index.html":{}}}],["associated",{"_index":4241,"title":{},"body":{"license.html":{}}}],["assume",{"_index":4684,"title":{},"body":{"license.html":{}}}],["assumes",{"_index":2506,"title":{},"body":{"components/MapComponent.html":{}}}],["assumption",{"_index":4714,"title":{},"body":{"license.html":{}}}],["assumptions",{"_index":4507,"title":{},"body":{"license.html":{}}}],["assures",{"_index":4136,"title":{},"body":{"license.html":{}}}],["asymmetrik/ngx",{"_index":3384,"title":{},"body":{"modules/SharedModule.html":{}}}],["async",{"_index":681,"title":{},"body":{"components/AsynchComponent.html":{},"dependencies.html":{}}}],["asynch",{"_index":251,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["asynch.component",{"_index":3394,"title":{},"body":{"modules/SharedModule.html":{}}}],["asynch.component.html",{"_index":643,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts",{"_index":639,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:103",{"_index":656,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:122",{"_index":664,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:159",{"_index":658,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:166",{"_index":661,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:172",{"_index":663,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:178",{"_index":666,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:185",{"_index":655,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:95",{"_index":668,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:96",{"_index":669,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynch.component.ts:97",{"_index":653,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynchcomponent",{"_index":250,"title":{"components/AsynchComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["asynchfield",{"_index":667,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asynchronous",{"_index":640,"title":{},"body":{"components/AsynchComponent.html":{}}}],["asyncloaddata",{"_index":3137,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["attach",{"_index":4722,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["attachment",{"_index":2648,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{}}}],["attachment':\"attachment",{"_index":2812,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["attachment.dateupdated",{"_index":2709,"title":{},"body":{"components/PDFListComponent.html":{}}}],["attachment:any",{"_index":2707,"title":{},"body":{"components/PDFListComponent.html":{}}}],["attempt",{"_index":4521,"title":{},"body":{"license.html":{}}}],["attr.aria",{"_index":1457,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["attributed",{"_index":4095,"title":{},"body":{"license.html":{}}}],["attributions",{"_index":4491,"title":{},"body":{"license.html":{}}}],["au",{"_index":3533,"title":{},"body":{"injectables/TranslationService.html":{}}}],["audience",{"_index":5020,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["australia",{"_index":2403,"title":{},"body":{"components/MapComponent.html":{},"index.html":{}}}],["australian",{"_index":3988,"title":{},"body":{"index.html":{}}}],["auth",{"_index":2139,"title":{},"body":{"components/LocalAuthComponent.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["auth'},{'name",{"_index":287,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["auth.js",{"_index":4832,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["authentication",{"_index":2138,"title":{"additional-documentation/configuration-guide/configuring-authentication.html":{}},"body":{"components/LocalAuthComponent.html":{},"additional-documentation/configuration-guide.html":{}}}],["author",{"_index":187,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["authorisation",{"_index":4833,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["authorization",{"_index":4443,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["authorized",{"_index":4482,"title":{},"body":{"license.html":{}}}],["authorizes",{"_index":4585,"title":{},"body":{"license.html":{}}}],["authorizing",{"_index":4628,"title":{},"body":{"license.html":{}}}],["authors",{"_index":4052,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":4557,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":4253,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["autoreload",{"_index":3943,"title":{},"body":{"dependencies.html":{}}}],["available",{"_index":4177,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["avoid",{"_index":4131,"title":{},"body":{"license.html":{}}}],["away",{"_index":4043,"title":{},"body":{"license.html":{}}}],["awesome",{"_index":3894,"title":{},"body":{"dependencies.html":{}}}],["axios",{"_index":3871,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":454,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["b.value",{"_index":456,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["back",{"_index":4919,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["backend",{"_index":3537,"title":{},"body":{"injectables/TranslationService.html":{},"dependencies.html":{}}}],["background",{"_index":682,"title":{},"body":{"components/AsynchComponent.html":{}}}],["banihit",{"_index":189,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["base",{"_index":206,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseclass",{"_index":1423,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["based",{"_index":606,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"license.html":{}}}],["basefield",{"_index":1321,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["basefieldinst.constructor(newopts",{"_index":1350,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["baselayers",{"_index":2473,"title":{},"body":{"components/MapComponent.html":{}}}],["baseservice",{"_index":9,"title":{"classes/BaseService.html":{}},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:34",{"_index":76,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:35",{"_index":74,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:36",{"_index":75,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:37",{"_index":72,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:38",{"_index":73,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:39",{"_index":78,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:40",{"_index":71,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:41",{"_index":77,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:64",{"_index":69,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:70",{"_index":62,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:74",{"_index":51,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:80",{"_index":61,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:84",{"_index":56,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:93",{"_index":64,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseservice:98",{"_index":67,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseurl",{"_index":15,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseurl/mint",{"_index":4996,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseurl/redbox",{"_index":4992,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseurl:string",{"_index":860,"title":{},"body":{"classes/BaseService.html":{}}}],["basic",{"_index":4254,"title":{},"body":{"license.html":{}}}],["basicsearch",{"_index":976,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["bcrypt",{"_index":3873,"title":{},"body":{"dependencies.html":{}}}],["bearer",{"_index":3923,"title":{},"body":{"dependencies.html":{}}}],["becomes",{"_index":1102,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["before",{"_index":1064,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["beginning",{"_index":4883,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["behalf",{"_index":4278,"title":{},"body":{"license.html":{}}}],["behaviour",{"_index":3523,"title":{},"body":{"injectables/TranslationService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["being",{"_index":2400,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["believe",{"_index":4620,"title":{},"body":{"license.html":{}}}],["below",{"_index":4285,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["benefit",{"_index":4614,"title":{},"body":{"license.html":{}}}],["best",{"_index":4720,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["beta.19",{"_index":3900,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":4250,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":4360,"title":{},"body":{"license.html":{}}}],["blank",{"_index":3463,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["block",{"_index":512,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["block'},{'name",{"_index":346,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["blocks",{"_index":510,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["body",{"_index":877,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"license.html":{}}}],["body[parentfield",{"_index":879,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["bonequi",{"_index":3683,"title":{},"body":{"injectables/UtilityService.html":{}}}],["boolean",{"_index":158,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Role.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"classes/User.html":{},"injectables/UtilityService.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["boolean=true",{"_index":2113,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["bootstrap",{"_index":924,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"dependencies.html":{},"overview.html":{}}}],["boston",{"_index":1206,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["both",{"_index":4091,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["box",{"_index":4748,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["boxes",{"_index":4881,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["br",{"_index":3535,"title":{},"body":{"injectables/TranslationService.html":{}}}],["brand",{"_index":3647,"title":{},"body":{"injectables/UserSimpleService.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["branding/@portal/dashboard",{"_index":523,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["branding:this.config.branding",{"_index":3653,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["brandingandportalurl",{"_index":16,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["brandingandportalurl:string",{"_index":861,"title":{},"body":{"classes/BaseService.html":{}}}],["brazzatti",{"_index":2427,"title":{},"body":{"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"injectables/UtilityService.html":{}}}],["break",{"_index":506,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["breaks",{"_index":2575,"title":{},"body":{"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["brief",{"_index":4727,"title":{},"body":{"license.html":{}}}],["browse",{"_index":4761,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":634,"title":{},"body":{"classes/AngularPage.html":{},"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"components/RelatedObjectDataComponent.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"modules.html":{}}}],["browser.get",{"_index":636,"title":{},"body":{"classes/AngularPage.html":{}}}],["browserlanguagedetector",{"_index":3516,"title":{},"body":{"injectables/TranslationService.html":{}}}],["browsermodule",{"_index":938,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["btn",{"_index":1248,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["build",{"_index":1840,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["built",{"_index":1852,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"additional-documentation/configuration-guide.html":{}}}],["business",{"_index":4634,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["button",{"_index":125,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["button'},{'name",{"_index":244,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["button.component",{"_index":3378,"title":{},"body":{"modules/SharedModule.html":{}}}],["button.component.ts",{"_index":120,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:45",{"_index":197,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:47",{"_index":163,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:59",{"_index":165,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["buttonbarcontainer",{"_index":505,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["buttonbarcontainer'},{'name",{"_index":254,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["buttonbarcontainercomponent",{"_index":253,"title":{"components/ButtonBarContainerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["buttonelem",{"_index":1108,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["buttons",{"_index":229,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["c",{"_index":1158,"title":{},"body":{"modules/DmpModule.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["c.clname",{"_index":1978,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["c.haserror('required",{"_index":1431,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["c:any",{"_index":1976,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["cache",{"_index":3448,"title":{},"body":{"pipes/StringTemplatePipe.html":{},"dependencies.html":{}}}],["cache[template",{"_index":3451,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["calcyte",{"_index":3877,"title":{},"body":{"dependencies.html":{}}}],["calendar",{"_index":1579,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["call",{"_index":1897,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["callback",{"_index":5028,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["called",{"_index":4161,"title":{},"body":{"license.html":{}}}],["calls",{"_index":513,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["can't",{"_index":1903,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["cancel",{"_index":256,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["cancelbutton",{"_index":392,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["cancelbuttoncomponent",{"_index":255,"title":{"components/CancelButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["canceleditnotesbuttontext",{"_index":2816,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["canremove",{"_index":1238,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["cansort",{"_index":1442,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["capture",{"_index":4848,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["carry",{"_index":4335,"title":{},"body":{"license.html":{}}}],["case",{"_index":507,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["cases",{"_index":4428,"title":{},"body":{"license.html":{}}}],["catch",{"_index":2522,"title":{},"body":{"components/MapComponent.html":{}}}],["catch(error",{"_index":3810,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["cause",{"_index":4364,"title":{},"body":{"license.html":{}}}],["cease",{"_index":4525,"title":{},"body":{"license.html":{}}}],["center",{"_index":2379,"title":{},"body":{"components/MapComponent.html":{}}}],["centred",{"_index":2402,"title":{},"body":{"components/MapComponent.html":{}}}],["certain",{"_index":4071,"title":{},"body":{"license.html":{}}}],["cessation",{"_index":4538,"title":{},"body":{"license.html":{}}}],["change",{"_index":587,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["changed",{"_index":2397,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["changedetectorref",{"_index":386,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["changeref",{"_index":484,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["changes",{"_index":4801,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["changing",{"_index":4035,"title":{},"body":{"license.html":{}}}],["character",{"_index":2119,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["characterized",{"_index":4455,"title":{},"body":{"license.html":{}}}],["charge",{"_index":4057,"title":{},"body":{"license.html":{}}}],["check",{"_index":1961,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["checkbox",{"_index":460,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["checkbox'},{'name",{"_index":355,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["checkbox.component",{"_index":3396,"title":{},"body":{"modules/SharedModule.html":{}}}],["checkbox.component.ts",{"_index":3549,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["checkbox.component.ts:21",{"_index":3555,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["checkbox.component.ts:22",{"_index":3553,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["checked",{"_index":2798,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["checked:false",{"_index":2269,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["checked:true",{"_index":2248,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["checkifhasloaded",{"_index":1524,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["checking",{"_index":3718,"title":{},"body":{"injectables/UtilityService.html":{}}}],["checkou",{"_index":4780,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["chevron",{"_index":1297,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["choice",{"_index":4781,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["chokidar",{"_index":3879,"title":{},"body":{"dependencies.html":{}}}],["choose",{"_index":4671,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":4674,"title":{},"body":{"license.html":{}}}],["circle",{"_index":1251,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["circlemarker",{"_index":2464,"title":{},"body":{"components/MapComponent.html":{}}}],["circumstances",{"_index":4283,"title":{},"body":{"license.html":{}}}],["circumvention",{"_index":4290,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4713,"title":{},"body":{"license.html":{}}}],["ckan",{"_index":131,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["claim",{"_index":4577,"title":{},"body":{"license.html":{}}}],["claims",{"_index":4587,"title":{},"body":{"license.html":{}}}],["class",{"_index":97,"title":{"classes/AngularPage.html":{},"classes/BaseService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/LoadableComponent.html":{},"classes/LoginResult.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"classes/User.html":{}},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["classes",{"_index":628,"title":{},"body":{"classes/AngularPage.html":{},"classes/BaseService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"classes/LoginResult.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"classes/User.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["clear",{"_index":3051,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["clearly",{"_index":4089,"title":{},"body":{"license.html":{}}}],["clearpendingatt(value",{"_index":2846,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["click)=\"movedown($event",{"_index":1460,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["click)=\"moveup($event",{"_index":1452,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["click)=\"removeelem($event",{"_index":1463,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["client",{"_index":830,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["clname",{"_index":448,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["clone",{"_index":4784,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["close",{"_index":520,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["closely",{"_index":4709,"title":{},"body":{"license.html":{}}}],["closeonsave",{"_index":521,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["cluster_dashboardmodule",{"_index":927,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_bootstrap",{"_index":930,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declarations",{"_index":928,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_imports",{"_index":929,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dmpmodule",{"_index":1147,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_bootstrap",{"_index":1151,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_declarations",{"_index":1148,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_dmpformcomponent_providers",{"_index":1149,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_imports",{"_index":1150,"title":{},"body":{"modules/DmpModule.html":{}}}],["cluster_exportmodule",{"_index":1605,"title":{},"body":{"modules/ExportModule.html":{},"overview.html":{}}}],["cluster_exportmodule_bootstrap",{"_index":1609,"title":{},"body":{"modules/ExportModule.html":{},"overview.html":{}}}],["cluster_exportmodule_declarations",{"_index":1606,"title":{},"body":{"modules/ExportModule.html":{},"overview.html":{}}}],["cluster_exportmodule_exportformcomponent_providers",{"_index":1607,"title":{},"body":{"modules/ExportModule.html":{}}}],["cluster_exportmodule_imports",{"_index":1608,"title":{},"body":{"modules/ExportModule.html":{}}}],["cluster_localauthmodule",{"_index":2192,"title":{},"body":{"modules/LocalAuthModule.html":{},"overview.html":{}}}],["cluster_localauthmodule_bootstrap",{"_index":2195,"title":{},"body":{"modules/LocalAuthModule.html":{},"overview.html":{}}}],["cluster_localauthmodule_declarations",{"_index":2193,"title":{},"body":{"modules/LocalAuthModule.html":{},"overview.html":{}}}],["cluster_localauthmodule_imports",{"_index":2194,"title":{},"body":{"modules/LocalAuthModule.html":{}}}],["cluster_managerolesmodule",{"_index":2350,"title":{},"body":{"modules/ManageRolesModule.html":{},"overview.html":{}}}],["cluster_managerolesmodule_bootstrap",{"_index":2353,"title":{},"body":{"modules/ManageRolesModule.html":{},"overview.html":{}}}],["cluster_managerolesmodule_declarations",{"_index":2351,"title":{},"body":{"modules/ManageRolesModule.html":{},"overview.html":{}}}],["cluster_managerolesmodule_imports",{"_index":2352,"title":{},"body":{"modules/ManageRolesModule.html":{}}}],["cluster_manageusersmodule",{"_index":2357,"title":{},"body":{"modules/ManageUsersModule.html":{},"overview.html":{}}}],["cluster_manageusersmodule_bootstrap",{"_index":2360,"title":{},"body":{"modules/ManageUsersModule.html":{},"overview.html":{}}}],["cluster_manageusersmodule_declarations",{"_index":2358,"title":{},"body":{"modules/ManageUsersModule.html":{},"overview.html":{}}}],["cluster_manageusersmodule_imports",{"_index":2359,"title":{},"body":{"modules/ManageUsersModule.html":{}}}],["cluster_recordsearchmodule",{"_index":3148,"title":{},"body":{"modules/RecordSearchModule.html":{},"overview.html":{}}}],["cluster_recordsearchmodule_bootstrap",{"_index":3152,"title":{},"body":{"modules/RecordSearchModule.html":{},"overview.html":{}}}],["cluster_recordsearchmodule_declarations",{"_index":3149,"title":{},"body":{"modules/RecordSearchModule.html":{},"overview.html":{}}}],["cluster_recordsearchmodule_imports",{"_index":3151,"title":{},"body":{"modules/RecordSearchModule.html":{}}}],["cluster_recordsearchmodule_recordsearchcomponent_providers",{"_index":3150,"title":{},"body":{"modules/RecordSearchModule.html":{}}}],["cluster_reportmodule",{"_index":3311,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_reportmodule_bootstrap",{"_index":3314,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_reportmodule_declarations",{"_index":3312,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_reportmodule_imports",{"_index":3313,"title":{},"body":{"modules/ReportModule.html":{}}}],["cluster_reportmodule_providers",{"_index":3315,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":3354,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":3355,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":3356,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":3357,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_transferownermodule",{"_index":3488,"title":{},"body":{"modules/TransferOwnerModule.html":{},"overview.html":{}}}],["cluster_transferownermodule_bootstrap",{"_index":3491,"title":{},"body":{"modules/TransferOwnerModule.html":{},"overview.html":{}}}],["cluster_transferownermodule_declarations",{"_index":3489,"title":{},"body":{"modules/TransferOwnerModule.html":{},"overview.html":{}}}],["cluster_transferownermodule_imports",{"_index":3490,"title":{},"body":{"modules/TransferOwnerModule.html":{}}}],["cluster_userprofilemodule",{"_index":3607,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_bootstrap",{"_index":3610,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_declarations",{"_index":3608,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_imports",{"_index":3609,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["cluster_workspacelistmodule",{"_index":3834,"title":{},"body":{"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["cluster_workspacelistmodule_bootstrap",{"_index":3837,"title":{},"body":{"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["cluster_workspacelistmodule_declarations",{"_index":3835,"title":{},"body":{"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["cluster_workspacelistmodule_imports",{"_index":3836,"title":{},"body":{"modules/WorkspaceListModule.html":{}}}],["code",{"_index":4001,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["col",{"_index":1888,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["collect",{"_index":4654,"title":{},"body":{"license.html":{}}}],["collection",{"_index":1740,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["collections",{"_index":3994,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["cols",{"_index":2601,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["column.link.pattern",{"_index":3229,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["columns",{"_index":2658,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["columntitle:string",{"_index":3250,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["combination",{"_index":4660,"title":{},"body":{"license.html":{}}}],["combine",{"_index":4658,"title":{},"body":{"license.html":{}}}],["combined",{"_index":4354,"title":{},"body":{"license.html":{}}}],["combines",{"_index":3586,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["come",{"_index":4918,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["comes",{"_index":4341,"title":{},"body":{"license.html":{}}}],["command",{"_index":4777,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["commands",{"_index":4202,"title":{},"body":{"license.html":{}}}],["commence",{"_index":4903,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["commercial",{"_index":4436,"title":{},"body":{"license.html":{}}}],["commitment",{"_index":4602,"title":{},"body":{"license.html":{}}}],["common",{"_index":4432,"title":{},"body":{"license.html":{}}}],["commons",{"_index":4009,"title":{},"body":{"index.html":{}}}],["communication",{"_index":4248,"title":{},"body":{"license.html":{}}}],["community",{"_index":3991,"title":{},"body":{"index.html":{}}}],["compare",{"_index":449,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["compare(a",{"_index":2715,"title":{},"body":{"components/PDFListComponent.html":{}}}],["comparefn",{"_index":1213,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["comparefn(a",{"_index":1215,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["comparefn(a,b",{"_index":451,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["compat",{"_index":3939,"title":{},"body":{"dependencies.html":{}}}],["compatible",{"_index":5009,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["compclass",{"_index":1980,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["compfactory",{"_index":1119,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["compilation",{"_index":4349,"title":{},"body":{"license.html":{}}}],["compilation's",{"_index":4359,"title":{},"body":{"license.html":{}}}],["compilations",{"_index":4639,"title":{},"body":{"license.html":{}}}],["compiled",{"_index":1090,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["compiler",{"_index":4231,"title":{},"body":{"license.html":{}}}],["complete",{"_index":2928,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["completed",{"_index":718,"title":{},"body":{"components/AsynchComponent.html":{}}}],["completer",{"_index":1635,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["completerdata",{"_index":1615,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completeritem",{"_index":1627,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completeritem['description",{"_index":1841,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completeritem['originalobject",{"_index":1816,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completeritem[this.compositetitlename",{"_index":1815,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completerservice",{"_index":1634,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["completion",{"_index":729,"title":{},"body":{"components/AsynchComponent.html":{}}}],["completionlabel",{"_index":694,"title":{},"body":{"components/AsynchComponent.html":{}}}],["completionratetype",{"_index":695,"title":{},"body":{"components/AsynchComponent.html":{}}}],["complex",{"_index":4979,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["compliance",{"_index":4561,"title":{},"body":{"license.html":{}}}],["comply",{"_index":4275,"title":{},"body":{"license.html":{}}}],["component",{"_index":114,"title":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["component'},{'name",{"_index":252,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["component_template",{"_index":243,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["componentclasses",{"_index":2026,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["componentfactoryresolver",{"_index":1044,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["componentreactors",{"_index":1362,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["componentref",{"_index":1075,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["components",{"_index":116,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["compositetitlename",{"_index":1620,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["computer",{"_index":4173,"title":{},"body":{"license.html":{}}}],["computers",{"_index":4130,"title":{},"body":{"license.html":{}}}],["concat",{"_index":3694,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concatenate",{"_index":3665,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concatenate(data",{"_index":3675,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concatenated",{"_index":3676,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concerning",{"_index":4659,"title":{},"body":{"license.html":{}}}],["concerns",{"_index":4666,"title":{},"body":{"license.html":{}}}],["conditioned",{"_index":4633,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":4140,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":4002,"title":{},"body":{"index.html":{}}}],["config",{"_index":17,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["config.default",{"_index":3733,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.delim",{"_index":3738,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.delim}${flddata",{"_index":3721,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.field",{"_index":3725,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.flags",{"_index":3743,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.flagstrail",{"_index":3750,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.name",{"_index":3059,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["config.regex",{"_index":3741,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.regextrail",{"_index":3748,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.separator",{"_index":3759,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.setcurrentvalue(value",{"_index":3099,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["config/emailnotification.js",{"_index":4944,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["config/env/.js",{"_index":4842,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["config/env/development.js",{"_index":5011,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["config/env/production.js",{"_index":5012,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["config/form.js",{"_index":4906,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["config/record.js",{"_index":4985,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["config/recordtype.js",{"_index":4865,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["config/workflow.js",{"_index":4872,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["configration",{"_index":4826,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["configservice",{"_index":18,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"overview.html":{}}}],["configurable",{"_index":4847,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["configuration",{"_index":894,"title":{"additional-documentation/configuration-guide.html":{}},"body":{"injectables/ConfigService.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["configure",{"_index":4789,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["configured",{"_index":2484,"title":{},"body":{"components/MapComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["configuring",{"_index":4843,"title":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["confirmpassword",{"_index":3574,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["connect",{"_index":3881,"title":{},"body":{"dependencies.html":{}}}],["connectcb",{"_index":3025,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["connection",{"_index":4622,"title":{},"body":{"license.html":{}}}],["consequence",{"_index":4549,"title":{},"body":{"license.html":{}}}],["consequential",{"_index":4693,"title":{},"body":{"license.html":{}}}],["consider",{"_index":1749,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["considered",{"_index":4509,"title":{},"body":{"license.html":{}}}],["consistent",{"_index":4594,"title":{},"body":{"license.html":{}}}],["console.error(\"error",{"_index":2952,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["console.error(\"field",{"_index":1957,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["console.error(this.classes",{"_index":1966,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["console.log(\"login",{"_index":2180,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["console.log(\"oid",{"_index":2933,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["console.log(\"url",{"_index":2936,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["console.log(`checking",{"_index":1977,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["console.log(`configservice",{"_index":917,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(`created",{"_index":3831,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["console.log(`data",{"_index":1784,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["console.log(`form",{"_index":601,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(`got",{"_index":798,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(`group",{"_index":2910,"title":{},"body":{"classes/RbValidator.html":{}}}],["console.log(`hidden",{"_index":586,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(`invalid",{"_index":575,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(`loggin",{"_index":3645,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["console.log(`on",{"_index":1892,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["console.log(`repeatable",{"_index":1404,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["console.log(`subscribed",{"_index":784,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(`subscribing",{"_index":763,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(`translator",{"_index":3543,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(`using",{"_index":1743,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["console.log(data",{"_index":786,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(error",{"_index":3811,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["console.log(eventdata",{"_index":1407,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["console.log(f.class",{"_index":1949,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["console.log(model",{"_index":3832,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["console.log(name",{"_index":411,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(oid",{"_index":2852,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["console.log(progress",{"_index":800,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(res",{"_index":2178,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["console.log(selected",{"_index":1893,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["console.log(socketres",{"_index":787,"title":{},"body":{"components/AsynchComponent.html":{}}}],["console.log(this.form.value",{"_index":603,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(value",{"_index":588,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["conspicuously",{"_index":4323,"title":{},"body":{"license.html":{}}}],["const",{"_index":438,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["constant",{"_index":2572,"title":{},"body":{"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["constantly",{"_index":4125,"title":{},"body":{"license.html":{}}}],["constitutes",{"_index":4265,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":32,"title":{},"body":{"injectables/ANDSService.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["constructor(@inject(componentfactoryresolver",{"_index":1077,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["constructor(@inject(http",{"_index":1860,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["constructor(changeref",{"_index":652,"title":{},"body":{"components/AsynchComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{}}}],["constructor(completerservice",{"_index":2021,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["constructor(componentfactoryresolver",{"_index":1043,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["constructor(elm",{"_index":1531,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["constructor(http",{"_index":33,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["constructor(options",{"_index":214,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["constructor(opts",{"_index":3033,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["constructor(private",{"_index":483,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["constructor(rectype",{"_index":3047,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["constructor(rolesservice",{"_index":2223,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["constructor(sanitizer",{"_index":3124,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["constructor(translatei18next",{"_index":3497,"title":{},"body":{"injectables/TranslationService.html":{}}}],["constructor(url",{"_index":1618,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["constructor(userservice",{"_index":2145,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["construed",{"_index":4643,"title":{},"body":{"license.html":{}}}],["consumer",{"_index":4416,"title":{},"body":{"license.html":{}}}],["contact",{"_index":4731,"title":{},"body":{"license.html":{}}}],["contain",{"_index":4640,"title":{},"body":{"license.html":{}}}],["container",{"_index":389,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["containerised",{"_index":4838,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["containing",{"_index":2899,"title":{},"body":{"classes/RbValidator.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["contains",{"_index":4512,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["content",{"_index":4264,"title":{},"body":{"license.html":{}}}],["contents",{"_index":4598,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["context",{"_index":4226,"title":{},"body":{"license.html":{}}}],["continue",{"_index":4461,"title":{},"body":{"license.html":{}}}],["continued",{"_index":4446,"title":{},"body":{"license.html":{}}}],["contractual",{"_index":4506,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4648,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":4045,"title":{},"body":{"license.html":{}}}],["contrib/redbox2ckan#dev_build",{"_index":3933,"title":{},"body":{"dependencies.html":{}}}],["contributor",{"_index":1449,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["contributor's",{"_index":4586,"title":{},"body":{"license.html":{}}}],["contributor'},{'name",{"_index":259,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["contributor.component",{"_index":1264,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{}}}],["contributorcomponent",{"_index":257,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["contributorfield",{"_index":1263,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["control",{"_index":464,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["control.service",{"_index":3366,"title":{},"body":{"modules/SharedModule.html":{}}}],["control.service.ts",{"_index":2014,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:42",{"_index":2023,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:54",{"_index":2025,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:58",{"_index":2027,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:62",{"_index":2035,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:69",{"_index":2033,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:77",{"_index":2031,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:88",{"_index":2028,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:93",{"_index":2029,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.value",{"_index":3595,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["control.value.length",{"_index":2903,"title":{},"body":{"classes/RbValidator.html":{}}}],["control1",{"_index":3975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["control2",{"_index":3576,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["controlled",{"_index":4589,"title":{},"body":{"license.html":{}}}],["convenience",{"_index":191,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["convenient",{"_index":4194,"title":{},"body":{"license.html":{}}}],["convert",{"_index":1805,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["converttoitem",{"_index":1616,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{}}}],["converttoitem(data",{"_index":1625,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["convey",{"_index":4181,"title":{},"body":{"license.html":{}}}],["conveyance",{"_index":4626,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":4456,"title":{},"body":{"license.html":{}}}],["conveying",{"_index":4188,"title":{},"body":{"license.html":{}}}],["conveys",{"_index":4505,"title":{},"body":{"license.html":{}}}],["coordinateshelp",{"_index":2445,"title":{},"body":{"components/MapComponent.html":{}}}],["coordinateshelpshow",{"_index":2418,"title":{},"body":{"components/MapComponent.html":{}}}],["copies",{"_index":4034,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1197,"title":{},"body":{"modules/DmpModule.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["copying",{"_index":4141,"title":{},"body":{"license.html":{}}}],["copyleft",{"_index":4038,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1157,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["copyrightable",{"_index":4150,"title":{},"body":{"license.html":{}}}],["copyrighted",{"_index":4280,"title":{},"body":{"license.html":{}}}],["core",{"_index":3884,"title":{},"body":{"dependencies.html":{}}}],["correction",{"_index":4688,"title":{},"body":{"license.html":{}}}],["correctly",{"_index":2390,"title":{},"body":{"components/MapComponent.html":{}}}],["corresponding",{"_index":4234,"title":{},"body":{"license.html":{}}}],["cost",{"_index":4383,"title":{},"body":{"license.html":{}}}],["count",{"_index":4887,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["counterclaim",{"_index":4578,"title":{},"body":{"license.html":{}}}],["countries",{"_index":4178,"title":{},"body":{"license.html":{}}}],["country",{"_index":4616,"title":{},"body":{"license.html":{}}}],["counts",{"_index":4886,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["course",{"_index":4746,"title":{},"body":{"license.html":{}}}],["court",{"_index":4647,"title":{},"body":{"license.html":{}}}],["courts",{"_index":4708,"title":{},"body":{"license.html":{}}}],["covenant",{"_index":4605,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":2376,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["covered",{"_index":4163,"title":{},"body":{"license.html":{}}}],["create",{"_index":516,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"index.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["create(record",{"_index":2953,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["created",{"_index":761,"title":{},"body":{"components/AsynchComponent.html":{}}}],["createddownload",{"_index":2735,"title":{},"body":{"components/PDFListComponent.html":{}}}],["createdinfo",{"_index":766,"title":{},"body":{"components/AsynchComponent.html":{}}}],["createdinfo.oid",{"_index":768,"title":{},"body":{"components/AsynchComponent.html":{}}}],["createformgroup",{"_index":1700,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["createformmodel",{"_index":3823,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["createformmodel(valueelem",{"_index":1699,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["createnewelem(basefieldinst",{"_index":1344,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["creating",{"_index":509,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/configuration-guide.html":{}}}],["creation",{"_index":764,"title":{},"body":{"components/AsynchComponent.html":{}}}],["credentials",{"_index":5010,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["creds",{"_index":2188,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["criteria",{"_index":686,"title":{},"body":{"components/AsynchComponent.html":{}}}],["criterion",{"_index":4206,"title":{},"body":{"license.html":{}}}],["criticalerror",{"_index":1509,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["cross",{"_index":4576,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["csrf",{"_index":886,"title":{},"body":{"classes/BaseService.html":{}}}],["csrfres.json()['_csrf",{"_index":912,"title":{},"body":{"injectables/ConfigService.html":{}}}],["csrftoken",{"_index":895,"title":{},"body":{"injectables/ConfigService.html":{}}}],["css",{"_index":180,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["cssclasses",{"_index":2064,"title":{},"body":{"components/GenericGroupComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{}}}],["csv",{"_index":1602,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["ctrl",{"_index":466,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ctrl.value",{"_index":467,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ctrlindex",{"_index":167,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["cuddihy",{"_index":1229,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["cure",{"_index":4541,"title":{},"body":{"license.html":{}}}],["currently",{"_index":3986,"title":{},"body":{"index.html":{}}}],["currentpage",{"_index":2751,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["currentuser",{"_index":2212,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["currentuser.email",{"_index":2347,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["currentuser.name",{"_index":2346,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["curtabid",{"_index":2509,"title":{},"body":{"components/MapComponent.html":{}}}],["custodians",{"_index":3995,"title":{},"body":{"index.html":{}}}],["custom",{"_index":2884,"title":{},"body":{"classes/RbValidator.html":{}}}],["customarily",{"_index":4374,"title":{},"body":{"license.html":{}}}],["customer",{"_index":4380,"title":{},"body":{"license.html":{}}}],["customisation",{"_index":4809,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["customisations",{"_index":4811,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["customise",{"_index":4972,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["customised",{"_index":4943,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["customising",{"_index":4971,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["cwd",{"_index":4798,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["cyber",{"_index":1161,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"index.html":{}}}],["d",{"_index":3715,"title":{},"body":{"injectables/UtilityService.html":{},"license.html":{}}}],["damages",{"_index":4691,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1255,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/ManageRolesComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["dashboard",{"_index":91,"title":{},"body":{"injectables/ANDSService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/SharedModule.html":{}}}],["dashboard'},{'name",{"_index":261,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["dashboard.component",{"_index":943,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboardcomponent",{"_index":260,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["dashboardmodule",{"_index":920,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardservice",{"_index":950,"title":{"injectables/DashboardService.html":{}},"body":{"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"overview.html":{}}}],["dashboardtitle",{"_index":2742,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["data",{"_index":263,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["data.oid",{"_index":3119,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["data.originalobject",{"_index":1786,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["data.title",{"_index":1736,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["data[fielddesc",{"_index":1848,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["data[fieldname",{"_index":1836,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["data[titlefld",{"_index":1766,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["database",{"_index":3805,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["datacrate",{"_index":3887,"title":{},"body":{"dependencies.html":{}}}],["datalocation",{"_index":2789,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.component",{"_index":3373,"title":{},"body":{"modules/SharedModule.html":{}}}],["datalocation.location",{"_index":2879,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.name",{"_index":2880,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.notes",{"_index":2869,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.selected",{"_index":2864,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation:any",{"_index":2863,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocationcomponent",{"_index":262,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["datarecord",{"_index":2375,"title":{},"body":{"components/MapComponent.html":{}}}],["dataservice",{"_index":1644,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["datatypelookup:any",{"_index":2809,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datatypes:object",{"_index":2806,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["date",{"_index":266,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{}}}],["date().gettime",{"_index":914,"title":{},"body":{"injectables/ConfigService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/TranslationService.html":{}}}],["datecompletedlabel",{"_index":690,"title":{},"body":{"components/AsynchComponent.html":{}}}],["datecreated",{"_index":2743,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["dateformat:string",{"_index":697,"title":{},"body":{"components/AsynchComponent.html":{}}}],["datemodified",{"_index":2744,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["datepicker.readthedocs.io/en/stable",{"_index":608,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["datepickeropts",{"_index":1510,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["datestartedlabel",{"_index":689,"title":{},"body":{"components/AsynchComponent.html":{}}}],["datetime",{"_index":390,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"modules/ExportModule.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"dependencies.html":{}}}],["datetime/ng2",{"_index":1612,"title":{},"body":{"modules/ExportModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{}}}],["datetimecomponent",{"_index":265,"title":{"components/DateTimeComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["days",{"_index":4537,"title":{},"body":{"license.html":{}}}],["dc_title",{"_index":1686,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["dd",{"_index":1594,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["dd/mm/yyyy",{"_index":1576,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["debug",{"_index":3508,"title":{},"body":{"injectables/TranslationService.html":{}}}],["december",{"_index":4303,"title":{},"body":{"license.html":{}}}],["decide",{"_index":1908,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["declarations",{"_index":923,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["declare",{"_index":400,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["declared",{"_index":1964,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["declining",{"_index":4498,"title":{},"body":{"license.html":{}}}],["decodeuri(querystr",{"_index":3087,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["decodeuricomponent(window.location.search.substring(1",{"_index":578,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["decorators",{"_index":1030,"title":{},"body":{"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["deemed",{"_index":4292,"title":{},"body":{"license.html":{}}}],["default",{"_index":57,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["defaultdrawoptions",{"_index":2449,"title":{},"body":{"components/MapComponent.html":{}}}],["defaultform",{"_index":4907,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["defaultleafletoptions",{"_index":2469,"title":{},"body":{"components/MapComponent.html":{}}}],["defaults",{"_index":748,"title":{},"body":{"components/AsynchComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/MapComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defaults/format",{"_index":4965,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defaults/from",{"_index":4962,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defaults/subject",{"_index":4964,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defective",{"_index":4683,"title":{},"body":{"license.html":{}}}],["defenses",{"_index":4645,"title":{},"body":{"license.html":{}}}],["defined",{"_index":36,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defines",{"_index":4866,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["definition",{"_index":519,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["definitions",{"_index":4145,"title":{},"body":{"license.html":{}}}],["defvalue",{"_index":1543,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["delegateerrorhandling",{"_index":1276,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["delegates",{"_index":616,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["delete",{"_index":1408,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["delete(oid",{"_index":3027,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["delim",{"_index":1770,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/UtilityService.html":{}}}],["delimiter",{"_index":3680,"title":{},"body":{"injectables/UtilityService.html":{}}}],["delimpair",{"_index":1775,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["delimpair.prefix}${titleval}${_.isempty(title",{"_index":1777,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["delimpair.suffix",{"_index":1778,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["delim}targetstep=${targetstep",{"_index":2962,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["denied",{"_index":3222,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"license.html":{}}}],["denominated",{"_index":4603,"title":{},"body":{"license.html":{}}}],["deny",{"_index":4098,"title":{},"body":{"license.html":{}}}],["denying",{"_index":4068,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":922,"title":{"dependencies.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{}}}],["dependency",{"_index":2256,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["dependentfieldnames",{"_index":2894,"title":{},"body":{"classes/RbValidator.html":{}}}],["depending",{"_index":4804,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["depends",{"_index":2399,"title":{},"body":{"components/MapComponent.html":{}}}],["deployment",{"_index":4817,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["deprive",{"_index":4612,"title":{},"body":{"license.html":{}}}],["desc",{"_index":3436,"title":{},"body":{"components/SortComponent.html":{}}}],["descending",{"_index":2717,"title":{},"body":{"components/PDFListComponent.html":{}}}],["describe",{"_index":3992,"title":{},"body":{"index.html":{}}}],["described",{"_index":4932,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["description",{"_index":525,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["descriptions",{"_index":1851,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["description}${_.isempty(description",{"_index":1855,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["design",{"_index":4859,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["designated",{"_index":4391,"title":{},"body":{"license.html":{}}}],["designed",{"_index":554,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["detail",{"_index":4664,"title":{},"body":{"license.html":{}}}],["details",{"_index":1195,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"injectables/UserSimpleService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["details.the",{"_index":4743,"title":{},"body":{"license.html":{}}}],["details:details",{"_index":3656,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["detect",{"_index":2946,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["detector",{"_index":3520,"title":{},"body":{"injectables/TranslationService.html":{}}}],["detectretina",{"_index":2442,"title":{},"body":{"components/MapComponent.html":{}}}],["determining",{"_index":4426,"title":{},"body":{"license.html":{}}}],["dev_build",{"_index":4785,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["develop",{"_index":4717,"title":{},"body":{"license.html":{}}}],["developers",{"_index":4080,"title":{},"body":{"license.html":{}}}],["development",{"_index":4013,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["devices",{"_index":4097,"title":{},"body":{"license.html":{}}}],["di'ing",{"_index":1048,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["dict",{"_index":3692,"title":{},"body":{"injectables/UtilityService.html":{}}}],["differ",{"_index":4663,"title":{},"body":{"license.html":{}}}],["different",{"_index":4394,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["differently",{"_index":4487,"title":{},"body":{"license.html":{}}}],["direction",{"_index":4279,"title":{},"body":{"license.html":{}}}],["directions",{"_index":4398,"title":{},"body":{"license.html":{}}}],["directive",{"_index":241,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["directives",{"_index":369,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["directly",{"_index":2573,"title":{},"body":{"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"license.html":{}}}],["directories",{"_index":4939,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["directory",{"_index":4960,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["disabled",{"_index":1035,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disabled:boolean",{"_index":1076,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["disabledelement",{"_index":3778,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["disabledelement.prop(\"disabled\",true",{"_index":1116,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disabledelements",{"_index":1037,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disabledexpression",{"_index":1038,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disableeditafterselect",{"_index":1652,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["disableinput",{"_index":1880,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["disclaim",{"_index":4314,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":4675,"title":{},"body":{"license.html":{}}}],["disclaiming",{"_index":4484,"title":{},"body":{"license.html":{}}}],["discovery",{"_index":4006,"title":{},"body":{"index.html":{}}}],["discriminatory",{"_index":4630,"title":{},"body":{"license.html":{}}}],["display",{"_index":200,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["displayed",{"_index":4492,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["displays",{"_index":4190,"title":{},"body":{"license.html":{}}}],["distinguishing",{"_index":4667,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":4032,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1182,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["distributing",{"_index":4635,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":4142,"title":{},"body":{"license.html":{}}}],["distro",{"_index":4805,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["dmp",{"_index":269,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["dmpfieldcomponent",{"_index":268,"title":{"components/DmpFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["dmpformcomponent",{"_index":271,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["dmpmodule",{"_index":1146,"title":{"modules/DmpModule.html":{}},"body":{"modules/DmpModule.html":{},"modules.html":{},"overview.html":{}}}],["dmpt",{"_index":2069,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["doaction",{"_index":540,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["docker",{"_index":4022,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide.html":{}}}],["document",{"_index":2149,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/SortComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["document:any",{"_index":2163,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["documentation",{"_index":2394,"title":{"additional-documentation/rest-api-documentation.html":{}},"body":{"components/MapComponent.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["documentation](http://leafletjs.com/reference",{"_index":2579,"title":{},"body":{"components/MapComponent.html":{}}}],["documentation](https://leaflet.github.io/leaflet.draw/docs/leaflet",{"_index":2581,"title":{},"body":{"components/MapComponent.html":{}}}],["documented",{"_index":4471,"title":{},"body":{"license.html":{}}}],["doesn't",{"_index":1953,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/RbValidator.html":{}}}],["dom",{"_index":117,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["domains",{"_index":4117,"title":{},"body":{"license.html":{}}}],["domsanitizer",{"_index":3125,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["dont",{"_index":1098,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["dotenv",{"_index":3889,"title":{},"body":{"dependencies.html":{}}}],["doubtful",{"_index":4427,"title":{},"body":{"license.html":{}}}],["down",{"_index":1301,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["download",{"_index":1521,"title":{},"body":{"components/ExportFormComponent.html":{},"components/PDFListComponent.html":{}}}],["downstream",{"_index":4559,"title":{},"body":{"license.html":{}}}],["draft",{"_index":4899,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["draftplans",{"_index":3260,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["draw",{"_index":2410,"title":{},"body":{"components/MapComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["draw's",{"_index":2411,"title":{},"body":{"components/MapComponent.html":{}}}],["drawlayers",{"_index":2549,"title":{},"body":{"components/MapComponent.html":{}}}],["drawn",{"_index":2404,"title":{},"body":{"components/MapComponent.html":{}}}],["drawnitems",{"_index":2432,"title":{},"body":{"components/MapComponent.html":{}}}],["drawoptions",{"_index":2409,"title":{},"body":{"components/MapComponent.html":{}}}],["dropdown",{"_index":2733,"title":{},"body":{"components/PDFListComponent.html":{}}}],["dropdownfield",{"_index":444,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["dropdownfield'},{'name",{"_index":274,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["dropdownfieldcomponent",{"_index":273,"title":{"components/DropdownFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["duplication",{"_index":4990,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["durable",{"_index":4373,"title":{},"body":{"license.html":{}}}],["dwelling",{"_index":4425,"title":{},"body":{"license.html":{}}}],["dynamically",{"_index":4243,"title":{},"body":{"license.html":{}}}],["e",{"_index":564,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["e.g",{"_index":4782,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["e.layer",{"_index":2528,"title":{},"body":{"components/MapComponent.html":{}}}],["e.layers",{"_index":2534,"title":{},"body":{"components/MapComponent.html":{}}}],["e.layertype",{"_index":2526,"title":{},"body":{"components/MapComponent.html":{}}}],["e.preventdefault",{"_index":1600,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["e.target.href.split('#')[1",{"_index":565,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["each",{"_index":3136,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["earlier",{"_index":4162,"title":{},"body":{"license.html":{}}}],["early",{"_index":4917,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["easier",{"_index":4991,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["ecosystem.json",{"_index":4808,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["ecosytem.json",{"_index":4788,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["edit",{"_index":1904,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["edit:[],view:[],editroles:[],viewroles:[],editpending:[],viewpending",{"_index":3135,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["editable",{"_index":2918,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["editable:boolean",{"_index":2931,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["editcssclasses",{"_index":4909,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["editing",{"_index":4935,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["editingnotes",{"_index":2780,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotes",{"_index":2781,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotes(datalocation",{"_index":2787,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotesbuttontext",{"_index":2814,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotescssclasses",{"_index":2818,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotestitle",{"_index":2815,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editonly",{"_index":2067,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["editroles",{"_index":4897,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["edituser",{"_index":2218,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["edituser(username",{"_index":2226,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["edituser(username:string",{"_index":2290,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["effect",{"_index":4705,"title":{},"body":{"license.html":{}}}],["effected",{"_index":4312,"title":{},"body":{"license.html":{}}}],["effective",{"_index":4293,"title":{},"body":{"license.html":{}}}],["effectively",{"_index":4134,"title":{},"body":{"license.html":{}}}],["efforts",{"_index":4570,"title":{},"body":{"license.html":{}}}],["ejs",{"_index":3891,"title":{},"body":{"dependencies.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["ele",{"_index":1847,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["electronic",{"_index":4732,"title":{},"body":{"license.html":{}}}],["elem.componentreactors.push(this",{"_index":1493,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem.margintop",{"_index":1490,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem.setupeventhandlers",{"_index":1492,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem.vocabfield.initialvalue",{"_index":1491,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem:any",{"_index":1488,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["element",{"_index":240,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["element(by.css('app",{"_index":637,"title":{},"body":{"classes/AngularPage.html":{}}}],["elementref",{"_index":1532,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RecordSearchRefinerComponent.html":{},"components/SortComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["elements",{"_index":1062,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/MapComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["elems",{"_index":1323,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elems.push(fieldclone.createformmodel",{"_index":1333,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elm",{"_index":1535,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["email",{"_index":2205,"title":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}},"body":{"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["email's",{"_index":4974,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["email:email",{"_index":2974,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["emailnotification.js",{"_index":4834,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["emailnotificationservice",{"_index":1221,"title":{"injectables/EmailNotificationService.html":{}},"body":{"injectables/EmailNotificationService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["emailregexp",{"_index":3588,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["emailregexp.test(control.value",{"_index":3596,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["emails",{"_index":4947,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["embeddablecomponent",{"_index":1235,"title":{"classes/EmbeddableComponent.html":{}},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:222",{"_index":2079,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:223",{"_index":2082,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:224",{"_index":2081,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:225",{"_index":2080,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:226",{"_index":2083,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:228",{"_index":2085,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:232",{"_index":2084,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embodied",{"_index":4369,"title":{},"body":{"license.html":{}}}],["emergency",{"_index":508,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["emitconfig",{"_index":897,"title":{},"body":{"injectables/ConfigService.html":{}}}],["emitevent",{"_index":225,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["emitevent:boolean",{"_index":2839,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["emitinit",{"_index":25,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["emitmodeltoviewchange:true",{"_index":227,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{}}}],["employer",{"_index":4749,"title":{},"body":{"license.html":{}}}],["empty",{"_index":2391,"title":{},"body":{"components/MapComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/UtilityService.html":{}}}],["emptyfields",{"_index":2900,"title":{},"body":{"classes/RbValidator.html":{}}}],["en",{"_index":3527,"title":{},"body":{"injectables/TranslationService.html":{}}}],["enable",{"_index":1100,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["enabled",{"_index":1103,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["enabledvalidators",{"_index":2653,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["enables",{"_index":4183,"title":{},"body":{"license.html":{}}}],["encapsulation",{"_index":3550,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["end",{"_index":2943,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["endpoint",{"_index":4953,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["endpoints",{"_index":4988,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["enforce",{"_index":4604,"title":{},"body":{"license.html":{}}}],["enforcing",{"_index":4318,"title":{},"body":{"license.html":{}}}],["ensure",{"_index":2483,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["enter",{"_index":2585,"title":{},"body":{"components/MapComponent.html":{}}}],["entered",{"_index":2588,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["entire",{"_index":4339,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["entirely",{"_index":4656,"title":{},"body":{"license.html":{}}}],["entity",{"_index":4562,"title":{},"body":{"license.html":{}}}],["entry",{"_index":1414,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["entrycomponents",{"_index":1212,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/SharedModule.html":{},"modules/WorkspaceListModule.html":{}}}],["env",{"_index":4790,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["environment",{"_index":4769,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["environments",{"_index":5025,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["equivalent",{"_index":4268,"title":{},"body":{"license.html":{}}}],["erroneously",{"_index":4096,"title":{},"body":{"license.html":{}}}],["error",{"_index":186,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["error('cannot",{"_index":3808,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["es",{"_index":3910,"title":{},"body":{"dependencies.html":{}}}],["es6",{"_index":86,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"dependencies.html":{}}}],["escape",{"_index":1638,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"dependencies.html":{}}}],["essential",{"_index":4227,"title":{},"body":{"license.html":{}}}],["etc",{"_index":3454,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["even",{"_index":1187,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["event",{"_index":164,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["event.preventdefault",{"_index":2174,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["event.shown",{"_index":2515,"title":{},"body":{"components/MapComponent.html":{}}}],["event.tabid",{"_index":2516,"title":{},"body":{"components/MapComponent.html":{}}}],["event.target.checked",{"_index":472,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["event:any",{"_index":469,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["event[1",{"_index":1438,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["eventconfig=null",{"_index":1418,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["eventdata",{"_index":1402,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["eventemitter",{"_index":1258,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["eventname",{"_index":1406,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["everyone",{"_index":4030,"title":{},"body":{"license.html":{}}}],["exact",{"_index":2995,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["exactnames",{"_index":2997,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchnames",{"_index":2987,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchnames}${exactsearchvalues}${facetsearchnames}${facetsearchvalues",{"_index":3006,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchnames},`}${refiner.name",{"_index":2998,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchvalues",{"_index":2988,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchvalues}&exact_${refiner.name}=${refiner.value",{"_index":2999,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["example",{"_index":889,"title":{},"body":{"components/CancelButtonComponent.html":{},"injectables/EmailNotificationService.html":{},"components/GenericGroupComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["except",{"_index":4171,"title":{},"body":{"license.html":{}}}],["exceptions",{"_index":4475,"title":{},"body":{"license.html":{}}}],["excluded",{"_index":4414,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":4644,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":4724,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":4595,"title":{},"body":{"license.html":{}}}],["exclusively",{"_index":4273,"title":{},"body":{"license.html":{}}}],["excuse",{"_index":4649,"title":{},"body":{"license.html":{}}}],["executable",{"_index":4218,"title":{},"body":{"license.html":{}}}],["execute",{"_index":4444,"title":{},"body":{"license.html":{}}}],["executeaction",{"_index":137,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["executeaction(action:string",{"_index":3018,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["executeaction(event",{"_index":162,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["executeaction(event:any",{"_index":230,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["executing",{"_index":4172,"title":{},"body":{"license.html":{}}}],["exercise",{"_index":4571,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":4313,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1954,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/RbValidator.html":{}}}],["existingrefiner",{"_index":3078,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["existingrefiner.value",{"_index":3083,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["existinguser",{"_index":2276,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["existinguser.roles",{"_index":2281,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["existinguser.roles.push(role.name",{"_index":2284,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["existinguser.username",{"_index":2279,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["existinguser:any",{"_index":2278,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["expand/collapse",{"_index":480,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["expandcollapseall",{"_index":501,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["expected",{"_index":4434,"title":{},"body":{"license.html":{}}}],["expecting",{"_index":1769,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["expects",{"_index":1792,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["explains",{"_index":4090,"title":{},"body":{"license.html":{}}}],["explicitly",{"_index":4259,"title":{},"body":{"license.html":{}}}],["export",{"_index":96,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["exportformcomponent",{"_index":275,"title":{"components/ExportFormComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["exportmodule",{"_index":1604,"title":{"modules/ExportModule.html":{}},"body":{"modules/ExportModule.html":{},"modules.html":{},"overview.html":{}}}],["exports",{"_index":926,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["express",{"_index":4600,"title":{},"body":{"license.html":{}}}],["expressed",{"_index":4677,"title":{},"body":{"license.html":{}}}],["expressions",{"_index":3453,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["expressly",{"_index":4520,"title":{},"body":{"license.html":{}}}],["extend",{"_index":4120,"title":{},"body":{"license.html":{}}}],["extended",{"_index":4629,"title":{},"body":{"license.html":{}}}],["extends",{"_index":8,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["extensible",{"_index":4825,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["extensions",{"_index":4353,"title":{},"body":{"license.html":{}}}],["extent",{"_index":4193,"title":{},"body":{"license.html":{}}}],["external",{"_index":1759,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["externallookupdataservice",{"_index":1613,"title":{"classes/ExternalLookupDataService.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["extra",{"_index":3897,"title":{},"body":{"dependencies.html":{}}}],["extractdata",{"_index":26,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["extractdata(res",{"_index":53,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["f",{"_index":1336,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/UtilityService.html":{},"license.html":{}}}],["f.class",{"_index":1958,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.compclass",{"_index":1979,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.completerservice",{"_index":2001,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.definition",{"_index":1984,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.definition.fields",{"_index":1985,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.fields",{"_index":1990,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.haslookup",{"_index":1995,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.lookupservice",{"_index":2002,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.setlookupservices(this.getinjectedservice('completerservice",{"_index":2000,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.setupeventhandlers",{"_index":1337,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["f.triggervalidation",{"_index":1400,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["f:any",{"_index":1399,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RbValidator.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["f]{32",{"_index":2702,"title":{},"body":{"components/PDFListComponent.html":{}}}],["fa",{"_index":1249,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["facet",{"_index":3000,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["facet.name",{"_index":3110,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facet.values",{"_index":3111,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["faceting",{"_index":4869,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["facetnames",{"_index":3002,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facets",{"_index":977,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordSearchParams.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["facetsearchnames",{"_index":2989,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetsearchnames},`}${refiner.name",{"_index":3003,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetsearchvalues",{"_index":2990,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetsearchvalues}&facet_${refiner.name}=${refiner.activevalue",{"_index":3005,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetvalue.count",{"_index":3209,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["facetvalue.value",{"_index":3208,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["facilities",{"_index":4274,"title":{},"body":{"license.html":{}}}],["factory",{"_index":2015,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["failed",{"_index":3236,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["failedobjects",{"_index":2656,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["fails",{"_index":4533,"title":{},"body":{"license.html":{}}}],["failure",{"_index":4700,"title":{},"body":{"license.html":{}}}],["fair",{"_index":4267,"title":{},"body":{"license.html":{}}}],["fallbacklng",{"_index":3541,"title":{},"body":{"injectables/TranslationService.html":{}}}],["false",{"_index":159,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["family",{"_index":4420,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":4158,"title":{},"body":{"license.html":{}}}],["favor",{"_index":4430,"title":{},"body":{"license.html":{}}}],["fb",{"_index":2147,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["fc",{"_index":405,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fc.controls[ctrlindex",{"_index":417,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fc.controls[this.field.name",{"_index":421,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fc.controls[this.index",{"_index":419,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fcmetaservice",{"_index":2022,"title":{},"body":{"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["fdesc",{"_index":1854,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["feature",{"_index":4196,"title":{},"body":{"license.html":{}}}],["featuregroup",{"_index":2412,"title":{},"body":{"components/MapComponent.html":{}}}],["features",{"_index":4941,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["fee",{"_index":4076,"title":{},"body":{"license.html":{}}}],["fg",{"_index":1309,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fg[this.name",{"_index":1342,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fgdef",{"_index":3824,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["fgdef.push(new",{"_index":3828,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field",{"_index":132,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["field'},{'name",{"_index":270,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["field.accessdeniedobjects.length",{"_index":3238,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["field.addbuttontext",{"_index":1440,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["field.cansort",{"_index":1451,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.columntitle",{"_index":3287,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["field.completionlabel",{"_index":812,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.component",{"_index":3387,"title":{},"body":{"modules/SharedModule.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["field.component.ts",{"_index":1034,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:101",{"_index":1058,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:111",{"_index":3770,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:154",{"_index":1059,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:25",{"_index":3766,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:30",{"_index":3768,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:34",{"_index":3769,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:38",{"_index":3767,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:42",{"_index":1049,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:47",{"_index":1052,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:49",{"_index":3771,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:51",{"_index":1057,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:55",{"_index":1050,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:59",{"_index":1070,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:64",{"_index":1056,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:66",{"_index":1054,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:68",{"_index":1055,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:70",{"_index":1053,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:72",{"_index":1067,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:74",{"_index":1071,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:76",{"_index":1061,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:80",{"_index":1047,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:91",{"_index":1073,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.coordinateshelp",{"_index":2587,"title":{},"body":{"components/MapComponent.html":{}}}],["field.datatypelookup[datalocation.type",{"_index":2878,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.datecompletedlabel",{"_index":817,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.datestartedlabel",{"_index":814,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.editnotesbuttontext",{"_index":2881,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.failedobjects.length",{"_index":3234,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["field.fields",{"_index":2050,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["field.fields[0].emailcolhdr",{"_index":1469,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].label",{"_index":1450,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].namecolhdr",{"_index":1468,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].orcidcolhdr",{"_index":1471,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].rolecolhdr",{"_index":1470,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].titlecolhdr",{"_index":1467,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.formatvaluefordisplay",{"_index":610,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["field.formmodel",{"_index":2904,"title":{},"body":{"classes/RbValidator.html":{}}}],["field.getgroup(group",{"_index":2053,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["field.getstatuslabel(progress.status",{"_index":819,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.hasgroup",{"_index":2051,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["field.help",{"_index":1879,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["field.label",{"_index":373,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["field.label}}submitting",{"_index":130,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["field.lastupdatelabel",{"_index":816,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.locationheader",{"_index":2876,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.messagelabel",{"_index":813,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.name",{"_index":2911,"title":{},"body":{"classes/RbValidator.html":{}}}],["field.namelabel",{"_index":810,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.nextlabel",{"_index":559,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["field.notesheader",{"_index":2877,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.onaccordioncollapseexpand.subscribe((event",{"_index":2514,"title":{},"body":{"components/MapComponent.html":{}}}],["field.open",{"_index":3849,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["field.postinit(field.value",{"_index":1868,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["field.prevlabel",{"_index":558,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["field.prevlabel}}{{field.nextlabel}}{{field.prevlabel}}{{field.nextlabel",{"_index":3478,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["field.removebuttontext",{"_index":1462,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.savefirst",{"_index":3850,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["field.sourcedata",{"_index":1867,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["field.sourcetype",{"_index":1864,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["field.startedbylabel",{"_index":815,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.statuslabel",{"_index":811,"title":{},"body":{"components/AsynchComponent.html":{}}}],["field.typeheader",{"_index":2875,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.validationmessages.required",{"_index":445,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["field.value",{"_index":129,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["field.value.title",{"_index":3285,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["field.vocabid",{"_index":1862,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["field.workspaceapp.description",{"_index":3848,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["field.workspaceapp.name",{"_index":3845,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["field.workspaceapp.subtitle",{"_index":3847,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["field:this",{"_index":1314,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldanchor",{"_index":1039,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldarr",{"_index":1933,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldarr.push(f",{"_index":1989,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldarray",{"_index":1992,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldbase",{"_index":149,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["fieldclass",{"_index":1955,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldclass.meta(f.definition",{"_index":1968,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldclasses",{"_index":1943,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["fieldclone",{"_index":1327,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldclone.value",{"_index":1328,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldcompref",{"_index":1143,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance",{"_index":1145,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.field",{"_index":1125,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.fieldmap",{"_index":1127,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.form",{"_index":1126,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.index",{"_index":1133,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance.injector",{"_index":1124,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.isembedded",{"_index":1130,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance.name",{"_index":1132,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance.parentid",{"_index":1128,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref:componentref",{"_index":1121,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcontrolmetaservice",{"_index":1925,"title":{"injectables/FieldControlMetaService.html":{}},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["fieldcontrolservice",{"_index":2013,"title":{"injectables/FieldControlService.html":{}},"body":{"injectables/FieldControlService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["fieldctr",{"_index":1320,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fielddesc",{"_index":1844,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["fieldelem.margintop",{"_index":1456,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.email",{"_index":1474,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.honorific",{"_index":1472,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.orcid",{"_index":1476,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.role",{"_index":1475,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.text_full_name",{"_index":1473,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelement",{"_index":1040,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldmap",{"_index":146,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["fieldmap[this.name",{"_index":1313,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldmap[this.name].control",{"_index":1338,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldname",{"_index":1833,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/UtilityService.html":{}}}],["fieldnames",{"_index":1649,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["fieldpath",{"_index":3724,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fields",{"_index":1137,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["fields.foreach((field:any",{"_index":2049,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fieldsarr",{"_index":1937,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["fieldseparator",{"_index":3702,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fieldsmeta.push(rendercompleteelement",{"_index":2929,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["fifth",{"_index":1204,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["file':\"file",{"_index":2813,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["files",{"_index":4240,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["fill",{"_index":4920,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["filter",{"_index":2337,"title":{},"body":{"components/ManageRolesComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["filteractiverefinerswithnodata",{"_index":3101,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["filteredplans",{"_index":3248,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["filteredusers",{"_index":2213,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["filtering",{"_index":4868,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["filters",{"_index":4875,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["finalkeywords",{"_index":4891,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["finally",{"_index":4123,"title":{},"body":{"license.html":{}}}],["find",{"_index":2253,"title":{},"body":{"components/ManageRolesComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["findlookupdata(field",{"_index":1874,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["first",{"_index":1409,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["fitness",{"_index":1190,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["fixed",{"_index":4372,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["flag",{"_index":203,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["flags",{"_index":3742,"title":{},"body":{"injectables/UtilityService.html":{}}}],["flagstrail",{"_index":3749,"title":{},"body":{"injectables/UtilityService.html":{}}}],["flatmap((field:any",{"_index":2006,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flatmap((res",{"_index":1866,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["flatmap((whatever:any",{"_index":2007,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flattenfields",{"_index":1927,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flattenfields(fields",{"_index":1932,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flattening",{"_index":2274,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["fld",{"_index":1703,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["flddata",{"_index":3716,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fldname",{"_index":181,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["flds",{"_index":1701,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["flds[targetfld",{"_index":1707,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["flexibility",{"_index":4856,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["flexible",{"_index":4846,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["flip",{"_index":1134,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["floor",{"_index":1205,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["flow",{"_index":4249,"title":{},"body":{"license.html":{}}}],["fm",{"_index":1308,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fmap.field",{"_index":2047,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fmap.field.setupeventhandlers",{"_index":2048,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fmap:any",{"_index":2046,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fn",{"_index":3450,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["focustabid",{"_index":568,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["follow",{"_index":4144,"title":{},"body":{"license.html":{}}}],["following",{"_index":1965,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["follows",{"_index":4894,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["font",{"_index":3893,"title":{},"body":{"dependencies.html":{}}}],["for(var",{"_index":2638,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"injectables/ReportService.html":{}}}],["forbid",{"_index":4311,"title":{},"body":{"license.html":{}}}],["force",{"_index":4270,"title":{},"body":{"license.html":{}}}],["forceclone",{"_index":1269,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["forces",{"_index":2891,"title":{},"body":{"classes/RbValidator.html":{}}}],["form",{"_index":147,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["form'},{'name",{"_index":272,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["form.component",{"_index":1211,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["form.component.ts",{"_index":1503,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:42",{"_index":1556,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:43",{"_index":1561,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:44",{"_index":1560,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:45",{"_index":1559,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:46",{"_index":1557,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:47",{"_index":1563,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:48",{"_index":1558,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:49",{"_index":1562,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:50",{"_index":1534,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:80",{"_index":1536,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:87",{"_index":1537,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:91",{"_index":1539,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.fields",{"_index":2940,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["form.fieldsmata",{"_index":2923,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["form.fieldsmeta",{"_index":2950,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["form.html",{"_index":1508,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.js",{"_index":4836,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["form/action",{"_index":3379,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/dmp",{"_index":3386,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/field",{"_index":3365,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/record",{"_index":3368,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/records.service",{"_index":3364,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/tree",{"_index":3395,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/view",{"_index":4904,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["form/workflow",{"_index":3377,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/workspace",{"_index":3390,"title":{},"body":{"modules/SharedModule.html":{}}}],["formarray",{"_index":398,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["formarray(elems",{"_index":1334,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["formarray(fgdef",{"_index":3829,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["formarray(this.getinitarrayentry",{"_index":1318,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["format",{"_index":1577,"title":{},"body":{"components/ExportFormComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["formatdatefordisplay",{"_index":646,"title":{},"body":{"components/AsynchComponent.html":{}}}],["formatdatefordisplay(progress.date_completed",{"_index":826,"title":{},"body":{"components/AsynchComponent.html":{}}}],["formatdatefordisplay(progress.date_started",{"_index":823,"title":{},"body":{"components/AsynchComponent.html":{}}}],["formatdatefordisplay(progress.updatedat",{"_index":825,"title":{},"body":{"components/AsynchComponent.html":{}}}],["formatdatefordisplay(value",{"_index":654,"title":{},"body":{"components/AsynchComponent.html":{}}}],["formatdates",{"_index":952,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["formatdates(response",{"_index":960,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["formatdates(response:object",{"_index":1013,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["formats",{"_index":615,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formatting",{"_index":4980,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["formatvalue",{"_index":617,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formatvaluefordisplay",{"_index":2610,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["formbuilder",{"_index":2148,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["formcontrol",{"_index":171,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["formcontrol(opt.value",{"_index":474,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["formcontrol(this.layergeojson",{"_index":2558,"title":{},"body":{"components/MapComponent.html":{}}}],["formcontrol(this.value",{"_index":1710,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["formcontrol(this.value[targetfld",{"_index":1708,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["formcontrol.push(new",{"_index":473,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formcontrol.removeat(idx",{"_index":477,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formcontrol:any",{"_index":470,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formgroup",{"_index":154,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["formgroup(flds",{"_index":1709,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["formgroup(group",{"_index":2044,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["formmodel",{"_index":1358,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["formname",{"_index":2919,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["formname).then((form:any",{"_index":2921,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["forms",{"_index":4365,"title":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["formsmodule",{"_index":941,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["found",{"_index":1959,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"license.html":{}}}],["foundation",{"_index":1163,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"index.html":{},"license.html":{}}}],["foundmapping",{"_index":3728,"title":{},"body":{"injectables/UtilityService.html":{}}}],["foundmapping.value",{"_index":3732,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fq",{"_index":774,"title":{},"body":{"components/AsynchComponent.html":{}}}],["framework",{"_index":4821,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["framework's",{"_index":514,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["franklin",{"_index":1202,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["free",{"_index":1173,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["freedom",{"_index":4044,"title":{},"body":{"license.html":{}}}],["freedoms",{"_index":4079,"title":{},"body":{"license.html":{}}}],["frompromise",{"_index":3132,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["frompromise(this.recordsservice.getpermissions(oid)).flatmap(permissions",{"_index":3139,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["fs",{"_index":3896,"title":{},"body":{"dependencies.html":{}}}],["fulfilling",{"_index":4296,"title":{},"body":{"license.html":{}}}],["full",{"_index":4726,"title":{},"body":{"license.html":{}}}],["fullname",{"_index":4739,"title":{},"body":{"license.html":{}}}],["function",{"_index":515,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["function('map",{"_index":3465,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["function(_",{"_index":3458,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["function(e",{"_index":2525,"title":{},"body":{"components/MapComponent.html":{}}}],["function(o",{"_index":2539,"title":{},"body":{"components/MapComponent.html":{}}}],["function(value",{"_index":1369,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["function(w",{"_index":3821,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["functionality",{"_index":2398,"title":{},"body":{"components/MapComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["functioning",{"_index":4447,"title":{},"body":{"license.html":{}}}],["functions",{"_index":3970,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentally",{"_index":4102,"title":{},"body":{"license.html":{}}}],["further",{"_index":4393,"title":{},"body":{"license.html":{}}}],["future",{"_index":4122,"title":{},"body":{"license.html":{}}}],["g",{"_index":3744,"title":{},"body":{"injectables/UtilityService.html":{},"additional-documentation/installation-guide.html":{}}}],["general",{"_index":1166,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["generally",{"_index":4238,"title":{},"body":{"license.html":{}}}],["generate",{"_index":4235,"title":{},"body":{"license.html":{}}}],["generatetemplate",{"_index":3466,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["generatetemplate(template",{"_index":3449,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["generatetemplatestring",{"_index":3447,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["generation",{"_index":2576,"title":{},"body":{"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["generic",{"_index":277,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["genericgroupcomponent",{"_index":276,"title":{"components/GenericGroupComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["genkey",{"_index":3616,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["genkey(userid",{"_index":3628,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["genuserkey",{"_index":3617,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["geocoords",{"_index":2374,"title":{},"body":{"components/MapComponent.html":{}}}],["geojson",{"_index":2424,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer",{"_index":2551,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.eachlayer(layer",{"_index":2554,"title":{},"body":{"components/MapComponent.html":{}}}],["getabsurl",{"_index":2782,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getabsurl(location",{"_index":2790,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getabsurl(location:string",{"_index":2866,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getactiveplans",{"_index":953,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getactiveplans(pagenumber",{"_index":962,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getactiveplans(pagenumber:number",{"_index":992,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getalldraftplanscanedit",{"_index":954,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getallrecordscanedit",{"_index":955,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getallrecordscanedit(recordtype",{"_index":965,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getallrecordscanedit(recordtype:string",{"_index":985,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getalltypes",{"_index":3010,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getasyncprogress(fq:string",{"_index":3022,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getattachments(event",{"_index":2769,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["getattachments(oid",{"_index":2967,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getbaseurl",{"_index":835,"title":{},"body":{"classes/BaseService.html":{}}}],["getbrand",{"_index":3857,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["getbrandingandportalurl",{"_index":834,"title":{},"body":{"classes/BaseService.html":{}}}],["getbrandroles",{"_index":3337,"title":{},"body":{"injectables/RolesService.html":{}}}],["getclearunselected",{"_index":1916,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getclonecustomizer(cloneopts:any",{"_index":1368,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["getcollectionrooturl(collectionid",{"_index":1870,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getcompleterdescription",{"_index":2615,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["getcompleterdescription(data",{"_index":1843,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getconfig",{"_index":27,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getconfig(handler",{"_index":901,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcontrolfromoption(opt",{"_index":463,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getdashboardurl(rectype:string='rdmp",{"_index":2965,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getdatalocations",{"_index":2783,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getdownloadurl",{"_index":2644,"title":{},"body":{"components/PDFListComponent.html":{}}}],["getdownloadurl(attachment",{"_index":2645,"title":{},"body":{"components/PDFListComponent.html":{}}}],["getdraftplans",{"_index":956,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getdraftplans(pagenumber",{"_index":969,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getdraftplans(pagenumber:number",{"_index":996,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getemptyformgroup",{"_index":2017,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["geterrors",{"_index":2143,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["getexternalserviceurl(provider",{"_index":1877,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getfieldsmeta",{"_index":1928,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["getfieldsmeta(fieldsarr",{"_index":1935,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["getfieldvaluepair(fldname",{"_index":1788,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getfirstofarray",{"_index":3666,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getfirstofarray(data",{"_index":3677,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getform(oid",{"_index":2917,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getformcontrol",{"_index":139,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getformcontrol(name",{"_index":166,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getformfields(recordtype:string",{"_index":2930,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getformfieldsmeta(recordtype:string",{"_index":2937,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getfrominjector",{"_index":140,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getfrominjector(token",{"_index":174,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getfrominjector(token:any",{"_index":433,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getgetbaseurl",{"_index":853,"title":{},"body":{"classes/BaseService.html":{}}}],["getgetbrandingandportalurl",{"_index":851,"title":{},"body":{"classes/BaseService.html":{}}}],["getgroup(group",{"_index":1312,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["getgroupclass",{"_index":141,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getgroupclass(fldname",{"_index":178,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getgroupclass(fldname:string=null",{"_index":423,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["gethttpquery",{"_index":3155,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["gethttpquery(searchurl",{"_index":3069,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getinfo",{"_index":3618,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["getinitarrayentry",{"_index":1305,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["getinitsubject",{"_index":28,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getinjectedservice",{"_index":1929,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["getinjectedservice(servicename",{"_index":1938,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["getisvalid",{"_index":1072,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["getlabel",{"_index":1214,"title":{},"body":{"components/DropdownFieldComponent.html":{},"classes/SelectionComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getlabel(field.value",{"_index":446,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getlabel(field.value.value",{"_index":447,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getlabel(val",{"_index":436,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getlookupdata",{"_index":1930,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["getlookupdata(field",{"_index":1861,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getlookupdata(fields",{"_index":1941,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["getmeta",{"_index":4998,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["getmintrooturl(source",{"_index":1875,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getoptions",{"_index":29,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getoptions(headersobj",{"_index":63,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getoptionsclient",{"_index":30,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getoptionsclient(headersobj",{"_index":66,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["getparagraphtext",{"_index":630,"title":{},"body":{"classes/AngularPage.html":{}}}],["getpermissions(oid:string=null",{"_index":3016,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getpropertyasarrayfromobject",{"_index":3667,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyasarrayfromobject(data",{"_index":3684,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobject",{"_index":3668,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobject(data",{"_index":3689,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectconcat",{"_index":3669,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectconcat(data",{"_index":3690,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectmapping",{"_index":3670,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectmapping(data",{"_index":3695,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getrecordmeta(oid:string=null",{"_index":3014,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getrecordmetaobs",{"_index":3138,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["getrecordmetaobs.length",{"_index":3226,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["getrecordmetaobs.push(frompromise(this.recordsservice.getrecordmeta(item.id)).flatmap(meta",{"_index":3217,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["getrecords",{"_index":957,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getrecords(recordtype",{"_index":971,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getrecords(recordtype:string,state:string,pagenumber:number,packagetype:string=undefined",{"_index":999,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getrecordtypenames",{"_index":1522,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["getrefinerconfig",{"_index":3156,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["getrefinerconfig(name",{"_index":3057,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getrefinerconfigs",{"_index":3076,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getrelatedrecordid",{"_index":2773,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["getreport",{"_index":3321,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreport(name",{"_index":3323,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreport(name:string",{"_index":3326,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreportresults",{"_index":3322,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreportresults(name",{"_index":3324,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreportresults(name:string",{"_index":3328,"title":{},"body":{"injectables/ReportService.html":{}}}],["getrequiredlabelstr",{"_index":142,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["getrequiredlabelstr():string",{"_index":431,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getresourcedetails",{"_index":23,"title":{},"body":{"injectables/ANDSService.html":{}}}],["getresourcedetails(uri",{"_index":43,"title":{},"body":{"injectables/ANDSService.html":{}}}],["getresourcedetails(uri:string",{"_index":103,"title":{},"body":{"injectables/ANDSService.html":{}}}],["getstatuslabel(status",{"_index":751,"title":{},"body":{"components/AsynchComponent.html":{}}}],["gettargetstepparam(targetstep",{"_index":2960,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getting",{"_index":3976,"title":{"index.html":{},"license.html":{}},"body":{}}],["gettitle",{"_index":1617,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["gettitle(data",{"_index":1628,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["gettransferresponsibility(recordtype",{"_index":2980,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["gettranslated",{"_index":1525,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["gettranslated(key",{"_index":1542,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["gettype(name",{"_index":3008,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["geturlparameter",{"_index":2737,"title":{},"body":{"components/ParameterRetrieverComponent.html":{},"components/TabNavButtonComponent.html":{}}}],["geturlparameter(param",{"_index":2738,"title":{},"body":{"components/ParameterRetrieverComponent.html":{},"components/TabNavButtonComponent.html":{}}}],["geturlparameter(param:string",{"_index":576,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getuserlookupurl(searchsource",{"_index":1872,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getusers",{"_index":3619,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["getvalue(data",{"_index":1779,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["getversionlabel(attachment",{"_index":2686,"title":{},"body":{"components/PDFListComponent.html":{}}}],["getworkflowsteps(name",{"_index":3012,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getworkspacetype",{"_index":3858,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["getworkspacetype(name",{"_index":3860,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["getworkspacetypes",{"_index":3859,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["git",{"_index":4774,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["github:itayadler/passport",{"_index":3925,"title":{},"body":{"dependencies.html":{}}}],["github:redbox",{"_index":3932,"title":{},"body":{"dependencies.html":{}}}],["github:shilob/moment",{"_index":3913,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":4333,"title":{},"body":{"license.html":{}}}],["given",{"_index":4263,"title":{},"body":{"license.html":{}}}],["gives",{"_index":4346,"title":{},"body":{"license.html":{}}}],["giving",{"_index":4086,"title":{},"body":{"license.html":{}}}],["global",{"_index":893,"title":{},"body":{"injectables/ConfigService.html":{}}}],["globally",{"_index":4775,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["glyphicon",{"_index":1111,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["gnu",{"_index":1165,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["google",{"_index":2474,"title":{},"body":{"components/MapComponent.html":{}}}],["googlehybrid",{"_index":2443,"title":{},"body":{"components/MapComponent.html":{}}}],["googlemaps",{"_index":2434,"title":{},"body":{"components/MapComponent.html":{}}}],["governed",{"_index":4478,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":4081,"title":{},"body":{"license.html":{}}}],["grant",{"_index":4499,"title":{},"body":{"license.html":{}}}],["grant_number_name",{"_index":4890,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["granted",{"_index":4255,"title":{},"body":{"license.html":{}}}],["grants",{"_index":4552,"title":{},"body":{"license.html":{}}}],["gratis",{"_index":4075,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4718,"title":{},"body":{"license.html":{}}}],["gridfs",{"_index":3950,"title":{},"body":{"dependencies.html":{}}}],["gridfs.git",{"_index":3952,"title":{},"body":{"dependencies.html":{}}}],["group",{"_index":156,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["group'},{'name",{"_index":324,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["group.component",{"_index":3389,"title":{},"body":{"modules/SharedModule.html":{}}}],["group.component.ts",{"_index":2056,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["group.component.ts:118",{"_index":2086,"title":{},"body":{"components/GenericGroupComponent.html":{}}}],["group.component.ts:232",{"_index":3297,"title":{},"body":{"components/RepeatableGroupComponent.html":{}}}],["group.controls[control1",{"_index":3578,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["group.controls[control1].value",{"_index":3599,"title":{},"body":{"interfaces/UserForm.html":{}}}],["group.controls[control2",{"_index":3580,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["group[this.groupname",{"_index":1340,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["group[this.groupname].addcontrol(this.name",{"_index":1341,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["group[this.name",{"_index":1343,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["groupclasses",{"_index":2072,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["grouping",{"_index":2057,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["groupname",{"_index":2071,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["grp",{"_index":1307,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["grunt",{"_index":3898,"title":{},"body":{"dependencies.html":{}}}],["guarantee",{"_index":4046,"title":{},"body":{"license.html":{}}}],["gui",{"_index":4747,"title":{},"body":{"license.html":{}}}],["guide",{"_index":4766,"title":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["h1",{"_index":4933,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["h1')).gettext",{"_index":638,"title":{},"body":{"classes/AngularPage.html":{}}}],["hack",{"_index":1733,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["handle",{"_index":1814,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["handlechange",{"_index":2089,"title":{},"body":{"components/HiddenValueComponent.html":{}}}],["handlechange(value",{"_index":585,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["handler",{"_index":70,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["handler:any",{"_index":2121,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["handles",{"_index":892,"title":{},"body":{"injectables/ConfigService.html":{}}}],["happenings",{"_index":749,"title":{},"body":{"components/AsynchComponent.html":{}}}],["har",{"_index":3901,"title":{},"body":{"dependencies.html":{}}}],["harvest",{"_index":5000,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["hasactive",{"_index":3105,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["hasactiverefiners",{"_index":3104,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["hasclearbutton",{"_index":1511,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["haserror",{"_index":1429,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["hasfilename",{"_index":2646,"title":{},"body":{"components/PDFListComponent.html":{}}}],["hasfilename:boolean=false",{"_index":2721,"title":{},"body":{"components/PDFListComponent.html":{}}}],["hasfilteredresults",{"_index":3243,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["hasinit",{"_index":2657,"title":{},"body":{"components/PDFListComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["hasloaded",{"_index":1526,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["hasnamematch",{"_index":2340,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["hasrequirederror",{"_index":143,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["hasrequirederror():boolean",{"_index":426,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["hasrole",{"_index":2299,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["hasrole:boolean",{"_index":2302,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["hasvalue",{"_index":3189,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["hasvalue(data",{"_index":3699,"title":{},"body":{"injectables/UtilityService.html":{}}}],["having",{"_index":4272,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["header",{"_index":2189,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["header.label",{"_index":3228,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["headers",{"_index":856,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["headers(headersobj",{"_index":880,"title":{},"body":{"classes/BaseService.html":{}}}],["headersobj",{"_index":65,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["headersobj['content",{"_index":883,"title":{},"body":{"classes/BaseService.html":{}}}],["headersobj['x",{"_index":881,"title":{},"body":{"classes/BaseService.html":{}}}],["heading",{"_index":4885,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["hello",{"_index":4981,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["help",{"_index":194,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["helpshow",{"_index":133,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["here",{"_index":5032,"title":{},"body":{"additional-documentation/rest-api-documentation.html":{}}}],["hereafter",{"_index":4591,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":279,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["hiddenusers",{"_index":2214,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["hiddenvaluecomponent",{"_index":278,"title":{"components/HiddenValueComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["hideconfirmdlg",{"_index":538,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["hideeditnotes",{"_index":2784,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["highly",{"_index":4824,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["holder",{"_index":4527,"title":{},"body":{"license.html":{}}}],["holders",{"_index":4483,"title":{},"body":{"license.html":{}}}],["hook",{"_index":3942,"title":{},"body":{"dependencies.html":{}}}],["hope",{"_index":1183,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["hosts",{"_index":4401,"title":{},"body":{"license.html":{}}}],["household",{"_index":4421,"title":{},"body":{"license.html":{}}}],["html",{"_index":239,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["htmlraw",{"_index":388,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["htmlraw'},{'name",{"_index":281,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["htmlrawcomponent",{"_index":280,"title":{"components/HtmlRawComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["http",{"_index":19,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["http://fsf.org",{"_index":4029,"title":{},"body":{"license.html":{}}}],["http://i18next.com/docs/options",{"_index":3513,"title":{},"body":{"injectables/TranslationService.html":{}}}],["http://localhost:1500/default/rdmp/images/leaflet/marker",{"_index":2460,"title":{},"body":{"components/MapComponent.html":{}}}],["http://localhost:9000/redbox",{"_index":4995,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["http://localhost:9001/mint",{"_index":4997,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["http://www.gnu.org/licenses",{"_index":4730,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/philosophy/why",{"_index":4758,"title":{},"body":{"license.html":{}}}],["http://www.qcif.edu.au",{"_index":1164,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["httpmodule",{"_index":942,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["https://bootstrap",{"_index":607,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["https://dev",{"_index":5021,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["https://github.com/marcelomedina10/skipper",{"_index":3951,"title":{},"body":{"dependencies.html":{}}}],["https://github.com/nkalinov/ng2",{"_index":605,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["https://github.com/redbox",{"_index":4786,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["https://rapid.aaf.edu.au",{"_index":5026,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["https://rapid.test.aaf.edu.au",{"_index":5019,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["https://rapid.test.aaf.edu.au/jwt/authnrequest/research/xxxxxx",{"_index":5014,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["hybrid",{"_index":2476,"title":{},"body":{"components/MapComponent.html":{}}}],["hypothetical",{"_index":4744,"title":{},"body":{"license.html":{}}}],["i.e",{"_index":3585,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["i18next",{"_index":3382,"title":{},"body":{"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"dependencies.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["i:number",{"_index":1495,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["i=0",{"_index":2639,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["i=0;i",{"_index":1016,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["i=1",{"_index":1421,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["icon",{"_index":1578,"title":{},"body":{"components/ExportFormComponent.html":{},"components/MapComponent.html":{}}}],["icon.png",{"_index":2461,"title":{},"body":{"components/MapComponent.html":{}}}],["icon.png\",shadowurl:\"http://localhost:1500/default/rdmp/images/leaflet/marker",{"_index":2414,"title":{},"body":{"components/MapComponent.html":{}}}],["iconanchor",{"_index":2457,"title":{},"body":{"components/MapComponent.html":{}}}],["iconsize",{"_index":2454,"title":{},"body":{"components/MapComponent.html":{}}}],["iconurl",{"_index":2459,"title":{},"body":{"components/MapComponent.html":{}}}],["id",{"_index":2200,"title":{},"body":{"classes/LoginResult.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["id:r.id",{"_index":2298,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["idea",{"_index":4728,"title":{},"body":{"license.html":{}}}],["identifiable",{"_index":4618,"title":{},"body":{"license.html":{}}}],["idx",{"_index":475,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(!_.isstring(this.value",{"_index":1711,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(!editable",{"_index":2941,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["if(!this.field.editmode",{"_index":497,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(!value",{"_index":3818,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["if(_.isempty(this.searchfieldstr",{"_index":1921,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(_.isstring(data",{"_index":1761,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(args",{"_index":3469,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["if(b",{"_index":453,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(compiled",{"_index":1094,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["if(data",{"_index":1845,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(disabledexpression",{"_index":1083,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["if(fieldclass",{"_index":1956,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["if(jquery(this.fieldelement.nativeelement).prop('disabled",{"_index":3774,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["if(layerindex",{"_index":2542,"title":{},"body":{"components/MapComponent.html":{}}}],["if(lower",{"_index":1920,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(matchingexpression.test(attachment.label",{"_index":2708,"title":{},"body":{"components/PDFListComponent.html":{}}}],["if(oid",{"_index":2696,"title":{},"body":{"components/PDFListComponent.html":{},"components/RecordPermissionsComponent.html":{}}}],["if(paramvalue",{"_index":624,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(response['status",{"_index":3803,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["if(state",{"_index":989,"title":{},"body":{"injectables/DashboardService.html":{}}}],["if(this.field.allexpanded",{"_index":502,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(this.field.latestpdf",{"_index":2712,"title":{},"body":{"components/PDFListComponent.html":{}}}],["if(this.field.storelabelonly",{"_index":1898,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(this.field.storevalueandlabel",{"_index":452,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(this.fieldmap",{"_index":3265,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["if(this.importdatastring.indexof",{"_index":2563,"title":{},"body":{"components/MapComponent.html":{}}}],["if(this.importdatastring.length",{"_index":2562,"title":{},"body":{"components/MapComponent.html":{}}}],["if(this.isembedded",{"_index":1887,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["if(typeof",{"_index":1950,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["ignorenotbefore",{"_index":5023,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["implement",{"_index":4224,"title":{},"body":{"license.html":{}}}],["implementation",{"_index":4225,"title":{},"body":{"license.html":{}}}],["implements",{"_index":620,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["implied",{"_index":1188,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["import",{"_index":79,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["important",{"_index":3512,"title":{},"body":{"injectables/TranslationService.html":{}}}],["importdata",{"_index":2561,"title":{},"body":{"components/MapComponent.html":{}}}],["importdatastring",{"_index":2429,"title":{},"body":{"components/MapComponent.html":{}}}],["importfailed:boolean",{"_index":2431,"title":{},"body":{"components/MapComponent.html":{}}}],["importing",{"_index":4584,"title":{},"body":{"license.html":{}}}],["imports",{"_index":936,"title":{},"body":{"modules/DashboardModule.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{}}}],["impose",{"_index":4508,"title":{},"body":{"license.html":{}}}],["imposed",{"_index":4646,"title":{},"body":{"license.html":{}}}],["inability",{"_index":4695,"title":{},"body":{"license.html":{}}}],["inaccurate",{"_index":4697,"title":{},"body":{"license.html":{}}}],["inc",{"_index":1200,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["incidental",{"_index":4692,"title":{},"body":{"license.html":{}}}],["include",{"_index":3906,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["included",{"_index":4219,"title":{},"body":{"license.html":{}}}],["includes",{"_index":4176,"title":{},"body":{"license.html":{}}}],["including",{"_index":4017,"title":{},"body":{"index.html":{},"license.html":{}}}],["inclusion",{"_index":4363,"title":{},"body":{"license.html":{}}}],["incompatible",{"_index":4103,"title":{},"body":{"license.html":{}}}],["incorporating",{"_index":4752,"title":{},"body":{"license.html":{}}}],["incorporation",{"_index":4424,"title":{},"body":{"license.html":{}}}],["indemnification",{"_index":4504,"title":{},"body":{"license.html":{}}}],["independent",{"_index":4351,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["index)}.pdf",{"_index":2727,"title":{},"body":{"components/PDFListComponent.html":{}}}],["index+1",{"_index":2691,"title":{},"body":{"components/PDFListComponent.html":{}}}],["index:i",{"_index":2870,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["index:number=0",{"_index":2722,"title":{},"body":{"components/PDFListComponent.html":{}}}],["index]=\"i",{"_index":1439,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["indicate",{"_index":4556,"title":{},"body":{"license.html":{}}}],["indicates",{"_index":3531,"title":{},"body":{"injectables/TranslationService.html":{}}}],["indicating",{"_index":4518,"title":{},"body":{"license.html":{}}}],["individual",{"_index":4361,"title":{},"body":{"license.html":{}}}],["individuals",{"_index":4110,"title":{},"body":{"license.html":{}}}],["industrial",{"_index":4437,"title":{},"body":{"license.html":{}}}],["inexact",{"_index":4880,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inform",{"_index":4407,"title":{},"body":{"license.html":{}}}],["information",{"_index":2395,"title":{},"body":{"components/MapComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["infrastructure",{"_index":1162,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"index.html":{}}}],["infringe",{"_index":4554,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":4581,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":4168,"title":{},"body":{"license.html":{}}}],["inherited",{"_index":50,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["init",{"_index":1712,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/installation-guide.html":{}}}],["init.title",{"_index":1714,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["init['title",{"_index":1717,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["init[this.stringlabeltofield",{"_index":1718,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["initconfig",{"_index":898,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initial",{"_index":1896,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["initialised",{"_index":2428,"title":{},"body":{"components/MapComponent.html":{}}}],["initialized",{"_index":918,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initialvalue",{"_index":1645,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["initiate",{"_index":4574,"title":{},"body":{"license.html":{}}}],["initiative",{"_index":4014,"title":{},"body":{"index.html":{}}}],["initlookupdata",{"_index":1732,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["initmap(map",{"_index":2518,"title":{},"body":{"components/MapComponent.html":{}}}],["initsubject",{"_index":20,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["initsubs",{"_index":1512,"title":{},"body":{"components/ExportFormComponent.html":{},"components/ManageRolesComponent.html":{}}}],["inittranslator",{"_index":1527,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"injectables/TranslationService.html":{}}}],["inittranslator(translationservice",{"_index":1546,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["inject",{"_index":80,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SortComponent.html":{},"pipes/StringTemplatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inject(completerservice",{"_index":1946,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["inject(configservice",{"_index":99,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inject(document",{"_index":2162,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["inject(fieldcontrolmetaservice",{"_index":2039,"title":{},"body":{"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["inject(formbuilder",{"_index":2161,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["inject(http",{"_index":98,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inject(location",{"_index":1571,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["inject(rolesservice",{"_index":2258,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["inject(translationservice",{"_index":100,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"injectables/ReportService.html":{}}}],["inject(usersimpleservice",{"_index":2160,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["inject(utilityservice",{"_index":1947,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["inject(vocabfieldlookupservice",{"_index":1945,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["injectable",{"_index":0,"title":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["injectablebackendconfigfactory",{"_index":3538,"title":{},"body":{"injectables/TranslationService.html":{}}}],["injectablecustomlanguagedetectorservice",{"_index":3517,"title":{},"body":{"injectables/TranslationService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{},"overview.html":{}}}],["injector",{"_index":134,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["injector:any",{"_index":215,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["inline",{"_index":2065,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["input",{"_index":380,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["inputs",{"_index":145,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["inside",{"_index":4099,"title":{},"body":{"license.html":{}}}],["inst",{"_index":1967,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.appconfig",{"_index":1971,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.compclass",{"_index":1974,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.fields",{"_index":1986,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.utilityservice",{"_index":1969,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["install",{"_index":4024,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["installation",{"_index":4441,"title":{"additional-documentation/installation-guide.html":{}},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["installed",{"_index":4459,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["instance",{"_index":4993,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["instantiates",{"_index":1060,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["instead",{"_index":4757,"title":{},"body":{"license.html":{}}}],["institutional",{"_index":3997,"title":{},"body":{"index.html":{}}}],["institutions",{"_index":3982,"title":{},"body":{"index.html":{}}}],["intact",{"_index":4326,"title":{},"body":{"license.html":{}}}],["integrating",{"_index":4994,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["integration",{"_index":4982,"title":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["intended",{"_index":1734,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["intention",{"_index":4315,"title":{},"body":{"license.html":{}}}],["interaction",{"_index":4186,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["interactive",{"_index":4189,"title":{},"body":{"license.html":{}}}],["interchange",{"_index":4375,"title":{},"body":{"license.html":{}}}],["interest",{"_index":4569,"title":{},"body":{"license.html":{}}}],["interface",{"_index":3566,"title":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["interfaces",{"_index":3568,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"license.html":{},"overview.html":{}}}],["interfered",{"_index":4449,"title":{},"body":{"license.html":{}}}],["internationalisation",{"_index":4934,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["interpretation",{"_index":4704,"title":{},"body":{"license.html":{}}}],["interpreter",{"_index":4233,"title":{},"body":{"license.html":{}}}],["intimate",{"_index":4247,"title":{},"body":{"license.html":{}}}],["introduction",{"_index":4845,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["invalid",{"_index":2171,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["invalidate",{"_index":4347,"title":{},"body":{"license.html":{}}}],["invalidemail",{"_index":3597,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["io",{"_index":680,"title":{},"body":{"components/AsynchComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["io.socket.get(`${this.brandingandportalurl}/asynch/subscribe/${oid",{"_index":3026,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["io.socket.on('start",{"_index":791,"title":{},"body":{"components/AsynchComponent.html":{}}}],["io.socket.on('stop",{"_index":793,"title":{},"body":{"components/AsynchComponent.html":{}}}],["io.socket.on('update",{"_index":795,"title":{},"body":{"components/AsynchComponent.html":{}}}],["irrevocable",{"_index":4256,"title":{},"body":{"license.html":{}}}],["isdisabled",{"_index":138,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["isembedded",{"_index":148,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["isempty",{"_index":2886,"title":{},"body":{"classes/RbValidator.html":{}}}],["isempty(control",{"_index":2888,"title":{},"body":{"classes/RbValidator.html":{}}}],["isgettingattachments",{"_index":2765,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["ishelp",{"_index":1109,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["ishelp.length",{"_index":1114,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["islistening",{"_index":644,"title":{},"body":{"components/AsynchComponent.html":{}}}],["islistening:boolean",{"_index":753,"title":{},"body":{"components/AsynchComponent.html":{}}}],["isloading",{"_index":1518,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["islogindisabled",{"_index":2141,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["isn't",{"_index":2392,"title":{},"body":{"components/MapComponent.html":{}}}],["isradio",{"_index":461,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["isready",{"_index":3495,"title":{},"body":{"injectables/TranslationService.html":{}}}],["isready(handler",{"_index":3499,"title":{},"body":{"injectables/TranslationService.html":{}}}],["issearching",{"_index":3190,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["issuer",{"_index":5018,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["isvalarray",{"_index":457,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["isvalid",{"_index":1042,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["isvisible",{"_index":583,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["it'll",{"_index":2446,"title":{},"body":{"components/MapComponent.html":{}}}],["it's",{"_index":3511,"title":{},"body":{"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["item",{"_index":1810,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RelatedObjectDataComponent.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["item.dateupdated",{"_index":2736,"title":{},"body":{"components/PDFListComponent.html":{}}}],["item.trim",{"_index":3756,"title":{},"body":{"injectables/UtilityService.html":{}}}],["item[column.property",{"_index":3232,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["item[column.property]['label",{"_index":3231,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["item[column.property][\\'label",{"_index":3239,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["item[fieldname",{"_index":1835,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["item[srcfld",{"_index":1838,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["item[targetfld",{"_index":1839,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["itemarray",{"_index":1806,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["itemresult",{"_index":3713,"title":{},"body":{"injectables/UtilityService.html":{}}}],["itemresult}${_.isempty(itemresult",{"_index":3720,"title":{},"body":{"injectables/UtilityService.html":{}}}],["items",{"_index":1014,"title":{},"body":{"injectables/DashboardService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"additional-documentation/configuration-guide.html":{}}}],["itself",{"_index":4463,"title":{},"body":{"license.html":{}}}],["jit",{"_index":4025,"title":{},"body":{"index.html":{}}}],["joinarray",{"_index":3671,"title":{},"body":{"injectables/UtilityService.html":{}}}],["joinarray(data",{"_index":3701,"title":{},"body":{"injectables/UtilityService.html":{}}}],["jquery",{"_index":401,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"modules/ExportModule.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"modules/RecordSearchModule.html":{},"components/RepeatableTextfieldComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{}}}],["jquery(\"#loading\").addclass(\"hidden",{"_index":2115,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["jquery(\"#loading\").removeclass(\"hidden",{"_index":2114,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["jquery('#mymodal').modal('hide",{"_index":2317,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["jquery('a[data",{"_index":562,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).collapse('hide",{"_index":503,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).collapse('show",{"_index":504,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).on('hidden.bs.collapse",{"_index":495,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).on('shown.bs.collapse",{"_index":489,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.datetime.iddatepicker}`).attr('aria",{"_index":613,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.field.name}_confirmation`).modal('hide",{"_index":539,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.field.name}_confirmation`).modal('show",{"_index":537,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.field.name}_editnotes`).modal('hide",{"_index":2872,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["jquery(`#${this.field.name}_editnotes`).modal('show",{"_index":2871,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["jquery(buttonelem).find(\"span[class='glyphicon",{"_index":1110,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["jquery(this.fieldelement.nativeelement.parentelement",{"_index":1093,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["js",{"_index":3885,"title":{},"body":{"dependencies.html":{}}}],["jsclient",{"_index":882,"title":{},"body":{"classes/BaseService.html":{}}}],["json",{"_index":2060,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["json.stringify(this.field.criteria).replace(/@oid/g",{"_index":775,"title":{},"body":{"components/AsynchComponent.html":{}}}],["jsonwebtokenoptions",{"_index":5017,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["june",{"_index":1170,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["jwt",{"_index":3924,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":4325,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["kept",{"_index":4937,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["kernel",{"_index":4228,"title":{},"body":{"license.html":{}}}],["key",{"_index":1087,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/RbValidator.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["keys",{"_index":2062,"title":{},"body":{"components/GenericGroupComponent.html":{},"classes/LoadableComponent.html":{},"components/RepeatableGroupComponent.html":{},"license.html":{}}}],["keywords",{"_index":4892,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["kind",{"_index":4182,"title":{},"body":{"license.html":{}}}],["kinds",{"_index":4039,"title":{},"body":{"license.html":{}}}],["kml",{"_index":2586,"title":{},"body":{"components/MapComponent.html":{}}}],["know",{"_index":4061,"title":{},"body":{"license.html":{}}}],["knowingly",{"_index":4607,"title":{},"body":{"license.html":{}}}],["knowledge",{"_index":4615,"title":{},"body":{"license.html":{}}}],["l",{"_index":737,"title":{},"body":{"components/AsynchComponent.html":{},"components/MapComponent.html":{}}}],["l.featuregroup",{"_index":2433,"title":{},"body":{"components/MapComponent.html":{}}}],["l.featuregroup(that.layers).togeojson",{"_index":2531,"title":{},"body":{"components/MapComponent.html":{}}}],["l.featuregroup(this.layers).togeojson",{"_index":2570,"title":{},"body":{"components/MapComponent.html":{}}}],["l.geojson(json.parse(this.importdatastring",{"_index":2568,"title":{},"body":{"components/MapComponent.html":{}}}],["l.geojson(this.layergeojson",{"_index":2552,"title":{},"body":{"components/MapComponent.html":{}}}],["l.icon",{"_index":2453,"title":{},"body":{"components/MapComponent.html":{}}}],["l.latlng",{"_index":2470,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z",{"_index":2435,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z",{"_index":2444,"title":{},"body":{"components/MapComponent.html":{}}}],["label",{"_index":183,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["label:'any",{"_index":2247,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["label:role.name",{"_index":2268,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["label]=\"'move",{"_index":1458,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["label]=\"'remove",{"_index":1466,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["labels",{"_index":4876,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["language",{"_index":3519,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["languages",{"_index":3532,"title":{},"body":{"injectables/TranslationService.html":{}}}],["larger",{"_index":4355,"title":{},"body":{"license.html":{}}}],["last",{"_index":733,"title":{},"body":{"components/AsynchComponent.html":{},"injectables/FieldControlMetaService.html":{}}}],["lastupdatelabel",{"_index":693,"title":{},"body":{"components/AsynchComponent.html":{}}}],["later",{"_index":1181,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["latest.html#options",{"_index":2582,"title":{},"body":{"components/MapComponent.html":{}}}],["latestpdf",{"_index":2660,"title":{},"body":{"components/PDFListComponent.html":{}}}],["latlng",{"_index":2406,"title":{},"body":{"components/MapComponent.html":{}}}],["latlng([108.94248962402342",{"_index":2380,"title":{},"body":{"components/MapComponent.html":{}}}],["latter",{"_index":2574,"title":{},"body":{"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["law",{"_index":4170,"title":{},"body":{"license.html":{}}}],["laws",{"_index":4147,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":4579,"title":{},"body":{"license.html":{}}}],["layer",{"_index":2527,"title":{},"body":{"components/MapComponent.html":{}}}],["layer._leaflet_id",{"_index":2541,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.addto(that.drawnitems",{"_index":2555,"title":{},"body":{"components/MapComponent.html":{}}}],["layergeojson",{"_index":2430,"title":{},"body":{"components/MapComponent.html":{}}}],["layerindex",{"_index":2537,"title":{},"body":{"components/MapComponent.html":{}}}],["layers",{"_index":2396,"title":{},"body":{"components/MapComponent.html":{}}}],["layers.eachlayer(function(layer",{"_index":2536,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol",{"_index":2472,"title":{},"body":{"components/MapComponent.html":{}}}],["layout",{"_index":4905,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["layouts",{"_index":2508,"title":{},"body":{"components/MapComponent.html":{}}}],["lays",{"_index":4929,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["ld",{"_index":4852,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["leads",{"_index":4012,"title":{},"body":{"index.html":{}}}],["leaf",{"_index":2466,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet",{"_index":2386,"title":{},"body":{"components/MapComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["leaflet's",{"_index":2393,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet.draw",{"_index":2370,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet.js",{"_index":2367,"title":{},"body":{"components/MapComponent.html":{}}}],["leafletdrawmodule",{"_index":3385,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletdrawmodule.forroot",{"_index":3401,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletmodule",{"_index":3383,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletmodule.forroot",{"_index":3400,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletoptions",{"_index":2377,"title":{},"body":{"components/MapComponent.html":{}}}],["leave",{"_index":527,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["left",{"_index":1254,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["legal",{"_index":4087,"title":{},"body":{"license.html":{}}}],["legend",{"_index":238,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"components/TreeNodeCheckboxComponent.html":{},"modules/UserProfileModule.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["lesser",{"_index":4756,"title":{},"body":{"license.html":{}}}],["let's",{"_index":2719,"title":{},"body":{"components/PDFListComponent.html":{}}}],["lets",{"_index":3775,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["lgpl.html",{"_index":4759,"title":{},"body":{"license.html":{}}}],["liability",{"_index":4486,"title":{},"body":{"license.html":{}}}],["liable",{"_index":4167,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":4217,"title":{},"body":{"license.html":{}}}],["library",{"_index":4415,"title":{},"body":{"license.html":{}}}],["license",{"_index":1167,"title":{"license.html":{}},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["licensed",{"_index":4151,"title":{},"body":{"license.html":{}}}],["licensee",{"_index":4152,"title":{},"body":{"license.html":{}}}],["licensees",{"_index":4154,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":4041,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":4558,"title":{},"body":{"license.html":{}}}],["licensors",{"_index":4497,"title":{},"body":{"license.html":{}}}],["likewise",{"_index":4550,"title":{},"body":{"license.html":{}}}],["limit",{"_index":4316,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":4689,"title":{},"body":{"license.html":{}}}],["limited",{"_index":4678,"title":{},"body":{"license.html":{}}}],["limiting",{"_index":4485,"title":{},"body":{"license.html":{}}}],["line",{"_index":2613,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["lines",{"_index":2602,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["link",{"_index":283,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{}}}],["linked",{"_index":4244,"title":{},"body":{"license.html":{}}}],["linking",{"_index":4754,"title":{},"body":{"license.html":{}}}],["linkvaluecomponent",{"_index":282,"title":{"components/LinkValueComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["list",{"_index":1960,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"components/PDFListComponent.html":{},"modules/WorkspaceListModule.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["list'},{'name",{"_index":304,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["listens",{"_index":741,"title":{},"body":{"components/AsynchComponent.html":{}}}],["listentype",{"_index":684,"title":{},"body":{"components/AsynchComponent.html":{}}}],["literal",{"_index":2244,"title":{},"body":{"components/ManageRolesComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["litigation",{"_index":4575,"title":{},"body":{"license.html":{}}}],["lng",{"_index":3540,"title":{},"body":{"injectables/TranslationService.html":{}}}],["load",{"_index":3237,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["loadablecomponent",{"_index":1505,"title":{"classes/LoadableComponent.html":{}},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["loadablecomponent:30",{"_index":1564,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:31",{"_index":1567,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:32",{"_index":1566,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:33",{"_index":1565,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:41",{"_index":1547,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:48",{"_index":1552,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:53",{"_index":1541,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:59",{"_index":1545,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:63",{"_index":1549,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:68",{"_index":1551,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:76",{"_index":1544,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loadablecomponent:89",{"_index":1554,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["loaded",{"_index":135,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["loading",{"_index":1550,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{}}}],["loadpath",{"_index":3539,"title":{},"body":{"injectables/TranslationService.html":{}}}],["loadworkspacedetails(value",{"_index":3817,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["loc.location",{"_index":2861,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["loc.name",{"_index":2859,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["loc.type",{"_index":2857,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["local",{"_index":286,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["local_auth.component",{"_index":2197,"title":{},"body":{"modules/LocalAuthModule.html":{}}}],["localauth.html",{"_index":2140,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["localauthcomponent",{"_index":285,"title":{"components/LocalAuthComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["localauthmodule",{"_index":2191,"title":{"modules/LocalAuthModule.html":{}},"body":{"modules/LocalAuthModule.html":{},"modules.html":{},"overview.html":{}}}],["locale",{"_index":645,"title":{},"body":{"components/AsynchComponent.html":{},"injectables/TranslationService.html":{}}}],["locale_id",{"_index":3525,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locales/en/translation.json",{"_index":3534,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locales/pt/translation.json",{"_index":3536,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locales/{{lng}}/{{ns}}.json?ts=${ts",{"_index":3542,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locally",{"_index":3646,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["located",{"_index":4976,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["location",{"_index":264,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["location:\"\",notes",{"_index":2805,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["locationheader",{"_index":2820,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["locations",{"_index":2760,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["locationservice",{"_index":1533,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["locationstrategy",{"_index":1153,"title":{},"body":{"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/RecordSearchModule.html":{},"overview.html":{}}}],["locize",{"_index":4936,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["lodash",{"_index":95,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"dependencies.html":{}}}],["logger",{"_index":3956,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":2190,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["loginlocal",{"_index":3620,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["loginlocal(username",{"_index":3633,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["loginmessage",{"_index":2142,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["loginresult",{"_index":2158,"title":{"classes/LoginResult.html":{}},"body":{"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{}}}],["loginurl",{"_index":5013,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["long",{"_index":4269,"title":{},"body":{"license.html":{}}}],["lookupservice",{"_index":1651,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["lookupservicename",{"_index":1996,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["loose",{"_index":4854,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["loss",{"_index":4696,"title":{},"body":{"license.html":{}}}],["losses",{"_index":4698,"title":{},"body":{"license.html":{}}}],["lower",{"_index":1919,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["lowerterm",{"_index":1799,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["lt",{"_index":738,"title":{},"body":{"components/AsynchComponent.html":{}}}],["lucene",{"_index":1637,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"dependencies.html":{}}}],["luceneescapequery",{"_index":1636,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["ma",{"_index":1207,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["machine",{"_index":4366,"title":{},"body":{"license.html":{}}}],["made",{"_index":4450,"title":{},"body":{"license.html":{}}}],["mail",{"_index":4734,"title":{},"body":{"license.html":{}}}],["main",{"_index":1504,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["maintabid",{"_index":2478,"title":{},"body":{"components/MapComponent.html":{}}}],["maintain",{"_index":4397,"title":{},"body":{"license.html":{}}}],["maintained",{"_index":4008,"title":{},"body":{"index.html":{}}}],["major",{"_index":4222,"title":{},"body":{"license.html":{}}}],["make",{"_index":1136,"title":{},"body":{"components/DmpFieldComponent.html":{},"license.html":{}}}],["makes",{"_index":2896,"title":{},"body":{"classes/RbValidator.html":{},"license.html":{}}}],["making",{"_index":4160,"title":{},"body":{"license.html":{}}}],["manage",{"_index":289,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["manage_roles.component",{"_index":2355,"title":{},"body":{"modules/ManageRolesModule.html":{}}}],["manage_users.component",{"_index":2363,"title":{},"body":{"modules/ManageUsersModule.html":{}}}],["management",{"_index":3978,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["manageroles.html",{"_index":2211,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["managerolescomponent",{"_index":288,"title":{"components/ManageRolesComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["managerolesmodule",{"_index":2349,"title":{"modules/ManageRolesModule.html":{}},"body":{"modules/ManageRolesModule.html":{},"modules.html":{},"overview.html":{}}}],["manages",{"_index":4829,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["manageuserscomponent",{"_index":291,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["manageusersmodule",{"_index":2356,"title":{"modules/ManageUsersModule.html":{}},"body":{"modules/ManageUsersModule.html":{},"modules.html":{},"overview.html":{}}}],["managing",{"_index":4810,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["managment",{"_index":4867,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["mandatory",{"_index":4921,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["manner",{"_index":4592,"title":{},"body":{"license.html":{}}}],["manufacturer",{"_index":4101,"title":{},"body":{"license.html":{}}}],["map",{"_index":1051,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/MapComponent.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["map((res:any",{"_index":2957,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["map.${match.trim",{"_index":3459,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["map.component",{"_index":3376,"title":{},"body":{"modules/SharedModule.html":{}}}],["map.component.ts",{"_index":2365,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts:364",{"_index":2423,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts:366",{"_index":2422,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts:368",{"_index":2420,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts:374",{"_index":2421,"title":{},"body":{"components/MapComponent.html":{}}}],["map.expressions",{"_index":3455,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["map.fitbounds(this.drawnitems.getbounds",{"_index":2504,"title":{},"body":{"components/MapComponent.html":{}}}],["map.html",{"_index":2417,"title":{},"body":{"components/MapComponent.html":{}}}],["map.invalidatesize",{"_index":2503,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:deleted",{"_index":2547,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:deletestop",{"_index":2546,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:edited",{"_index":2533,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:editstop",{"_index":2545,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on(l.draw.event.created",{"_index":2524,"title":{},"body":{"components/MapComponent.html":{}}}],["mapcomponent",{"_index":293,"title":{"components/MapComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["mapdata",{"_index":2416,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdata'},{'name",{"_index":294,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["mapentry",{"_index":3730,"title":{},"body":{"injectables/UtilityService.html":{}}}],["mapentry.key",{"_index":3731,"title":{},"body":{"injectables/UtilityService.html":{}}}],["mapfield",{"_index":2373,"title":{},"body":{"components/MapComponent.html":{}}}],["mapping",{"_index":153,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["maps",{"_index":2475,"title":{},"body":{"components/MapComponent.html":{}}}],["march",{"_index":4642,"title":{},"body":{"license.html":{}}}],["markdown",{"_index":296,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["markdownmodule",{"_index":3361,"title":{},"body":{"modules/SharedModule.html":{}}}],["markdownmodule.forroot",{"_index":3402,"title":{},"body":{"modules/SharedModule.html":{}}}],["markdownservice",{"_index":3362,"title":{},"body":{"modules/SharedModule.html":{}}}],["markdowntextarea",{"_index":2593,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["markdowntextareacomponent",{"_index":295,"title":{"components/MarkdownTextAreaComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["marked",{"_index":4093,"title":{},"body":{"license.html":{}}}],["marker",{"_index":2452,"title":{},"body":{"components/MapComponent.html":{}}}],["marks",{"_index":4503,"title":{},"body":{"license.html":{}}}],["masks",{"_index":4149,"title":{},"body":{"license.html":{}}}],["master",{"_index":2482,"title":{},"body":{"components/MapComponent.html":{}}}],["masterdrawoptions",{"_index":2447,"title":{},"body":{"components/MapComponent.html":{}}}],["masterleafletoptions",{"_index":2467,"title":{},"body":{"components/MapComponent.html":{}}}],["match",{"_index":2275,"title":{},"body":{"components/ManageRolesComponent.html":{},"pipes/StringTemplatePipe.html":{},"injectables/UtilityService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["matches",{"_index":1808,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["matches.push(this.converttoitem(item",{"_index":1811,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["matching",{"_index":112,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["matchingexpression",{"_index":2699,"title":{},"body":{"components/PDFListComponent.html":{}}}],["matchingvaluesvalidator",{"_index":3971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchingvaluesvalidator(control1",{"_index":3575,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["material",{"_index":4276,"title":{},"body":{"license.html":{}}}],["materially",{"_index":4464,"title":{},"body":{"license.html":{}}}],["matt",{"_index":3687,"title":{},"body":{"injectables/UtilityService.html":{}}}],["maxzoom",{"_index":2436,"title":{},"body":{"components/MapComponent.html":{}}}],["md",{"_index":4924,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["meaning",{"_index":4511,"title":{},"body":{"license.html":{}}}],["meaningful",{"_index":1952,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["means",{"_index":1902,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["measure",{"_index":4295,"title":{},"body":{"license.html":{}}}],["measures",{"_index":4308,"title":{},"body":{"license.html":{}}}],["medium",{"_index":4322,"title":{},"body":{"license.html":{}}}],["meet",{"_index":4334,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["meeting",{"_index":3996,"title":{},"body":{"index.html":{}}}],["meets",{"_index":4205,"title":{},"body":{"license.html":{}}}],["member",{"_index":1141,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["menu",{"_index":4203,"title":{},"body":{"license.html":{}}}],["merchantability",{"_index":1189,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["mere",{"_index":4185,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2481,"title":{},"body":{"components/MapComponent.html":{}}}],["merge_logs",{"_index":4797,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["merging",{"_index":4566,"title":{},"body":{"license.html":{}}}],["message",{"_index":725,"title":{},"body":{"components/AsynchComponent.html":{},"classes/LoginResult.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["message_for_translate",{"_index":3515,"title":{},"body":{"injectables/TranslationService.html":{}}}],["messagelabel",{"_index":692,"title":{},"body":{"components/AsynchComponent.html":{}}}],["messages",{"_index":4911,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["met",{"_index":4258,"title":{},"body":{"license.html":{}}}],["meta",{"_index":3218,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["meta.component",{"_index":397,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["meta.component.ts",{"_index":3113,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["meta.component.ts:48",{"_index":3114,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["meta.service",{"_index":2038,"title":{},"body":{"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"modules/SharedModule.html":{}}}],["meta.service.ts",{"_index":1926,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:16",{"_index":1931,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:30",{"_index":1936,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:66",{"_index":1934,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:75",{"_index":1942,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:99",{"_index":1939,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta['status",{"_index":3220,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["meta['title",{"_index":3224,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["metadata",{"_index":122,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["method",{"_index":192,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["methods",{"_index":22,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["mint",{"_index":1755,"title":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"dependencies.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["mint/redbox",{"_index":4787,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["mintdataitem",{"_index":1831,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["mintlookupdataservice",{"_index":1757,"title":{"classes/MintLookupDataService.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["mintrelationshiplookup",{"_index":1917,"title":{"classes/MintRelationshipLookup.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["mintrelationshiplookup(url",{"_index":1801,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["minus",{"_index":1250,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["miscellaneous",{"_index":3969,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mismatched",{"_index":3583,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["misrepresentation",{"_index":4493,"title":{},"body":{"license.html":{}}}],["mlu",{"_index":1800,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["mlu.search(searchterm",{"_index":1802,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["mm",{"_index":1593,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["mobx",{"_index":3399,"title":{},"body":{"modules/SharedModule.html":{}}}],["mobxangularmodule",{"_index":3398,"title":{},"body":{"modules/SharedModule.html":{}}}],["modafter",{"_index":1513,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["modalmodule",{"_index":2362,"title":{},"body":{"modules/ManageUsersModule.html":{},"modules/UserProfileModule.html":{}}}],["modalmodule.forroot",{"_index":2364,"title":{},"body":{"modules/ManageUsersModule.html":{},"modules/UserProfileModule.html":{}}}],["modbefore",{"_index":1514,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["mode",{"_index":195,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["model",{"_index":151,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{}}}],["models",{"_index":92,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SortComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{}}}],["models.ts",{"_index":2199,"title":{},"body":{"classes/LoginResult.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["models.ts:10",{"_index":2749,"title":{},"body":{"classes/Plan.html":{}}}],["models.ts:11",{"_index":2746,"title":{},"body":{"classes/Plan.html":{},"classes/ReportResults.html":{}}}],["models.ts:12",{"_index":2747,"title":{},"body":{"classes/Plan.html":{},"classes/ReportResults.html":{}}}],["models.ts:13",{"_index":3320,"title":{},"body":{"classes/ReportResults.html":{}}}],["models.ts:14",{"_index":2745,"title":{},"body":{"classes/Plan.html":{},"classes/ReportResults.html":{}}}],["models.ts:21",{"_index":3559,"title":{},"body":{"classes/User.html":{}}}],["models.ts:22",{"_index":3565,"title":{},"body":{"classes/User.html":{}}}],["models.ts:23",{"_index":3561,"title":{},"body":{"classes/User.html":{}}}],["models.ts:24",{"_index":3564,"title":{},"body":{"classes/User.html":{}}}],["models.ts:25",{"_index":3560,"title":{},"body":{"classes/User.html":{}}}],["models.ts:26",{"_index":3558,"title":{},"body":{"classes/User.html":{}}}],["models.ts:27",{"_index":3563,"title":{},"body":{"classes/User.html":{}}}],["models.ts:28",{"_index":3562,"title":{},"body":{"classes/User.html":{}}}],["models.ts:3",{"_index":2756,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:31",{"_index":2201,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:32",{"_index":2202,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:33",{"_index":2204,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:34",{"_index":2203,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:37",{"_index":3333,"title":{},"body":{"classes/Role.html":{}}}],["models.ts:38",{"_index":3334,"title":{},"body":{"classes/Role.html":{}}}],["models.ts:39",{"_index":3335,"title":{},"body":{"classes/Role.html":{}}}],["models.ts:4",{"_index":2753,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:42",{"_index":3351,"title":{},"body":{"classes/SaveResult.html":{}}}],["models.ts:43",{"_index":3350,"title":{},"body":{"classes/SaveResult.html":{}}}],["models.ts:5",{"_index":2755,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:6",{"_index":2754,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:7",{"_index":3308,"title":{},"body":{"classes/Report.html":{}}}],["models.ts:9",{"_index":2748,"title":{},"body":{"classes/Plan.html":{}}}],["modification",{"_index":4143,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":4208,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1601,"title":{},"body":{"components/ExportFormComponent.html":{},"license.html":{}}}],["modifies",{"_index":4338,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1177,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["modifyeditors(records",{"_index":2970,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["modifying",{"_index":4174,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["module",{"_index":919,"title":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["module.id",{"_index":1507,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["moduleid",{"_index":1506,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["modules",{"_index":921,"title":{"modules.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"modules.html":{},"overview.html":{}}}],["moisbo",{"_index":3765,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["moises",{"_index":3681,"title":{},"body":{"injectables/UtilityService.html":{}}}],["moment",{"_index":85,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"dependencies.html":{}}}],["moment(a['dateupdated']).isbefore(moment(b['dateupdated",{"_index":2716,"title":{},"body":{"components/PDFListComponent.html":{}}}],["moment(attachment.dateupdated).format('lll",{"_index":2710,"title":{},"body":{"components/PDFListComponent.html":{}}}],["moment(this.field.latestpdf['dateupdated']).isbefore(moment(attachment.dateupdated",{"_index":2713,"title":{},"body":{"components/PDFListComponent.html":{}}}],["moment(this.modafter).format('yyyy",{"_index":1596,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["moment(this.modbefore).format('yyyy",{"_index":1592,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["moment(value).locale(this.locale).format(this.field.dateformat",{"_index":809,"title":{},"body":{"components/AsynchComponent.html":{}}}],["mongo",{"_index":3882,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":4771,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["more",{"_index":1194,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"injectables/FieldControlMetaService.html":{},"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["moreover",{"_index":4539,"title":{},"body":{"license.html":{}}}],["movedown(event",{"_index":1501,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["movedownbuttonclass",{"_index":1275,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["moveup(event",{"_index":1494,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["moveupbuttonclass",{"_index":1274,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["msg",{"_index":2236,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["mt0",{"_index":2438,"title":{},"body":{"components/MapComponent.html":{}}}],["mt1",{"_index":2439,"title":{},"body":{"components/MapComponent.html":{}}}],["mt2",{"_index":2440,"title":{},"body":{"components/MapComponent.html":{}}}],["mt3",{"_index":2441,"title":{},"body":{"components/MapComponent.html":{}}}],["much",{"_index":4812,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["mulholland",{"_index":3688,"title":{},"body":{"injectables/UtilityService.html":{}}}],["multiple",{"_index":1744,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["multivalue",{"_index":2629,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["multivaluefieldpipe",{"_index":2626,"title":{"pipes/MultivalueFieldPipe.html":{}},"body":{"pipes/MultivalueFieldPipe.html":{},"modules/ReportModule.html":{},"overview.html":{}}}],["n/a",{"_index":4954,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["name",{"_index":40,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["namefilter",{"_index":2333,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["namelabel",{"_index":687,"title":{},"body":{"components/AsynchComponent.html":{}}}],["names",{"_index":2061,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"license.html":{}}}],["national",{"_index":4005,"title":{},"body":{"index.html":{}}}],["nature",{"_index":4352,"title":{},"body":{"license.html":{}}}],["nav",{"_index":341,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["navigateto",{"_index":631,"title":{},"body":{"classes/AngularPage.html":{}}}],["nbsp",{"_index":626,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["nbsp;{{field.label",{"_index":374,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["nbsp;{{rolefilter.label",{"_index":2343,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["necessary",{"_index":4685,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["need",{"_index":4065,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["needed",{"_index":2385,"title":{},"body":{"components/MapComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"license.html":{}}}],["needs",{"_index":2387,"title":{},"body":{"components/MapComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["network",{"_index":4187,"title":{},"body":{"license.html":{}}}],["new",{"_index":865,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["newelem",{"_index":1374,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["newelem.componentreactors.push(this",{"_index":1487,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.createformmodel",{"_index":1380,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.margintop",{"_index":1482,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.setemptyvalue",{"_index":1377,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.setupeventhandlers",{"_index":1485,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.showheader",{"_index":1486,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.vocabfield.initialvalue",{"_index":1484,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem:any",{"_index":1481,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newformmodel",{"_index":1379,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newidx",{"_index":1496,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst",{"_index":1349,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst.postinit(value",{"_index":1367,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst[f",{"_index":1353,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst[f.field",{"_index":1363,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newlocation:any",{"_index":2803,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["newopts",{"_index":1346,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newopts.value",{"_index":1348,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newroles",{"_index":2314,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["newroles).then((saveres:saveresult",{"_index":2311,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["newroles.push(role.name",{"_index":2306,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["newroles:any",{"_index":2303,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["next",{"_index":4399,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["ng2",{"_index":170,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"dependencies.html":{}}}],["ng2completermodule",{"_index":3380,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngafterviewinit",{"_index":486,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ngclass]=\"field.cssclasses\">download",{"_index":2731,"title":{},"body":{"components/PDFListComponent.html":{}}}],["ngclass]=\"field.movedownbuttonclass",{"_index":1461,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngclass]=\"field.moveupbuttonclass",{"_index":1453,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngclass]=\"field.removebuttonclass",{"_index":1465,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngclass]=\"field.removebuttontextclass",{"_index":1464,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngcompleter",{"_index":1882,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["nginx",{"_index":4772,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["ngmodule",{"_index":937,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["ngonchanges",{"_index":1041,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["ngoninit",{"_index":560,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["ngstyle]=\"{'margin",{"_index":1454,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngx",{"_index":946,"title":{},"body":{"modules/DashboardModule.html":{},"classes/ExternalLookupDataService.html":{},"modules/ManageUsersModule.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"dependencies.html":{}}}],["nkdatetimemodule",{"_index":1611,"title":{},"body":{"modules/ExportModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{}}}],["node",{"_index":354,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/installation-guide.html":{}}}],["node_args",{"_index":4796,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["node_env",{"_index":4799,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["nodejs",{"_index":4768,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["noemptyingroup",{"_index":2887,"title":{},"body":{"classes/RbValidator.html":{}}}],["noemptyingroup(field",{"_index":2893,"title":{},"body":{"classes/RbValidator.html":{}}}],["noitems",{"_index":2752,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["non",{"_index":4138,"title":{},"body":{"license.html":{}}}],["noncommercially",{"_index":4387,"title":{},"body":{"license.html":{}}}],["noreply@redbox",{"_index":4969,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["noreply@redboxresearchdata.com.au",{"_index":4958,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["normal",{"_index":4220,"title":{},"body":{"license.html":{}}}],["normally",{"_index":4419,"title":{},"body":{"license.html":{}}}],["note",{"_index":1097,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/MapComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["notes",{"_index":2078,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["notesheader",{"_index":2821,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["nothing",{"_index":4551,"title":{},"body":{"license.html":{}}}],["notice",{"_index":4197,"title":{},"body":{"license.html":{}}}],["notices",{"_index":4192,"title":{},"body":{"license.html":{}}}],["notification",{"_index":4942,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["notifications",{"_index":4835,"title":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["notifies",{"_index":4540,"title":{},"body":{"license.html":{}}}],["notify",{"_index":4534,"title":{},"body":{"license.html":{}}}],["notinformfield",{"_index":672,"title":{},"body":{"components/AsynchComponent.html":{}}}],["notwithstanding",{"_index":4481,"title":{},"body":{"license.html":{}}}],["now",{"_index":602,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["npm",{"_index":4776,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["null",{"_index":60,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["null):formcontrol",{"_index":404,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["number",{"_index":168,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{}}}],["numbered",{"_index":4669,"title":{},"body":{"license.html":{}}}],["numeral",{"_index":3710,"title":{},"body":{"injectables/UtilityService.html":{},"dependencies.html":{}}}],["numeral:numeral",{"_index":3761,"title":{},"body":{"injectables/UtilityService.html":{}}}],["o._leaflet_id",{"_index":2540,"title":{},"body":{"components/MapComponent.html":{}}}],["o.oid",{"_index":3816,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["object",{"_index":961,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FieldControlService.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"injectables/UtilityService.html":{},"license.html":{}}}],["objects",{"_index":2776,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["obligate",{"_index":4653,"title":{},"body":{"license.html":{}}}],["obligated",{"_index":4403,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":4297,"title":{},"body":{"license.html":{}}}],["observable",{"_index":674,"title":{},"body":{"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{}}}],["observable.from(fieldarray).flatmap((f:any",{"_index":1994,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["observable.of(field",{"_index":1869,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["observable.of(fields",{"_index":2008,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["observable.of(form",{"_index":2924,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["observable.of(null",{"_index":2005,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["observable.of(permissions",{"_index":3141,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["observable.zip(...getrecordmetaobs",{"_index":3227,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["occasionally",{"_index":4386,"title":{},"body":{"license.html":{}}}],["occurring",{"_index":4548,"title":{},"body":{"license.html":{}}}],["occurs",{"_index":4108,"title":{},"body":{"license.html":{}}}],["offer",{"_index":4085,"title":{},"body":{"license.html":{}}}],["offered",{"_index":4409,"title":{},"body":{"license.html":{}}}],["offering",{"_index":4390,"title":{},"body":{"license.html":{}}}],["official",{"_index":4210,"title":{},"body":{"license.html":{}}}],["oid",{"_index":747,"title":{},"body":{"components/AsynchComponent.html":{},"components/PDFListComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["oid:string=null",{"_index":2938,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["omnivore",{"_index":2425,"title":{},"body":{"components/MapComponent.html":{}}}],["onapplyfilter",{"_index":3191,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["once",{"_index":4026,"title":{},"body":{"index.html":{},"additional-documentation/installation-guide.html":{}}}],["onchange(opt:any",{"_index":468,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["onclick",{"_index":375,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/SaveButtonComponent.html":{}}}],["onclick(event",{"_index":377,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["one",{"_index":2308,"title":{},"body":{"components/ManageRolesComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["onfilterchange",{"_index":2219,"title":{},"body":{"components/ManageRolesComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["onfilterchange(rolefilter",{"_index":2228,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["onfilterchange(rolefilter:any=null",{"_index":2323,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["oninit",{"_index":383,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["onitemselect",{"_index":1659,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["onkeyup(value",{"_index":1911,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["onlogin",{"_index":2144,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["onlogin(event",{"_index":2153,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["onlogin(event:any",{"_index":2173,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["onmapready(map",{"_index":2499,"title":{},"body":{"components/MapComponent.html":{}}}],["onremove",{"_index":1237,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["onremove(event",{"_index":1244,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["onremovebtnclick",{"_index":1242,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["onremovebtnclick)=\"removeelem($event[0",{"_index":1437,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["onselect(selected",{"_index":1891,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["onstart",{"_index":647,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onstart(progress",{"_index":657,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onstop",{"_index":648,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onstop(progress",{"_index":660,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onupdate",{"_index":649,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onupdate(progress",{"_index":662,"title":{},"body":{"components/AsynchComponent.html":{}}}],["onvalueloaded",{"_index":1360,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["onvalueupdate",{"_index":1359,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["open",{"_index":3781,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"index.html":{}}}],["openidconnect",{"_index":3927,"title":{},"body":{"dependencies.html":{}}}],["operate",{"_index":4701,"title":{},"body":{"license.html":{}}}],["operated",{"_index":4395,"title":{},"body":{"license.html":{}}}],["operating",{"_index":4229,"title":{},"body":{"license.html":{}}}],["operation",{"_index":4317,"title":{},"body":{"license.html":{}}}],["opt",{"_index":439,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["opt.label",{"_index":443,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["opt.value",{"_index":441,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["opt/redbox",{"_index":4783,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["opt:any",{"_index":3826,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["option",{"_index":1180,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/MapComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["option['label",{"_index":3797,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["option['name",{"_index":3799,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["optional",{"_index":42,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{}}}],["optionalemailvalidator",{"_index":3973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optionalemailvalidator(control",{"_index":3587,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":21,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"components/MapComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["options.parametername",{"_index":3116,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["options.value",{"_index":2494,"title":{},"body":{"components/MapComponent.html":{}}}],["options['addbuttonclass",{"_index":1290,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['addbuttontext",{"_index":1279,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['addbuttontextclass",{"_index":1287,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['cansort",{"_index":1445,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['cols",{"_index":2607,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["options['columns",{"_index":2671,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["options['columntitle",{"_index":3254,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["options['completionlabel",{"_index":727,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['completionratetype",{"_index":703,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['criteria",{"_index":746,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['datecompletedlabel",{"_index":716,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['dateformat",{"_index":736,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['datestartedlabel",{"_index":712,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['delegateerrorhandling",{"_index":1304,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['disabledexpression",{"_index":2768,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["options['disableeditafterselect",{"_index":1683,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['drawoptions",{"_index":2488,"title":{},"body":{"components/MapComponent.html":{}}}],["options['editnotescssclasses",{"_index":2832,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["options['fieldnames",{"_index":1676,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['forceclone",{"_index":1285,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['lastupdatelabel",{"_index":731,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['leafletoptions",{"_index":2480,"title":{},"body":{"components/MapComponent.html":{}}}],["options['listentype",{"_index":740,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['maintabid",{"_index":2496,"title":{},"body":{"components/MapComponent.html":{}}}],["options['messagelabel",{"_index":723,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['namelabel",{"_index":706,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['open",{"_index":3789,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["options['options",{"_index":3794,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["options['placeholder",{"_index":1680,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['provider",{"_index":1693,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['recordtype",{"_index":3255,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["options['relatedrecordid",{"_index":700,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['removebuttonclass",{"_index":1295,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['removebuttontext",{"_index":1281,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['removebuttontextclass",{"_index":1293,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['restricttoselection",{"_index":1689,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['resultarrayproperty",{"_index":1695,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['rows",{"_index":2604,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["options['savefirst",{"_index":3792,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["options['searchfields",{"_index":1670,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['showversioncolumn",{"_index":2678,"title":{},"body":{"components/PDFListComponent.html":{}}}],["options['skipclone",{"_index":1283,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['sourcetype",{"_index":1678,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['startedbylabel",{"_index":720,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['startswith",{"_index":2673,"title":{},"body":{"components/PDFListComponent.html":{}}}],["options['statuslabel",{"_index":709,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['storelabelonly",{"_index":1691,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['stringlabeltofield",{"_index":1685,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['tabid",{"_index":2492,"title":{},"body":{"components/MapComponent.html":{}}}],["options['targetaction",{"_index":218,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["options['tasktype",{"_index":744,"title":{},"body":{"components/AsynchComponent.html":{}}}],["options['titlecompleterdescription",{"_index":1674,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['titlefieldarr",{"_index":1668,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['titlefielddelim",{"_index":1672,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['titlefieldname",{"_index":1666,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['type",{"_index":2596,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["options['unflattenflag",{"_index":1698,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["options['useversionlabelforfilename",{"_index":2681,"title":{},"body":{"components/PDFListComponent.html":{}}}],["options['value",{"_index":222,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["options['versioncolumnlabelkey",{"_index":2685,"title":{},"body":{"components/PDFListComponent.html":{}}}],["options['versioncolumnvaluefield",{"_index":2683,"title":{},"body":{"components/PDFListComponent.html":{}}}],["options['vocabid",{"_index":1662,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["opts",{"_index":3177,"title":{},"body":{"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["opts.alwaysactive",{"_index":3042,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.name",{"_index":3034,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.title",{"_index":3036,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.type",{"_index":3037,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.typelabel",{"_index":3040,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.value",{"_index":3038,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["order",{"_index":2718,"title":{},"body":{"components/PDFListComponent.html":{},"license.html":{}}}],["organisation",{"_index":4858,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["organization",{"_index":4564,"title":{},"body":{"license.html":{}}}],["organizations",{"_index":4155,"title":{},"body":{"license.html":{}}}],["origdata",{"_index":1403,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["origdisabledexpr",{"_index":2766,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["origin",{"_index":4494,"title":{},"body":{"license.html":{}}}],["original",{"_index":4495,"title":{},"body":{"license.html":{}}}],["orm",{"_index":3945,"title":{},"body":{"dependencies.html":{}}}],["os",{"_index":4767,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["others",{"_index":4067,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":2898,"title":{},"body":{"classes/RbValidator.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["out",{"_index":934,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"license.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["output",{"_index":1260,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/RecordSearchRefinerComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{},"license.html":{}}}],["outputs",{"_index":1241,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/SortComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["outside",{"_index":4281,"title":{},"body":{"license.html":{}}}],["over",{"_index":4802,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["overlay",{"_index":4816,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["overridden",{"_index":2401,"title":{},"body":{"components/MapComponent.html":{}}}],["override",{"_index":4839,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["overview",{"_index":4762,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owasp",{"_index":3571,"title":{},"body":{"interfaces/UserForm.html":{}}}],["owasp.test(password",{"_index":3601,"title":{},"body":{"interfaces/UserForm.html":{}}}],["owned",{"_index":4588,"title":{},"body":{"license.html":{}}}],["owner'},{'name",{"_index":352,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["ownership",{"_index":3286,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["package",{"_index":3863,"title":{"dependencies.html":{}},"body":{}}],["packaged",{"_index":4345,"title":{},"body":{"license.html":{}}}],["packagetype",{"_index":972,"title":{},"body":{"injectables/DashboardService.html":{}}}],["packagetype=${packagetype",{"_index":1006,"title":{},"body":{"injectables/DashboardService.html":{}}}],["packaging",{"_index":4221,"title":{},"body":{"license.html":{}}}],["page",{"_index":528,"title":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["pagedata",{"_index":2252,"title":{},"body":{"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["pagenumber",{"_index":964,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["pagenumber:number",{"_index":3329,"title":{},"body":{"injectables/ReportService.html":{}}}],["pageurl",{"_index":577,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["pageurl.split",{"_index":580,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["paginationmodule",{"_index":3432,"title":{},"body":{"components/SortComponent.html":{}}}],["paginationmodule,tooltipmodule",{"_index":945,"title":{},"body":{"modules/DashboardModule.html":{},"modules/ReportModule.html":{},"modules/WorkspaceListModule.html":{}}}],["paginationmodule.forroot",{"_index":948,"title":{},"body":{"modules/DashboardModule.html":{},"modules/ReportModule.html":{},"modules/WorkspaceListModule.html":{}}}],["pair",{"_index":1771,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["pairs",{"_index":4925,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["paper",{"_index":4733,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":4524,"title":{},"body":{"license.html":{}}}],["paragraphs",{"_index":4599,"title":{},"body":{"license.html":{}}}],["param",{"_index":403,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"modules/WorkspaceListModule.html":{}}}],["parameter",{"_index":300,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["parametername",{"_index":581,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["parameterretrievercomponent",{"_index":299,"title":{"components/ParameterRetrieverComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["parameterretrieverfield",{"_index":621,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":3021,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{}}}],["params.filteractiverefinerswithnodata",{"_index":2985,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["params:any",{"_index":3019,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["params:object",{"_index":3330,"title":{},"body":{"injectables/ReportService.html":{}}}],["paramvalue",{"_index":622,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["parent",{"_index":3841,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["parent'},{'name",{"_index":367,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["parentelement",{"_index":1092,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["parentelement.find('*:disabled",{"_index":1105,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["parentelement.find('button').filter((index",{"_index":1107,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["parentelement.find('input').prop",{"_index":1106,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["parentfield",{"_index":55,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["parentid",{"_index":136,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["parse",{"_index":1909,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["parsedlayers",{"_index":2567,"title":{},"body":{"components/MapComponent.html":{}}}],["parsedlayers.eachlayer(layer",{"_index":2569,"title":{},"body":{"components/MapComponent.html":{}}}],["parsequerystr",{"_index":3157,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["parsequerystr(querystr",{"_index":3171,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["parsequerystr(querystr:string",{"_index":3085,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["part",{"_index":4157,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["particular",{"_index":1191,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["particularly",{"_index":4837,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["parties",{"_index":4184,"title":{},"body":{"license.html":{}}}],["parts",{"_index":4251,"title":{},"body":{"license.html":{}}}],["party",{"_index":4396,"title":{},"body":{"license.html":{}}}],["party's",{"_index":4567,"title":{},"body":{"license.html":{}}}],["pass",{"_index":3530,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["passport",{"_index":3921,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":2167,"title":{},"body":{"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"license.html":{}}}],["password:password",{"_index":3652,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["passwords",{"_index":3570,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["passwordstrength",{"_index":3603,"title":{},"body":{"interfaces/UserForm.html":{}}}],["passwordstrengthdetails",{"_index":3604,"title":{},"body":{"interfaces/UserForm.html":{}}}],["passwordstrengthvalidator",{"_index":3974,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordstrengthvalidator(control1",{"_index":3598,"title":{},"body":{"interfaces/UserForm.html":{},"miscellaneous/functions.html":{}}}],["patent",{"_index":4523,"title":{},"body":{"license.html":{}}}],["patents",{"_index":4126,"title":{},"body":{"license.html":{}}}],["path",{"_index":2808,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"injectables/UtilityService.html":{}}}],["pathlocationstrategy",{"_index":1155,"title":{},"body":{"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/RecordSearchModule.html":{},"overview.html":{}}}],["paths",{"_index":3693,"title":{},"body":{"injectables/UtilityService.html":{}}}],["pattern",{"_index":3965,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["payload",{"_index":1230,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["payload['from",{"_index":1232,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["payload['subject",{"_index":1231,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["payment",{"_index":4636,"title":{},"body":{"license.html":{}}}],["pdf",{"_index":303,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["pdfattachments",{"_index":2659,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component",{"_index":3369,"title":{},"body":{"modules/SharedModule.html":{}}}],["pdflist.component.ts",{"_index":2641,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component.ts:118",{"_index":2651,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component.ts:120",{"_index":2649,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component.ts:150",{"_index":2647,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.html",{"_index":2643,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflistcomponent",{"_index":302,"title":{"components/PDFListComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["pdflistfield",{"_index":2650,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdfs",{"_index":2642,"title":{},"body":{"components/PDFListComponent.html":{}}}],["peer",{"_index":4405,"title":{},"body":{"license.html":{}}}],["peers",{"_index":4408,"title":{},"body":{"license.html":{}}}],["pending",{"_index":2850,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["percent:'1.0",{"_index":820,"title":{},"body":{"components/AsynchComponent.html":{}}}],["percent:\\'1.0",{"_index":827,"title":{},"body":{"components/AsynchComponent.html":{}}}],["percentage",{"_index":704,"title":{},"body":{"components/AsynchComponent.html":{}}}],["percentpipe",{"_index":670,"title":{},"body":{"components/AsynchComponent.html":{}}}],["performance",{"_index":4681,"title":{},"body":{"license.html":{}}}],["performing",{"_index":4239,"title":{},"body":{"license.html":{}}}],["permanently",{"_index":4532,"title":{},"body":{"license.html":{}}}],["permission",{"_index":3146,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"license.html":{}}}],["permission.username}}{{permission.name}}{{permission.email",{"_index":3145,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["permissions",{"_index":3134,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"license.html":{}}}],["permissive",{"_index":4328,"title":{},"body":{"license.html":{}}}],["permit",{"_index":4362,"title":{},"body":{"license.html":{}}}],["permits",{"_index":4514,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":4031,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["perpetuity",{"_index":4454,"title":{},"body":{"license.html":{}}}],["personal",{"_index":4418,"title":{},"body":{"license.html":{}}}],["pertinent",{"_index":4651,"title":{},"body":{"license.html":{}}}],["physical",{"_index":2807,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"license.html":{}}}],["physical':\"physical",{"_index":2811,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["physically",{"_index":4384,"title":{},"body":{"license.html":{}}}],["pieces",{"_index":4060,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":2625,"title":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["pipes",{"_index":2627,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":2635,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["place",{"_index":4392,"title":{},"body":{"license.html":{}}}],["placed",{"_index":2384,"title":{},"body":{"components/MapComponent.html":{}}}],["placeholder",{"_index":1575,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["plain",{"_index":4966,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["plan",{"_index":90,"title":{"classes/Plan.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"components/PDFListComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SortComponent.html":{},"index.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["plan.dashboardtitle",{"_index":1017,"title":{},"body":{"injectables/DashboardService.html":{}}}],["plan.selected",{"_index":3276,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["plan.title",{"_index":1023,"title":{},"body":{"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["plan.title[0",{"_index":3278,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["plans",{"_index":980,"title":{},"body":{"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["plantable",{"_index":89,"title":{"classes/PlanTable.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SortComponent.html":{}}}],["platform",{"_index":3979,"title":{},"body":{"index.html":{}}}],["please",{"_index":2187,"title":{},"body":{"components/LocalAuthComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["plugin",{"_index":2371,"title":{},"body":{"components/MapComponent.html":{}}}],["plus",{"_index":1291,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["pm2",{"_index":4779,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["point",{"_index":5002,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["pointer",{"_index":4725,"title":{},"body":{"license.html":{}}}],["policies",{"_index":3998,"title":{},"body":{"index.html":{}}}],["popular",{"_index":3984,"title":{},"body":{"index.html":{}}}],["populatedatalocation(oid",{"_index":2851,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["populateformgroup",{"_index":2018,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["populateformgroup(fields",{"_index":2030,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["portal",{"_index":3649,"title":{},"body":{"injectables/UserSimpleService.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["portal's",{"_index":4831,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["portion",{"_index":4412,"title":{},"body":{"license.html":{}}}],["position",{"_index":2450,"title":{},"body":{"components/MapComponent.html":{}}}],["position:\"topright\",draw:{marker:{icon:icon({iconsize:[25,41],iconanchor:[13,41],iconurl:\"http://localhost:1500/default/rdmp/images/leaflet/marker",{"_index":2413,"title":{},"body":{"components/MapComponent.html":{}}}],["possesses",{"_index":4381,"title":{},"body":{"license.html":{}}}],["possession",{"_index":4342,"title":{},"body":{"license.html":{}}}],["possibility",{"_index":4703,"title":{},"body":{"license.html":{}}}],["possible",{"_index":4719,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["post",{"_index":4967,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["postinit(value",{"_index":1720,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["postinit(value:any",{"_index":2599,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["power",{"_index":4310,"title":{},"body":{"license.html":{}}}],["practical",{"_index":4042,"title":{},"body":{"license.html":{}}}],["practice",{"_index":4114,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["preamble",{"_index":4037,"title":{},"body":{"license.html":{}}}],["precise",{"_index":4139,"title":{},"body":{"license.html":{}}}],["precisely",{"_index":4111,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":4568,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":4207,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1773,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["present",{"_index":2520,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["presented",{"_index":4900,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["presents",{"_index":4201,"title":{},"body":{"license.html":{}}}],["preservation",{"_index":4490,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":4066,"title":{},"body":{"license.html":{}}}],["prevented",{"_index":4448,"title":{},"body":{"license.html":{}}}],["preview",{"_index":2591,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["previous",{"_index":2732,"title":{},"body":{"components/PDFListComponent.html":{},"license.html":{}}}],["previously",{"_index":2118,"title":{},"body":{"classes/LoadableComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["prevname",{"_index":2245,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["prevrole",{"_index":2257,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["prevrole:null",{"_index":2246,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["price",{"_index":4056,"title":{},"body":{"license.html":{}}}],["primarily",{"_index":4638,"title":{},"body":{"license.html":{}}}],["primary",{"_index":1299,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/ManageRolesComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["prior",{"_index":4535,"title":{},"body":{"license.html":{}}}],["private",{"_index":1036,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["problems",{"_index":4094,"title":{},"body":{"license.html":{}}}],["procedures",{"_index":4442,"title":{},"body":{"license.html":{}}}],["proceed",{"_index":5024,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["process",{"_index":4818,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["processes",{"_index":641,"title":{},"body":{"components/AsynchComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["procuring",{"_index":4625,"title":{},"body":{"license.html":{}}}],["produce",{"_index":4232,"title":{},"body":{"license.html":{}}}],["product",{"_index":4370,"title":{},"body":{"license.html":{}}}],["production",{"_index":4840,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["products",{"_index":4109,"title":{},"body":{"license.html":{}}}],["profile'},{'name",{"_index":358,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["prog",{"_index":806,"title":{},"body":{"components/AsynchComponent.html":{}}}],["prog.id",{"_index":807,"title":{},"body":{"components/AsynchComponent.html":{}}}],["program",{"_index":1172,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["program's",{"_index":4321,"title":{},"body":{"license.html":{}}}],["programmer",{"_index":4750,"title":{},"body":{"license.html":{}}}],["programming",{"_index":4214,"title":{},"body":{"license.html":{}}}],["programs",{"_index":4053,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":4716,"title":{},"body":{"license.html":{}}}],["progress",{"_index":659,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.completionrate",{"_index":778,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.currentidx",{"_index":779,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.id",{"_index":785,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.message",{"_index":822,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.name",{"_index":818,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.started_by",{"_index":824,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progress.targetidx",{"_index":780,"title":{},"body":{"components/AsynchComponent.html":{}}}],["progressarr",{"_index":696,"title":{},"body":{"components/AsynchComponent.html":{}}}],["prohibit",{"_index":4113,"title":{},"body":{"license.html":{}}}],["prohibiting",{"_index":4306,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":4632,"title":{},"body":{"license.html":{}}}],["project",{"_index":4738,"title":{},"body":{"license.html":{}}}],["prominent",{"_index":4204,"title":{},"body":{"license.html":{}}}],["prominently",{"_index":4195,"title":{},"body":{"license.html":{}}}],["promise",{"_index":49,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{}}}],["propagate",{"_index":4165,"title":{},"body":{"license.html":{}}}],["propagating",{"_index":4555,"title":{},"body":{"license.html":{}}}],["propagation",{"_index":4175,"title":{},"body":{"license.html":{}}}],["properties",{"_index":11,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["property",{"_index":524,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["proprietary",{"_index":4135,"title":{},"body":{"license.html":{}}}],["protect",{"_index":4063,"title":{},"body":{"license.html":{}}}],["protected",{"_index":12,"title":{},"body":{"injectables/ANDSService.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["protecting",{"_index":4105,"title":{},"body":{"license.html":{}}}],["protection",{"_index":4088,"title":{},"body":{"license.html":{}}}],["protocols",{"_index":4469,"title":{},"body":{"license.html":{}}}],["protractor",{"_index":635,"title":{},"body":{"classes/AngularPage.html":{}}}],["prove",{"_index":4682,"title":{},"body":{"license.html":{}}}],["provide",{"_index":1152,"title":{},"body":{"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/LocalAuthComponent.html":{},"modules/RecordSearchModule.html":{},"license.html":{},"overview.html":{}}}],["provided",{"_index":3686,"title":{},"body":{"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["provider",{"_index":1656,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["providers",{"_index":925,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["provides",{"_index":4015,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["provision",{"_index":4121,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":4529,"title":{},"body":{"license.html":{}}}],["provisioned",{"_index":4850,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["proxy",{"_index":4672,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["proxy's",{"_index":4673,"title":{},"body":{"license.html":{}}}],["pt",{"_index":3528,"title":{},"body":{"injectables/TranslationService.html":{}}}],["pub",{"_index":2759,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["public",{"_index":24,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["publicity",{"_index":4496,"title":{},"body":{"license.html":{}}}],["publicly",{"_index":4470,"title":{},"body":{"license.html":{}}}],["publish",{"_index":306,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"index.html":{},"license.html":{}}}],["publishdatalocationrefreshcomponent",{"_index":305,"title":{"components/PublishDataLocationRefreshComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["publishdatalocationrefreshfield",{"_index":2762,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["publishdatalocationselector.component",{"_index":3374,"title":{},"body":{"modules/SharedModule.html":{}}}],["publishdatalocationselector.component.ts",{"_index":2775,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:155",{"_index":2801,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:156",{"_index":2799,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:158",{"_index":2794,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:162",{"_index":2797,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:168",{"_index":2792,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:172",{"_index":2791,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:176",{"_index":2788,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:181",{"_index":2793,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:185",{"_index":2795,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.html",{"_index":2779,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselectorcomponent",{"_index":308,"title":{"components/PublishDataLocationSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["publishdatalocationselectorfield",{"_index":2800,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["published",{"_index":128,"title":{},"body":{"components/ActionButtonComponent.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/PublishDataLocationRefreshComponent.html":{},"license.html":{}}}],["publishing",{"_index":4003,"title":{},"body":{"index.html":{}}}],["publishmetadata(oid",{"_index":3117,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["pull",{"_index":1253,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["purpose",{"_index":1192,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["purposes",{"_index":4422,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["pursuant",{"_index":4621,"title":{},"body":{"license.html":{}}}],["q",{"_index":3089,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["q.split",{"_index":3091,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qcif",{"_index":4011,"title":{},"body":{"index.html":{}}}],["qobj",{"_index":3090,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qobj[0].split('|')[1",{"_index":3095,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qobj[1",{"_index":3093,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qualify",{"_index":4544,"title":{},"body":{"license.html":{}}}],["quality",{"_index":4680,"title":{},"body":{"license.html":{}}}],["queensland",{"_index":1160,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"index.html":{}}}],["query",{"_index":1639,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"dependencies.html":{}}}],["querystr",{"_index":3086,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["question",{"_index":1112,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["r.name",{"_index":2297,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["r:any",{"_index":2296,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["radio",{"_index":462,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ran",{"_index":1065,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["rb",{"_index":258,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["rbmapdatatemplate",{"_index":2577,"title":{},"body":{"components/MapComponent.html":{}}}],["rbportal",{"_index":4792,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["rbrelatedobjectdatatemplate",{"_index":3142,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["rbvalidator",{"_index":2882,"title":{"classes/RbValidator.html":{}},"body":{"classes/RbValidator.html":{}}}],["rbvalidator.isempty(group.controls[f",{"_index":2906,"title":{},"body":{"classes/RbValidator.html":{}}}],["rc",{"_index":3929,"title":{},"body":{"dependencies.html":{}}}],["rda",{"_index":4004,"title":{},"body":{"index.html":{}}}],["rdmp",{"_index":2674,"title":{},"body":{"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["re",{"_index":3776,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["reactevent(eventname",{"_index":1401,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["reacting",{"_index":1405,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["reactiveformsmodule",{"_index":940,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["read",{"_index":1069,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["readable",{"_index":4367,"title":{},"body":{"license.html":{}}}],["readily",{"_index":4609,"title":{},"body":{"license.html":{}}}],["reading",{"_index":4473,"title":{},"body":{"license.html":{}}}],["ready",{"_index":4119,"title":{},"body":{"license.html":{}}}],["reason",{"_index":4619,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":4382,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":4542,"title":{},"body":{"license.html":{}}}],["receive",{"_index":4059,"title":{},"body":{"license.html":{}}}],["received",{"_index":1196,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["receives",{"_index":4560,"title":{},"body":{"license.html":{}}}],["receiving",{"_index":4627,"title":{},"body":{"license.html":{}}}],["recipient",{"_index":4453,"title":{},"body":{"license.html":{}}}],["recipient's",{"_index":4617,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":4077,"title":{},"body":{"license.html":{}}}],["recognized",{"_index":4211,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":4814,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["record",{"_index":127,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["record's",{"_index":4870,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["record.datalocations",{"_index":2854,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["record.js",{"_index":4828,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["record.oid",{"_index":3263,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["record/s",{"_index":4975,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["record_search_refiner.html",{"_index":3187,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["record_type",{"_index":1515,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["recordactionresult",{"_index":2912,"title":{"classes/RecordActionResult.html":{}},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordmetadataretrievercomponent",{"_index":309,"title":{"components/RecordMetadataRetrieverComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["recordmetadataretrieverfield",{"_index":396,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["recordpermissions",{"_index":3121,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["recordpermissions'},{'name",{"_index":311,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["recordpermissions.component",{"_index":3372,"title":{},"body":{"modules/SharedModule.html":{}}}],["recordpermissions.component.ts",{"_index":3120,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["recordpermissions.component.ts:121",{"_index":3126,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["recordpermissions.component.ts:127",{"_index":3129,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["recordpermissions.html",{"_index":3122,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["recordpermissionscomponent",{"_index":310,"title":{"components/RecordPermissionsComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["recordpermissionsfield",{"_index":3130,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["records",{"_index":3235,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["records.service",{"_index":210,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["records:records",{"_index":2972,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordsearchcomponent",{"_index":312,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["recordsearchmodule",{"_index":3147,"title":{"modules/RecordSearchModule.html":{}},"body":{"modules/RecordSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["recordsearchparams",{"_index":2983,"title":{"classes/RecordSearchParams.html":{}},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordsearchrefiner",{"_index":2993,"title":{"classes/RecordSearchRefiner.html":{}},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["recordsearchrefinercomponent",{"_index":314,"title":{"components/RecordSearchRefinerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["recordselected(record",{"_index":3261,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["recordselectedemit(record",{"_index":3267,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["recordservice",{"_index":212,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["recordsservice",{"_index":209,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ExportFormComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"overview.html":{}}}],["recordtype",{"_index":968,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordtype:string",{"_index":3249,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["recordtype=${recordtype",{"_index":1003,"title":{},"body":{"injectables/DashboardService.html":{}}}],["rectype",{"_index":1540,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["rectypename",{"_index":1603,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["rectypenames",{"_index":1516,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["redbox",{"_index":2778,"title":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"index.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["redbox.research.uts.edu.au/default/rdmp",{"_index":5022,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["redbox2ckan",{"_index":3931,"title":{},"body":{"dependencies.html":{}}}],["redbox@dev",{"_index":4970,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["redbox@redboxresearchdata.com.au",{"_index":4963,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["redboxapikey",{"_index":4800,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["redirect",{"_index":530,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["redirecting",{"_index":2181,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["redirectlocation",{"_index":522,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["redistribute",{"_index":1175,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["reduce",{"_index":4989,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["redux",{"_index":3934,"title":{},"body":{"dependencies.html":{}}}],["referring",{"_index":4055,"title":{},"body":{"license.html":{}}}],["refers",{"_index":4146,"title":{},"body":{"license.html":{}}}],["refine",{"_index":3207,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["refinedsearchstr",{"_index":2984,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner",{"_index":2992,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["refiner'},{'name",{"_index":316,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["refiner.activevalue",{"_index":3055,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.alwaysactive",{"_index":3056,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.component.ts",{"_index":3186,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:10",{"_index":3193,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:11",{"_index":3192,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:12",{"_index":3194,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:14",{"_index":3197,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:22",{"_index":3198,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.name",{"_index":3082,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.type",{"_index":2994,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.value",{"_index":3054,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner:recordsearchrefiner",{"_index":3072,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinerconfig",{"_index":3046,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["refinerconfig.alwaysactive",{"_index":3067,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinerconfig.name",{"_index":3109,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinerconfig.title",{"_index":3205,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinerconfig.typelabel",{"_index":3206,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinername",{"_index":3094,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalue",{"_index":3196,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinervalue:any",{"_index":3200,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinervalues",{"_index":3070,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalues[refinername",{"_index":3096,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalues}&refiner|${refiner.name}=${_.isempty(refiner.activevalue",{"_index":3073,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalues}&refiner|${refiner.name}=${_.isempty(refiner.value",{"_index":3074,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refrain",{"_index":4655,"title":{},"body":{"license.html":{}}}],["refresh",{"_index":2758,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["refresh'},{'name",{"_index":307,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["refresh.component",{"_index":3397,"title":{},"body":{"modules/SharedModule.html":{}}}],["refresh.component.html",{"_index":2761,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["refresh.component.ts",{"_index":2757,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["refresh.component.ts:73",{"_index":2763,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["refresher",{"_index":2764,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["reg",{"_index":3745,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regard",{"_index":4479,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":4344,"title":{},"body":{"license.html":{}}}],["regenerate",{"_index":4252,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3740,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regexp(`${this.field.startswith",{"_index":2700,"title":{},"body":{"components/PDFListComponent.html":{}}}],["regexp(regex",{"_index":3746,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regexp(regextrail",{"_index":3752,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regextrail",{"_index":3747,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regions",{"_index":2372,"title":{},"body":{"components/MapComponent.html":{}}}],["register",{"_index":5027,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["registerevents",{"_index":3812,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["registermapeventhandlers(map",{"_index":2523,"title":{},"body":{"components/MapComponent.html":{}}}],["regtrail",{"_index":3751,"title":{},"body":{"injectables/UtilityService.html":{}}}],["reinstated",{"_index":4528,"title":{},"body":{"license.html":{}}}],["related",{"_index":1223,"title":{},"body":{"injectables/EmailNotificationService.html":{},"components/GenericGroupComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["related_notes",{"_index":2077,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_title",{"_index":2076,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_url",{"_index":2068,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_website",{"_index":2063,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_websites",{"_index":2088,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["relatedobjectdata",{"_index":3211,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata'},{'name",{"_index":318,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["relatedobjectdata.component",{"_index":3370,"title":{},"body":{"modules/SharedModule.html":{}}}],["relatedobjectdata.component.ts",{"_index":3210,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata.component.ts:135",{"_index":3213,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata.component.ts:141",{"_index":3214,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata.html",{"_index":3212,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdatacomponent",{"_index":317,"title":{"components/RelatedObjectDataComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["relatedobjectdatafield",{"_index":3215,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjects",{"_index":2654,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectselected:eventemitter",{"_index":3251,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector",{"_index":3241,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector'},{'name",{"_index":320,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["relatedobjectselector.component",{"_index":3371,"title":{},"body":{"modules/SharedModule.html":{}}}],["relatedobjectselector.component.ts",{"_index":3240,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector.component.ts:143",{"_index":3245,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector.component.ts:145",{"_index":3246,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector.html",{"_index":3242,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselectorcomponent",{"_index":319,"title":{"components/RelatedObjectSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["relatedobjectselectorfield",{"_index":3244,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedrecordid",{"_index":685,"title":{},"body":{"components/AsynchComponent.html":{}}}],["relating",{"_index":4945,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["relationship",{"_index":4282,"title":{},"body":{"license.html":{}}}],["relationshiplookup(searchterm",{"_index":1798,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["released",{"_index":4051,"title":{},"body":{"license.html":{}}}],["relevant",{"_index":4336,"title":{},"body":{"license.html":{}}}],["reliably",{"_index":2948,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["relicensing",{"_index":4515,"title":{},"body":{"license.html":{}}}],["relying",{"_index":4608,"title":{},"body":{"license.html":{}}}],["remain",{"_index":4402,"title":{},"body":{"license.html":{}}}],["remains",{"_index":4048,"title":{},"body":{"license.html":{}}}],["removal",{"_index":4480,"title":{},"body":{"license.html":{}}}],["remove",{"_index":2255,"title":{},"body":{"components/ManageRolesComponent.html":{},"license.html":{}}}],["removeallelems",{"_index":1415,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removebtnclass",{"_index":1239,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["removebtntext",{"_index":1240,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["removebuttonclass",{"_index":1273,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removebuttontext",{"_index":1267,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removebuttontextclass",{"_index":1271,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removed",{"_index":3102,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["removeelem",{"_index":3289,"title":{},"body":{"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removeelem(event",{"_index":1427,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["removeelem(index",{"_index":1382,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removelocation(loc",{"_index":2855,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["render",{"_index":2368,"title":{},"body":{"components/MapComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["rendercompleteelement",{"_index":2926,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["rendered",{"_index":2947,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["rendition",{"_index":4931,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["repair",{"_index":4687,"title":{},"body":{"license.html":{}}}],["repeatable",{"_index":322,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["repeatable.component",{"_index":2087,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"modules/SharedModule.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["repeatable.component.ts",{"_index":1236,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatable.component.ts:222",{"_index":1246,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:223",{"_index":1257,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:224",{"_index":1256,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:225",{"_index":1247,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:226",{"_index":1259,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:228",{"_index":1245,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:232",{"_index":1243,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:242",{"_index":3290,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:244",{"_index":3291,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:248",{"_index":3293,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:252",{"_index":3292,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:318",{"_index":3304,"title":{},"body":{"components/RepeatableVocabComponent.html":{}}}],["repeatable.component.ts:319",{"_index":3303,"title":{},"body":{"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent",{"_index":1424,"title":{"classes/RepeatableComponent.html":{}},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["repeatablecomponent:242",{"_index":3298,"title":{},"body":{"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent:244",{"_index":3294,"title":{},"body":{"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent:248",{"_index":3296,"title":{},"body":{"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent:252",{"_index":3295,"title":{},"body":{"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecontainer",{"_index":1265,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecontributor",{"_index":1441,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecontributorcomponent",{"_index":321,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["repeatablegroupcomponent",{"_index":323,"title":{"components/RepeatableGroupComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["repeatabletextfieldcomponent",{"_index":325,"title":{"components/RepeatableTextfieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["repeatablevocab",{"_index":1432,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablevocabcomponent",{"_index":327,"title":{"components/RepeatableVocabComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["replace",{"_index":3452,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["replace(/(\\$\\{(?!map\\.)[^}]+\\})/g",{"_index":3464,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["replace(/\\$\\{([\\s]*[^;\\s\\{]+[\\s]*)\\}/g",{"_index":3457,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["replacing",{"_index":1750,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["report",{"_index":3305,"title":{"classes/Report.html":{}},"body":{"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{}}}],["report'},{'name",{"_index":330,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["report.component",{"_index":3318,"title":{},"body":{"modules/ReportModule.html":{}}}],["reportcomponent",{"_index":329,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["reportmodule",{"_index":3310,"title":{"modules/ReportModule.html":{}},"body":{"modules/ReportModule.html":{},"modules.html":{},"overview.html":{}}}],["reportresults",{"_index":3309,"title":{"classes/ReportResults.html":{}},"body":{"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{}}}],["reportservice",{"_index":3316,"title":{"injectables/ReportService.html":{}},"body":{"modules/ReportModule.html":{},"injectables/ReportService.html":{},"overview.html":{}}}],["repository",{"_index":4815,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["represent",{"_index":4439,"title":{},"body":{"license.html":{}}}],["request",{"_index":3936,"title":{},"body":{"dependencies.html":{}}}],["requestoptions",{"_index":855,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["require",{"_index":3963,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["required",{"_index":185,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["requirement",{"_index":4337,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":4000,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["requires",{"_index":4021,"title":{},"body":{"index.html":{},"license.html":{}}}],["requiring",{"_index":4159,"title":{},"body":{"license.html":{}}}],["res",{"_index":59,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["res.json",{"_index":878,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["res.message",{"_index":2185,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["res.url",{"_index":2183,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["res.user",{"_index":2179,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["research",{"_index":3977,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["researchers",{"_index":3981,"title":{},"body":{"index.html":{}}}],["reset",{"_index":933,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["reset(data=null",{"_index":1417,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["resetfilter",{"_index":2220,"title":{},"body":{"components/ManageRolesComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["resetselector",{"_index":3269,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["resetselectorevent",{"_index":3252,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["resolved",{"_index":4429,"title":{},"body":{"license.html":{}}}],["respect",{"_index":4073,"title":{},"body":{"license.html":{}}}],["response",{"_index":54,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["response[\"items",{"_index":1015,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["response['workspacetypes",{"_index":3807,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["responsibilities",{"_index":4072,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1138,"title":{},"body":{"components/DmpFieldComponent.html":{},"index.html":{},"license.html":{}}}],["rest",{"_index":5031,"title":{"additional-documentation/rest-api-documentation.html":{}},"body":{"additional-documentation/rest-api-documentation.html":{}}}],["restored",{"_index":1066,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["restrict",{"_index":4129,"title":{},"body":{"license.html":{}}}],["restricting",{"_index":4307,"title":{},"body":{"license.html":{}}}],["restriction",{"_index":4513,"title":{},"body":{"license.html":{}}}],["restrictions",{"_index":4510,"title":{},"body":{"license.html":{}}}],["restricttoselection",{"_index":1654,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["result",{"_index":111,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["result.errors.length",{"_index":3602,"title":{},"body":{"interfaces/UserForm.html":{}}}],["result.push(itemresult",{"_index":3722,"title":{},"body":{"injectables/UtilityService.html":{}}}],["resultarrayproperty",{"_index":1657,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["resulting",{"_index":2059,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"license.html":{}}}],["results",{"_index":113,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["result}${_.isempty(result",{"_index":3723,"title":{},"body":{"injectables/UtilityService.html":{}}}],["retains",{"_index":4457,"title":{},"body":{"license.html":{}}}],["retriever",{"_index":619,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["retriever'},{'name",{"_index":301,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["retrieving",{"_index":1863,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["return",{"_index":105,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["returnemptystring",{"_index":3510,"title":{},"body":{"injectables/TranslationService.html":{}}}],["returnnull",{"_index":3509,"title":{},"body":{"injectables/TranslationService.html":{}}}],["returns",{"_index":48,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{}}}],["retval",{"_index":2909,"title":{},"body":{"classes/RbValidator.html":{}}}],["reverse",{"_index":2720,"title":{},"body":{"components/PDFListComponent.html":{},"additional-documentation/installation-guide.html":{}}}],["review",{"_index":4901,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["reviewing",{"_index":4707,"title":{},"body":{"license.html":{}}}],["revised",{"_index":4661,"title":{},"body":{"license.html":{}}}],["revokekey",{"_index":3621,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["revokekey(userid",{"_index":3635,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["revokeuserkey",{"_index":3622,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["rich",{"_index":4978,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["right",{"_index":1140,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["rights",{"_index":4064,"title":{},"body":{"license.html":{}}}],["risk",{"_index":4679,"title":{},"body":{"license.html":{}}}],["role",{"_index":2207,"title":{"classes/Role.html":{}},"body":{"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/WorkspaceTypeService.html":{}}}],["role.checked",{"_index":2328,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["role.hasrole",{"_index":2305,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["role.name",{"_index":2282,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["role.value",{"_index":2329,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["role:any",{"_index":2266,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["role:role",{"_index":2978,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["rolefilter",{"_index":2230,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["rolefilter.checked",{"_index":2324,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["rolefilter.label",{"_index":2348,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["rolefilter.value",{"_index":2326,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["roleids",{"_index":3340,"title":{},"body":{"injectables/RolesService.html":{}}}],["roles",{"_index":2206,"title":{},"body":{"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["roles'},{'name",{"_index":290,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["roles:roleids",{"_index":3344,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolesservice",{"_index":2224,"title":{"injectables/RolesService.html":{}},"body":{"components/ManageRolesComponent.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["rolesservice.getbrandroles().then((roles:any",{"_index":2263,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["rolesservice.waitforinit((initstat:any",{"_index":2261,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["rom",{"_index":4460,"title":{},"body":{"license.html":{}}}],["root",{"_index":176,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["row",{"_index":4923,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["rows",{"_index":981,"title":{},"body":{"injectables/DashboardService.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"injectables/ReportService.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["royalty",{"_index":4573,"title":{},"body":{"license.html":{}}}],["rules",{"_index":4468,"title":{},"body":{"license.html":{}}}],["run",{"_index":2336,"title":{},"body":{"components/ManageRolesComponent.html":{},"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["runfordev.sh",{"_index":4023,"title":{},"body":{"index.html":{}}}],["running",{"_index":4262,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["runs",{"_index":4230,"title":{},"body":{"license.html":{}}}],["runtemplate",{"_index":3672,"title":{},"body":{"injectables/UtilityService.html":{}}}],["runtemplate(data",{"_index":3704,"title":{},"body":{"injectables/UtilityService.html":{}}}],["rxjs",{"_index":1633,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"dependencies.html":{}}}],["rxjs/add/observable/from",{"_index":2037,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["rxjs/add/observable/interval",{"_index":857,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["rxjs/add/observable/of",{"_index":858,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["rxjs/add/observable/zip",{"_index":3131,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["rxjs/add/operator/buffertime",{"_index":678,"title":{},"body":{"components/AsynchComponent.html":{}}}],["rxjs/add/operator/filter",{"_index":679,"title":{},"body":{"components/AsynchComponent.html":{}}}],["rxjs/add/operator/last",{"_index":2036,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["rxjs/add/operator/map",{"_index":83,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["rxjs/add/operator/mergemap",{"_index":859,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/FieldControlService.html":{}}}],["rxjs/add/operator/topromise",{"_index":84,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["rxjs/observable",{"_index":675,"title":{},"body":{"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{}}}],["rxjs/observable/frompromise",{"_index":3133,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["rxjs/subject",{"_index":677,"title":{},"body":{"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/TranslationService.html":{}}}],["sacal",{"_index":3682,"title":{},"body":{"injectables/UtilityService.html":{}}}],["safest",{"_index":4723,"title":{},"body":{"license.html":{}}}],["sails",{"_index":3940,"title":{},"body":{"dependencies.html":{},"additional-documentation/configuration-guide.html":{}}}],["sailshq/upgrade",{"_index":3864,"title":{},"body":{"dependencies.html":{}}}],["sailsjs",{"_index":4820,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["sake",{"_index":4092,"title":{},"body":{"license.html":{}}}],["sale",{"_index":4583,"title":{},"body":{"license.html":{}}}],["same",{"_index":4078,"title":{},"body":{"license.html":{}}}],["sample",{"_index":4819,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["sanitized",{"_index":3456,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["sanitizer",{"_index":3127,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["sanitizeurl",{"_index":3123,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["sanitizeurl(url",{"_index":3128,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["sanitizeurl(url:string",{"_index":3143,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["sass",{"_index":3875,"title":{},"body":{"dependencies.html":{}}}],["satisfy",{"_index":4404,"title":{},"body":{"license.html":{}}}],["save",{"_index":332,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["saveandopenworkspace",{"_index":3853,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["savebutton",{"_index":391,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["savebuttoncomponent",{"_index":331,"title":{"components/SaveButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["savecurrentuser",{"_index":2221,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["savecurrentuser($event",{"_index":2232,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["savecurrentuser($event:any",{"_index":2301,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["saved",{"_index":4927,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["savefirst",{"_index":3782,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["savemsg",{"_index":2215,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["savemsgtype",{"_index":2216,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["savenotes",{"_index":2785,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["saveres.status",{"_index":2312,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["saveresult",{"_index":2209,"title":{"classes/SaveResult.html":{}},"body":{"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{}}}],["savesuccess",{"_index":4926,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["saying",{"_index":4400,"title":{},"body":{"license.html":{}}}],["schedule",{"_index":3918,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":4855,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["school",{"_index":4751,"title":{},"body":{"license.html":{}}}],["scope",{"_index":4631,"title":{},"body":{"license.html":{}}}],["screenshot",{"_index":2944,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["script",{"_index":4793,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["scripts",{"_index":4236,"title":{},"body":{"license.html":{}}}],["search",{"_index":315,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["search'},{'name",{"_index":313,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["search(params",{"_index":2982,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["search(term",{"_index":1630,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchfields",{"_index":1648,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchfieldstr",{"_index":1817,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchfieldstr.split",{"_index":1818,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchfilter",{"_index":2217,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["searchfiltername",{"_index":3247,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["searchfilters",{"_index":4888,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["searchfld",{"_index":1824,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchfld}:${term",{"_index":1826,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchrecords",{"_index":958,"title":{},"body":{"injectables/DashboardService.html":{}}}],["searchrecords(pagenumber",{"_index":975,"title":{},"body":{"injectables/DashboardService.html":{}}}],["searchrecords(pagenumber:number",{"_index":1024,"title":{},"body":{"injectables/DashboardService.html":{}}}],["searchstr",{"_index":1641,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchstring",{"_index":1820,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchstring}${_.isempty(searchstring",{"_index":1825,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["searchurl",{"_index":1827,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordSearchParams.html":{}}}],["searchurl}?q=${this.basicsearch}&type=${this.recordtype}${refinervalues",{"_index":3075,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["secondarily",{"_index":4166,"title":{},"body":{"license.html":{}}}],["secretorkey",{"_index":5015,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["section",{"_index":4287,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["sections",{"_index":511,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["see",{"_index":1193,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/MapComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["select",{"_index":1681,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{}}}],["selectalllocations",{"_index":2786,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["selectalllocations(checked",{"_index":2796,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["selected",{"_index":1434,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["selected['originalobject",{"_index":1435,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["selectioncomponent",{"_index":435,"title":{"classes/SelectionComponent.html":{}},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["selectioncomponent:147",{"_index":1220,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["selectioncomponent:149",{"_index":1217,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["selectionfield",{"_index":387,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["selectionfield'},{'name",{"_index":334,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["selectionfieldcomponent",{"_index":333,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["selector",{"_index":123,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["selector'},{'name",{"_index":249,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["selector.component",{"_index":3391,"title":{},"body":{"modules/SharedModule.html":{}}}],["selector.component.ts",{"_index":3840,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["selector.component.ts:12",{"_index":3843,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["selector.component.ts:14",{"_index":3842,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["sell",{"_index":4597,"title":{},"body":{"license.html":{}}}],["selling",{"_index":4582,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":4148,"title":{},"body":{"license.html":{}}}],["send",{"_index":4949,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["sending",{"_index":4946,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["sendnotification",{"_index":1224,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["sendnotification(to",{"_index":1225,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["separable",{"_index":4411,"title":{},"body":{"license.html":{}}}],["separate",{"_index":4350,"title":{},"body":{"license.html":{}}}],["separately",{"_index":4348,"title":{},"body":{"license.html":{}}}],["server",{"_index":3959,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["serves",{"_index":4223,"title":{},"body":{"license.html":{}}}],["service",{"_index":88,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["service.emitinit",{"_index":2136,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["service.getinitsubject",{"_index":2123,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["service.getinitsubject().subscribe(subtrackerfn(serviceidx",{"_index":2135,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["service.ts",{"_index":7,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:112",{"_index":3700,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:124",{"_index":3691,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:13",{"_index":37,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["service.ts:141",{"_index":3709,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:159",{"_index":3707,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:189",{"_index":3678,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:199",{"_index":3703,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:203",{"_index":3705,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:22",{"_index":46,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["service.ts:28",{"_index":3325,"title":{},"body":{"injectables/ReportService.html":{}}}],["service.ts:30",{"_index":967,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:32",{"_index":3503,"title":{},"body":{"injectables/TranslationService.html":{}}}],["service.ts:33",{"_index":3504,"title":{},"body":{"injectables/TranslationService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:34",{"_index":842,"title":{},"body":{"classes/BaseService.html":{},"injectables/EmailNotificationService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{}}}],["service.ts:35",{"_index":840,"title":{},"body":{"classes/BaseService.html":{},"injectables/EmailNotificationService.html":{}}}],["service.ts:36",{"_index":841,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{}}}],["service.ts:37",{"_index":838,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["service.ts:38",{"_index":839,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["service.ts:39",{"_index":843,"title":{},"body":{"classes/BaseService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:40",{"_index":837,"title":{},"body":{"classes/BaseService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UtilityService.html":{}}}],["service.ts:41",{"_index":836,"title":{},"body":{"classes/BaseService.html":{},"injectables/TranslationService.html":{}}}],["service.ts:42",{"_index":1226,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["service.ts:43",{"_index":963,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:46",{"_index":902,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RolesService.html":{}}}],["service.ts:49",{"_index":3861,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["service.ts:51",{"_index":970,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:52",{"_index":899,"title":{},"body":{"injectables/ConfigService.html":{}}}],["service.ts:56",{"_index":852,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:58",{"_index":903,"title":{},"body":{"injectables/ConfigService.html":{}}}],["service.ts:59",{"_index":974,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:60",{"_index":854,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:64",{"_index":850,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:65",{"_index":3502,"title":{},"body":{"injectables/TranslationService.html":{}}}],["service.ts:70",{"_index":847,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:71",{"_index":900,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{}}}],["service.ts:74",{"_index":844,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:77",{"_index":3501,"title":{},"body":{"injectables/TranslationService.html":{}}}],["service.ts:80",{"_index":846,"title":{},"body":{"classes/BaseService.html":{},"injectables/DashboardService.html":{}}}],["service.ts:83",{"_index":3685,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:84",{"_index":845,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:86",{"_index":978,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:93",{"_index":848,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:95",{"_index":3696,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:98",{"_index":849,"title":{},"body":{"classes/BaseService.html":{}}}],["service:any",{"_index":2133,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["servicearr",{"_index":1555,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["serviceidx:any",{"_index":2126,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["serviceinst",{"_index":1998,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/LoadableComponent.html":{}}}],["serviceinst.getlookupdata(f",{"_index":2004,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["serviceinst:any",{"_index":2127,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["servicename",{"_index":1940,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["services",{"_index":832,"title":{},"body":{"classes/BaseService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"index.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["servicing",{"_index":4686,"title":{},"body":{"license.html":{}}}],["set",{"_index":531,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["setcurrentvalue",{"_index":3175,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["setcurrentvalue(value",{"_index":3043,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["setdashboardtitle",{"_index":959,"title":{},"body":{"injectables/DashboardService.html":{}}}],["setdashboardtitle(plantable",{"_index":979,"title":{},"body":{"injectables/DashboardService.html":{}}}],["setemptyvalue",{"_index":2560,"title":{},"body":{"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["setemptyvalue(updatetitle",{"_index":1723,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["setfacetvalues",{"_index":3158,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["setfacetvalues(facets",{"_index":3107,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["setloading",{"_index":1528,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["setloading(loading",{"_index":1548,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["setlookupservices(completerservice",{"_index":1729,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["setoid(o",{"_index":3815,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["setrecordtype",{"_index":1523,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["setrecordtype(rectype",{"_index":1538,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["setrefinerconfig",{"_index":3159,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["setrefinerconfig(config",{"_index":3060,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["setsavemessage",{"_index":2222,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["setsavemessage(msg",{"_index":2234,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["setsavemessage(msg:string",{"_index":2319,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["setting",{"_index":1139,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"additional-documentation/configuration-guide.html":{}}}],["settings",{"_index":4913,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settings/enabled",{"_index":4956,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settings/from",{"_index":4957,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settings/templatedir",{"_index":4959,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settins",{"_index":4955,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["setup",{"_index":4803,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["setupeventhandlers",{"_index":2019,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["setupeventhandlers(fieldmap",{"_index":2032,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["setvalue(value",{"_index":1795,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["setvalue(value:any",{"_index":223,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["setvalueatelem(index",{"_index":1395,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["several",{"_index":4016,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide.html":{}}}],["shadow.png",{"_index":2463,"title":{},"body":{"components/MapComponent.html":{}}}],["shadow.png\"})},circlemarker:false,circle:false",{"_index":2415,"title":{},"body":{"components/MapComponent.html":{}}}],["shadowurl",{"_index":2462,"title":{},"body":{"components/MapComponent.html":{}}}],["shall",{"_index":4291,"title":{},"body":{"license.html":{}}}],["share",{"_index":3993,"title":{},"body":{"index.html":{},"license.html":{}}}],["shared",{"_index":4242,"title":{},"body":{"license.html":{}}}],["shared/base",{"_index":87,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["shared/config",{"_index":1227,"title":{},"body":{"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["shared/dashboard",{"_index":3431,"title":{},"body":{"components/SortComponent.html":{}}}],["shared/form/records.service",{"_index":1570,"title":{},"body":{"components/ExportFormComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/SortComponent.html":{}}}],["shared/loadable.component",{"_index":1568,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["shared/report",{"_index":3319,"title":{},"body":{"modules/ReportModule.html":{}}}],["shared/roles",{"_index":2251,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["shared/shared.module",{"_index":947,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["shared/translation",{"_index":1569,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["shared/user",{"_index":2159,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["shared/user.service",{"_index":2157,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/SortComponent.html":{}}}],["sharedmodule",{"_index":931,"title":{"modules/SharedModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"modules.html":{},"overview.html":{}}}],["shilo",{"_index":188,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["short",{"_index":4736,"title":{},"body":{"license.html":{}}}],["show",{"_index":2382,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["showconfirmdlg",{"_index":536,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["showheader",{"_index":2652,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["showhistorytable:boolean",{"_index":2662,"title":{},"body":{"components/PDFListComponent.html":{}}}],["showversioncolumn:boolean",{"_index":2663,"title":{},"body":{"components/PDFListComponent.html":{}}}],["side",{"_index":831,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["sign",{"_index":1113,"title":{},"body":{"components/DmpFieldComponent.html":{},"license.html":{}}}],["significant",{"_index":4440,"title":{},"body":{"license.html":{}}}],["similar",{"_index":4305,"title":{},"body":{"license.html":{}}}],["simple",{"_index":208,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["simple.component",{"_index":205,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simple.component.ts",{"_index":372,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["simple.component.ts:111",{"_index":3409,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:119",{"_index":3411,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:126",{"_index":3412,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:133",{"_index":3410,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:141",{"_index":3408,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:147",{"_index":3352,"title":{},"body":{"classes/SelectionComponent.html":{}}}],["simple.component.ts:149",{"_index":3353,"title":{},"body":{"classes/SelectionComponent.html":{}}}],["simple.component.ts:198",{"_index":1218,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["simple.component.ts:199",{"_index":1219,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["simple.component.ts:201",{"_index":1216,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["simple.component.ts:339",{"_index":3479,"title":{},"body":{"components/TabOrAccordionContainerComponent.html":{}}}],["simple.component.ts:345",{"_index":3481,"title":{},"body":{"components/TabOrAccordionContainerComponent.html":{}}}],["simple.component.ts:367",{"_index":3480,"title":{},"body":{"components/TabOrAccordionContainerComponent.html":{}}}],["simple.component.ts:38",{"_index":3413,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:404",{"_index":2091,"title":{},"body":{"components/HtmlRawComponent.html":{}}}],["simple.component.ts:42",{"_index":3415,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:429",{"_index":3485,"title":{},"body":{"components/TextBlockComponent.html":{}}}],["simple.component.ts:430",{"_index":3484,"title":{},"body":{"components/TextBlockComponent.html":{}}}],["simple.component.ts:46",{"_index":3414,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:479",{"_index":3349,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["simple.component.ts:481",{"_index":3347,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["simple.component.ts:489",{"_index":3348,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["simple.component.ts:493",{"_index":3346,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["simple.component.ts:497",{"_index":3345,"title":{},"body":{"components/SaveButtonComponent.html":{}}}],["simple.component.ts:50",{"_index":3416,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:534",{"_index":890,"title":{},"body":{"components/CancelButtonComponent.html":{}}}],["simple.component.ts:54",{"_index":3418,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:548",{"_index":379,"title":{},"body":{"components/AnchorOrButtonComponent.html":{}}}],["simple.component.ts:550",{"_index":378,"title":{},"body":{"components/AnchorOrButtonComponent.html":{}}}],["simple.component.ts:554",{"_index":376,"title":{},"body":{"components/AnchorOrButtonComponent.html":{}}}],["simple.component.ts:56",{"_index":3417,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:576",{"_index":3473,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["simple.component.ts:582",{"_index":3476,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["simple.component.ts:591",{"_index":3475,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["simple.component.ts:598",{"_index":3477,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["simple.component.ts:60",{"_index":3404,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:607",{"_index":3474,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["simple.component.ts:633",{"_index":2092,"title":{},"body":{"components/LinkValueComponent.html":{}}}],["simple.component.ts:64",{"_index":3403,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:648",{"_index":2090,"title":{},"body":{"components/HiddenValueComponent.html":{}}}],["simple.component.ts:69",{"_index":3406,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:699",{"_index":1032,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:701",{"_index":1031,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:703",{"_index":1029,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:711",{"_index":1028,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:726",{"_index":2741,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["simple.component.ts:728",{"_index":2740,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["simple.component.ts:735",{"_index":2739,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["simple.component.ts:74",{"_index":3405,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:758",{"_index":3441,"title":{},"body":{"components/SpacerComponent.html":{}}}],["simple.component.ts:773",{"_index":3486,"title":{},"body":{"components/ToggleComponent.html":{}}}],["simple.component.ts:81",{"_index":3407,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.ts",{"_index":3614,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:35",{"_index":3642,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:36",{"_index":3643,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:37",{"_index":3625,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:43",{"_index":3631,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:49",{"_index":3634,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:56",{"_index":3632,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:62",{"_index":3639,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:68",{"_index":3627,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:74",{"_index":3629,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:80",{"_index":3636,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:86",{"_index":3641,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:92",{"_index":3630,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:98",{"_index":3637,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simplecomponent",{"_index":121,"title":{"classes/SimpleComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:111",{"_index":179,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:119",{"_index":184,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:126",{"_index":190,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:133",{"_index":182,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:141",{"_index":175,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:38",{"_index":150,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:42",{"_index":155,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:46",{"_index":152,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:50",{"_index":157,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:54",{"_index":161,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:56",{"_index":160,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:60",{"_index":201,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:64",{"_index":198,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:69",{"_index":204,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:74",{"_index":202,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:81",{"_index":169,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simultaneously",{"_index":4650,"title":{},"body":{"license.html":{}}}],["single",{"_index":4623,"title":{},"body":{"license.html":{}}}],["skipclone",{"_index":1268,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["skipper",{"_index":3949,"title":{},"body":{"dependencies.html":{}}}],["skipping",{"_index":3719,"title":{},"body":{"injectables/UtilityService.html":{}}}],["skipvalidationonsave",{"_index":4908,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["smart",{"_index":3955,"title":{},"body":{"dependencies.html":{}}}],["socketres",{"_index":783,"title":{},"body":{"components/AsynchComponent.html":{}}}],["sockets",{"_index":3947,"title":{},"body":{"dependencies.html":{}}}],["software",{"_index":1174,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["sold",{"_index":4423,"title":{},"body":{"license.html":{}}}],["sole",{"_index":4271,"title":{},"body":{"license.html":{}}}],["solely",{"_index":4284,"title":{},"body":{"license.html":{}}}],["solr",{"_index":4877,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["solrquery",{"_index":3307,"title":{},"body":{"classes/Report.html":{},"classes/ReportResults.html":{}}}],["sort",{"_index":973,"title":{},"body":{"injectables/DashboardService.html":{},"components/SortComponent.html":{}}}],["sort'},{'name",{"_index":336,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["sort.component",{"_index":944,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sort.html",{"_index":3420,"title":{},"body":{"components/SortComponent.html":{}}}],["sort:string=undefined",{"_index":1000,"title":{},"body":{"injectables/DashboardService.html":{}}}],["sort:this.sort",{"_index":3439,"title":{},"body":{"components/SortComponent.html":{}}}],["sort=${sort",{"_index":1009,"title":{},"body":{"injectables/DashboardService.html":{}}}],["sortchanged",{"_index":3424,"title":{},"body":{"components/SortComponent.html":{}}}],["sortclicked",{"_index":3421,"title":{},"body":{"components/SortComponent.html":{}}}],["sortcomponent",{"_index":335,"title":{"components/SortComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"index.html":{},"license.html":{}}}],["sourcedata",{"_index":1643,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["sourcetype",{"_index":1650,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["spacer",{"_index":395,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["spacer'},{'name",{"_index":338,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["spacercomponent",{"_index":337,"title":{"components/SpacerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["span",{"_index":2927,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["spare",{"_index":4379,"title":{},"body":{"license.html":{}}}],["speak",{"_index":4054,"title":{},"body":{"license.html":{}}}],["special",{"_index":4132,"title":{},"body":{"license.html":{}}}],["specif",{"_index":4841,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["specific",{"_index":2885,"title":{},"body":{"classes/RbValidator.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["specific_backend_message",{"_index":3514,"title":{},"body":{"injectables/TranslationService.html":{}}}],["specifically",{"_index":4246,"title":{},"body":{"license.html":{}}}],["specified",{"_index":4213,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["specifies",{"_index":4668,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["specify",{"_index":4670,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["spelling",{"_index":1962,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["spinnerelem",{"_index":1519,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["spirit",{"_index":4662,"title":{},"body":{"license.html":{}}}],["splitarraystringstoarray",{"_index":3673,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitarraystringstoarray(data",{"_index":3706,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splits",{"_index":3679,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitstringtoarray",{"_index":3674,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitstringtoarray(data",{"_index":3708,"title":{},"body":{"injectables/UtilityService.html":{}}}],["srcfld",{"_index":1705,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["stage",{"_index":4862,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["stagelabel",{"_index":4895,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["stages",{"_index":4873,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["stand",{"_index":4118,"title":{},"body":{"license.html":{}}}],["standard",{"_index":4209,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["standards",{"_index":4212,"title":{},"body":{"license.html":{}}}],["start",{"_index":799,"title":{},"body":{"components/AsynchComponent.html":{},"injectables/DashboardService.html":{},"classes/LoadableComponent.html":{},"injectables/ReportService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["started",{"_index":714,"title":{"index.html":{},"license.html":{}},"body":{"components/AsynchComponent.html":{}}}],["startedbylabel",{"_index":691,"title":{},"body":{"components/AsynchComponent.html":{}}}],["starting",{"_index":4898,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["startlisten",{"_index":650,"title":{},"body":{"components/AsynchComponent.html":{}}}],["starts",{"_index":4737,"title":{},"body":{"license.html":{}}}],["startswith:string",{"_index":2661,"title":{},"body":{"components/PDFListComponent.html":{}}}],["startup",{"_index":4806,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["state",{"_index":966,"title":{},"body":{"injectables/DashboardService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["state:string",{"_index":986,"title":{},"body":{"injectables/DashboardService.html":{}}}],["state=${state",{"_index":990,"title":{},"body":{"injectables/DashboardService.html":{}}}],["stated",{"_index":4257,"title":{},"body":{"license.html":{}}}],["statement",{"_index":4517,"title":{},"body":{"license.html":{}}}],["states",{"_index":4127,"title":{},"body":{"license.html":{}}}],["static",{"_index":13,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["stating",{"_index":4327,"title":{},"body":{"license.html":{}}}],["status",{"_index":549,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoginResult.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/Role.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"classes/User.html":{},"license.html":{}}}],["status.empty",{"_index":2908,"title":{},"body":{"classes/RbValidator.html":{}}}],["status.emptyfields.push(f",{"_index":2907,"title":{},"body":{"classes/RbValidator.html":{}}}],["statuslabel",{"_index":688,"title":{},"body":{"components/AsynchComponent.html":{}}}],["step",{"_index":3422,"title":{},"body":{"components/SortComponent.html":{},"components/TabNavButtonComponent.html":{}}}],["step:this.step",{"_index":3440,"title":{},"body":{"components/SortComponent.html":{}}}],["steps",{"_index":4083,"title":{},"body":{"license.html":{}}}],["stepto(oid",{"_index":2963,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["steptotab",{"_index":3472,"title":{},"body":{"components/TabNavButtonComponent.html":{}}}],["steptotab(step",{"_index":572,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["stop",{"_index":802,"title":{},"body":{"components/AsynchComponent.html":{}}}],["storage",{"_index":4357,"title":{},"body":{"license.html":{}}}],["stored",{"_index":4851,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["storelabelonly",{"_index":1655,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["street",{"_index":1203,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["strength",{"_index":3572,"title":{},"body":{"interfaces/UserForm.html":{}}}],["string",{"_index":44,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["string=null",{"_index":422,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["stringlabeltofield",{"_index":1653,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["stringtemplate",{"_index":3443,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["stringtemplate:item",{"_index":3230,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["stringtemplatepipe",{"_index":3358,"title":{"pipes/StringTemplatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/StringTemplatePipe.html":{},"overview.html":{}}}],["structure",{"_index":4827,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["structured",{"_index":4940,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["structures",{"_index":4861,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["styles",{"_index":3557,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["styling",{"_index":4922,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["subclass",{"_index":172,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["subdividing",{"_index":4565,"title":{},"body":{"license.html":{}}}],["subdomains",{"_index":2437,"title":{},"body":{"components/MapComponent.html":{}}}],["subfield:string",{"_index":595,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["subject",{"_index":676,"title":{},"body":{"components/AsynchComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["subjects",{"_index":896,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/TranslationService.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["sublicenses",{"_index":4593,"title":{},"body":{"license.html":{}}}],["sublicensing",{"_index":4286,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":4916,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["submitting",{"_index":213,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["subprograms",{"_index":4245,"title":{},"body":{"license.html":{}}}],["subroutine",{"_index":4753,"title":{},"body":{"license.html":{}}}],["subs",{"_index":874,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/LoadableComponent.html":{},"injectables/TranslationService.html":{}}}],["subs.length",{"_index":2130,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subscribe",{"_index":1813,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["subscribe((res:any",{"_index":915,"title":{},"body":{"injectables/ConfigService.html":{}}}],["subscribetoasyncprogress(oid",{"_index":3024,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["subscription",{"_index":4019,"title":{},"body":{"index.html":{}}}],["subsection",{"_index":4388,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":4435,"title":{},"body":{"license.html":{}}}],["substantially",{"_index":4116,"title":{},"body":{"license.html":{}}}],["subtracker",{"_index":2124,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtracker.loaded[`${serviceidx",{"_index":2128,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtracker.subs[`${serviceidx",{"_index":2134,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtracker.subs[`${serviceidx}`].unsubscribe",{"_index":2131,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtrackerfn",{"_index":2125,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["success",{"_index":1288,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/RecordActionResult.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["success:boolean",{"_index":3029,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["successful",{"_index":529,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["successfully",{"_index":4928,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["successobs",{"_index":541,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["successobs.subscribe",{"_index":548,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["such",{"_index":4074,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["sue",{"_index":4606,"title":{},"body":{"license.html":{}}}],["suffice",{"_index":4445,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":1774,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["suit",{"_index":4863,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["super",{"_index":485,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["super(http",{"_index":102,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["super(options",{"_index":216,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["super.addelem(val",{"_index":1448,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["super.createformmodel",{"_index":3830,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["supplement",{"_index":4474,"title":{},"body":{"license.html":{}}}],["support",{"_index":4018,"title":{},"body":{"index.html":{},"license.html":{},"modules.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["supported",{"_index":1747,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"injectables/TranslationService.html":{}}}],["supportedlanguages",{"_index":3526,"title":{},"body":{"injectables/TranslationService.html":{}}}],["supports",{"_index":3990,"title":{},"body":{"index.html":{},"license.html":{}}}],["sure",{"_index":2897,"title":{},"body":{"classes/RbValidator.html":{},"license.html":{}}}],["surrender",{"_index":4070,"title":{},"body":{"license.html":{}}}],["survive",{"_index":4516,"title":{},"body":{"license.html":{}}}],["sustained",{"_index":4699,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4760,"title":{},"body":{"modules.html":{}}}],["swap(fromidx",{"_index":1386,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["switch",{"_index":2009,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["synchloading",{"_index":1529,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["system",{"_index":4007,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["systematic",{"_index":4106,"title":{},"body":{"license.html":{}}}],["systemd",{"_index":4807,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["systemjs",{"_index":3953,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":3496,"title":{},"body":{"injectables/TranslationService.html":{}}}],["t(key",{"_index":3500,"title":{},"body":{"injectables/TranslationService.html":{}}}],["tab",{"_index":340,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["tab.expandedchar",{"_index":481,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab.id",{"_index":494,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab.label",{"_index":479,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab[\"expandedchar",{"_index":490,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab['expandedchar",{"_index":488,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabcontainer",{"_index":478,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabcontainer'},{'name",{"_index":343,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["tabid",{"_index":493,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabnavbutton",{"_index":394,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabnavbuttoncomponent",{"_index":339,"title":{"components/TabNavButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["taboraccordioncontainer",{"_index":482,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["taboraccordioncontainer,parameterretrieverfield",{"_index":393,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["taboraccordioncontainercomponent",{"_index":342,"title":{"components/TabOrAccordionContainerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["take",{"_index":1096,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["takes",{"_index":4822,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["tangible",{"_index":4417,"title":{},"body":{"license.html":{}}}],["target=\"#pdfhistorymodal",{"_index":2730,"title":{},"body":{"components/PDFListComponent.html":{}}}],["targetaction",{"_index":211,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["targetfld",{"_index":1706,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["targetprogress",{"_index":804,"title":{},"body":{"components/AsynchComponent.html":{}}}],["targetstep",{"_index":2954,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["targetval",{"_index":589,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["targetval.push(tval",{"_index":598,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tasks",{"_index":683,"title":{},"body":{"components/AsynchComponent.html":{}}}],["tasktype",{"_index":698,"title":{},"body":{"components/AsynchComponent.html":{}}}],["technological",{"_index":4294,"title":{},"body":{"license.html":{}}}],["tells",{"_index":4198,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1388,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["template",{"_index":126,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["template(args",{"_index":3471,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["templatedata",{"_index":3762,"title":{},"body":{"injectables/UtilityService.html":{}}}],["templatedir",{"_index":4950,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["templates",{"_index":4951,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["templatestring",{"_index":3446,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["templateurl",{"_index":642,"title":{},"body":{"components/AsynchComponent.html":{},"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SortComponent.html":{}}}],["templating",{"_index":4977,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["term",{"_index":1632,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["terminal",{"_index":4735,"title":{},"body":{"license.html":{}}}],["terminate",{"_index":4522,"title":{},"body":{"license.html":{}}}],["terminated",{"_index":4543,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":4531,"title":{},"body":{"license.html":{}}}],["termination",{"_index":4519,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1179,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["term}}).map((res",{"_index":1804,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["test",{"_index":3573,"title":{},"body":{"interfaces/UserForm.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["text",{"_index":297,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["text_",{"_index":4882,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["text_description",{"_index":4889,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["text_title",{"_index":4884,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["textarea",{"_index":2608,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textareacomponent",{"_index":344,"title":{"components/TextAreaComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["textblockcomponent",{"_index":345,"title":{"components/TextBlockComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["textbox",{"_index":1664,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textfield",{"_index":2066,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textfield'},{'name",{"_index":326,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["textfield.component",{"_index":3367,"title":{},"body":{"modules/SharedModule.html":{}}}],["textfield.component.ts",{"_index":2589,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textfield.component.ts:169",{"_index":3302,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:172",{"_index":3300,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:175",{"_index":3299,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:179",{"_index":3301,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:225",{"_index":3483,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["textfield.component.ts:227",{"_index":3482,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["textfield.component.ts:257",{"_index":2594,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{}}}],["textfield.component.ts:259",{"_index":2592,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{}}}],["textfieldcomponent",{"_index":347,"title":{"components/TextFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["that's",{"_index":3462,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["that.accessdeniedobjects.push(meta",{"_index":3223,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["that.changeref.detectchanges",{"_index":491,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["that.failedobjects.push(meta",{"_index":3219,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["that.field.onaccordioncollapseexpand.emit({shown:false",{"_index":496,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["that.field.onaccordioncollapseexpand.emit({shown:true",{"_index":492,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["that.field.relatedrecordid",{"_index":767,"title":{},"body":{"components/AsynchComponent.html":{}}}],["that.field.setvalue(\"http://203.101.227.135:5000/dataset/\"+that.field.fieldmap._rootcomp.oid",{"_index":236,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["that.field.submitting",{"_index":235,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["that.fieldmap._rootcomp.onsubmit().subscribe",{"_index":237,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["that.initialised",{"_index":2517,"title":{},"body":{"components/MapComponent.html":{}}}],["that.initmap(map",{"_index":2511,"title":{},"body":{"components/MapComponent.html":{}}}],["that.layergeojson",{"_index":2530,"title":{},"body":{"components/MapComponent.html":{}}}],["that.layers.push(layer",{"_index":2529,"title":{},"body":{"components/MapComponent.html":{}}}],["that.map.fitbounds(that.drawnitems.getbounds",{"_index":2564,"title":{},"body":{"components/MapComponent.html":{}}}],["that.permissions",{"_index":3140,"title":{},"body":{"components/RecordPermissionsComponent.html":{}}}],["that.relatedobjects.push(meta",{"_index":3225,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["that.setvalue(that.layergeojson",{"_index":2532,"title":{},"body":{"components/MapComponent.html":{}}}],["that.startlisten",{"_index":769,"title":{},"body":{"components/AsynchComponent.html":{}}}],["that.tabid",{"_index":2510,"title":{},"body":{"components/MapComponent.html":{}}}],["that2",{"_index":2535,"title":{},"body":{"components/MapComponent.html":{}}}],["that2.layers.push(layer",{"_index":2543,"title":{},"body":{"components/MapComponent.html":{}}}],["that2.layers[layerindex",{"_index":2544,"title":{},"body":{"components/MapComponent.html":{}}}],["that[key",{"_index":1372,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["then((res",{"_index":109,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{}}}],["then((res:any",{"_index":1027,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["then((res:loginresult",{"_index":2177,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["then(function",{"_index":234,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["then(this.extractdata",{"_index":1234,"title":{},"body":{"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["there's",{"_index":3698,"title":{},"body":{"injectables/UtilityService.html":{}}}],["therefore",{"_index":3529,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["thereof",{"_index":173,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["thi",{"_index":1135,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["things",{"_index":4062,"title":{},"body":{"license.html":{}}}],["third",{"_index":4320,"title":{},"body":{"license.html":{}}}],["this.accessdeniedobjects",{"_index":2668,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.activerefiners",{"_index":3049,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.activerefiners.push(refiner",{"_index":3084,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.activevalue",{"_index":3044,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.addactiverefiner(config",{"_index":3100,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.addactiverefiner(refinerconfig",{"_index":3068,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.addbuttonclass",{"_index":1289,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addbuttontext",{"_index":1278,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addbuttontextclass",{"_index":1286,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addelem(entry",{"_index":1412,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addrendercompleteelement(form.fields",{"_index":2949,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.alwaysactive",{"_index":3041,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.app['_injector",{"_index":1123,"title":{},"body":{"components/DmpFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.applink",{"_index":3800,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.applyeditnotesbuttontext",{"_index":2828,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.arrayproperty",{"_index":1807,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.baseurl",{"_index":868,"title":{},"body":{"classes/BaseService.html":{}}}],["this.baseurl}/${this.config.branding}/${this.config.portal",{"_index":871,"title":{},"body":{"classes/BaseService.html":{}}}],["this.basicsearch",{"_index":3052,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.brandingandportalurl",{"_index":870,"title":{},"body":{"classes/BaseService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["this.brandingandportalurl}/${this.config.collectionrooturi}/${collectionid}/?search",{"_index":1871,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.brandingandportalurl}/${this.config.mintrooturi}/${source}/?search",{"_index":1876,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.brandingandportalurl}/${this.config.userrooturi}/?source=${searchsource}&name",{"_index":1873,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.brandingandportalurl}/${this.config.vocabrooturl}/${vocabid",{"_index":1865,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.brandingandportalurl}/admin/getreportresults?name=`+name+`&start=`+start+`&rows=`+rows",{"_index":3331,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.brandingandportalurl}/dashboard/${rectype",{"_index":2966,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.brandingandportalurl}/external/vocab/${provider",{"_index":1878,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.brandingandportalurl}/listrecords?recordtype=${recordtype}&editonly=true&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":988,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.brandingandportalurl}/record/form/${recordtype}?edit=${editable}&ts=${ts",{"_index":2935,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.brandingandportalurl}/record/form/auto/${oid}?edit=${editable}&ts=${ts}&formname=${formname",{"_index":2934,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.canceleditnotesbuttontext",{"_index":2826,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.cansort",{"_index":1443,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.changeref.detectchanges",{"_index":567,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.checkifhasloaded",{"_index":1590,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["this.classes",{"_index":2040,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.classes[f.class",{"_index":1951,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.class].comp",{"_index":1983,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.class].comp[0",{"_index":1982,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.clname].lookupservice",{"_index":1997,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.clear",{"_index":3050,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.clname",{"_index":1433,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.cols",{"_index":2606,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.columns",{"_index":2670,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.columntitle",{"_index":3253,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.comparefn.bind(this",{"_index":450,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.completerservice",{"_index":1730,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.completerservice.local(this.sourcedata",{"_index":1739,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.completerservice.remote(url",{"_index":1754,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.completionlabel",{"_index":726,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.completionratetype",{"_index":702,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.component",{"_index":1726,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.component.ngcompleter",{"_index":1727,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.component.ngcompleter.ctrinput.nativeelement.value",{"_index":1728,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.componentfactoryresolver",{"_index":1117,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.field.compclass",{"_index":1120,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.config",{"_index":867,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["this.config.baseurl",{"_index":869,"title":{},"body":{"classes/BaseService.html":{}}}],["this.config.branding",{"_index":3648,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.config.csrftoken",{"_index":887,"title":{},"body":{"classes/BaseService.html":{}}}],["this.config.maxsearchrowsperpage",{"_index":1025,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.config.maxtransferrowsperpage",{"_index":982,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.config.portal",{"_index":3650,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.config['csrftoken",{"_index":916,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.configservice",{"_index":863,"title":{},"body":{"classes/BaseService.html":{},"injectables/FieldControlMetaService.html":{}}}],["this.configservice.getconfig((config:any",{"_index":866,"title":{},"body":{"classes/BaseService.html":{}}}],["this.controltype",{"_index":1663,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.converttoitem(mintdataitem",{"_index":1832,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.coordinateshelp",{"_index":2497,"title":{},"body":{"components/MapComponent.html":{}}}],["this.coordinateshelpshow",{"_index":2584,"title":{},"body":{"components/MapComponent.html":{}}}],["this.createnewelem(basefield",{"_index":1332,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.createnewelem(this.fields[0",{"_index":1375,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.criteria",{"_index":745,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.csrftoken",{"_index":911,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cssclasses",{"_index":2597,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.currentuser",{"_index":2292,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.currentuser.newroles",{"_index":2294,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.currentuser.roles",{"_index":2313,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.currentuser.rolestr",{"_index":2315,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.dashboardservice",{"_index":3256,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.dashboardservice.getallrecordscanedit(this.recordtype,'').then((draftplans",{"_index":3258,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.dataservice",{"_index":1738,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.datecompletedlabel",{"_index":715,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.dateformat",{"_index":735,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.datepickeropts",{"_index":1574,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.datestartedlabel",{"_index":711,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.defaultdrawoptions",{"_index":2465,"title":{},"body":{"components/MapComponent.html":{}}}],["this.defaultleafletoptions",{"_index":2471,"title":{},"body":{"components/MapComponent.html":{}}}],["this.defaultvalue",{"_index":2600,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.delegateerrorhandling",{"_index":1302,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.disabled",{"_index":1095,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["this.disabledelements",{"_index":1078,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.disableeditafterselect",{"_index":1682,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.disableinput",{"_index":1901,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.doaction",{"_index":535,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.document.location.href",{"_index":2182,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.drawlayers",{"_index":2557,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawnitems",{"_index":2448,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawnitems.clearlayers",{"_index":2550,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawoptions",{"_index":2487,"title":{},"body":{"components/MapComponent.html":{}}}],["this.editingnotes",{"_index":2868,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editingnotes.notes",{"_index":2874,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editmode",{"_index":2505,"title":{},"body":{"components/MapComponent.html":{}}}],["this.editnotesbuttontext",{"_index":2822,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editnotescssclasses",{"_index":2831,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editnotestitle",{"_index":2824,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.emitconfig",{"_index":908,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.emitinit",{"_index":873,"title":{},"body":{"classes/BaseService.html":{}}}],["this.expandcollapseall",{"_index":500,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.extractdata(res",{"_index":110,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["this.failedobjects",{"_index":2669,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.fb.group",{"_index":2165,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.fcmetaservice.getfieldsmeta(fieldsarr",{"_index":2054,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.fcmetaservice.getfieldsmeta(form.fields",{"_index":2951,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.fcmetaservice.getlookupdata(fields",{"_index":2055,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.fcmetaservice.getlookupdata(form.fieldsmeta).flatmap((fields:any",{"_index":2922,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.field",{"_index":410,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.field.addelem",{"_index":1426,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.field.additionaldata",{"_index":546,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.allexpanded",{"_index":499,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.applink}${this.field.workspaceapp.name}/edit?rdmp=${this.field.rdmp",{"_index":3855,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["this.field.closeonsave",{"_index":550,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.component",{"_index":1883,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.confirmationmessage",{"_index":533,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.controltype",{"_index":459,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.currenttab",{"_index":566,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.disableeditafterselect",{"_index":1894,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.editmode",{"_index":612,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.expandaccordionsonopen",{"_index":498,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.fieldmap._rootcomp.getsubscription('recordcreated",{"_index":762,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.fieldmap._rootcomp.oid",{"_index":233,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{}}}],["this.field.fieldmap._rootcomp.subscribe('recordcreated",{"_index":765,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.fields.length",{"_index":1489,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0].basemargintop",{"_index":1479,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0].componentreactors.push(this",{"_index":1480,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0].margintop",{"_index":1478,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0]['showheader",{"_index":1477,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[i].margintop",{"_index":1498,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[newidx].basemargintop",{"_index":1500,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[newidx].margintop",{"_index":1499,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.filteredplans",{"_index":3283,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.field.filteredplans.length",{"_index":3284,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.field.formatvalue(this.getformcontrol().value",{"_index":618,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.formatvaluefordisplay",{"_index":2614,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.field.formmodel",{"_index":427,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.formmodel.haserror('required",{"_index":429,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.formmodel.setvalue(this.field.getvalue(this.field.searchstr",{"_index":1913,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.formmodel.touched",{"_index":428,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.getcontrol(name",{"_index":412,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.gettabid(step",{"_index":573,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.gettabs",{"_index":561,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.gettitle(this.field.value",{"_index":1915,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.getversionlabel(attachment",{"_index":2726,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.groupclasses",{"_index":424,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.init",{"_index":3851,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["this.field.initmap(this.field.map",{"_index":2583,"title":{},"body":{"components/MapComponent.html":{}}}],["this.field.isdelete",{"_index":542,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.isdisabledfn",{"_index":556,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.label",{"_index":614,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.latestpdf",{"_index":2705,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.listentype",{"_index":781,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.name",{"_index":408,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.onchange.updateconf",{"_index":600,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.onitemselect.emit(selected['originalobject",{"_index":1895,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.options['disabledexpression",{"_index":1082,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.field.pdfattachments.push(attachment",{"_index":2711,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.pdfattachments.sort(function",{"_index":2714,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.progressarr",{"_index":797,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.progressarr.push(progress",{"_index":801,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.publishparametervalue(paramvalue",{"_index":625,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.recordservice.executeaction(this.field.targetaction,{oid",{"_index":232,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.field.recordsservice.getasyncprogress(fq).then(progressarr",{"_index":776,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.recordsservice.getattachments(oid",{"_index":2698,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.recordsservice.getbrandingandportalurl}/record/${location",{"_index":2867,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.field.recordsservice.getbrandingandportalurl}/record/${oid}/datastream?datastreamid=${attachment.label",{"_index":2723,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.recordsservice.subscribetoasyncprogress(`${this.field.relatedrecordid",{"_index":789,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.recordsservice.subscribetoasyncprogress(progress.id",{"_index":782,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.recordsservice.subscribetoasyncprogress(this.field.relatedrecordid",{"_index":788,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.redirectlocation",{"_index":552,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.registerevents",{"_index":3852,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["this.field.relatedrecordid",{"_index":756,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.removeelem(i",{"_index":1428,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.field.required",{"_index":432,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.restricttoselection",{"_index":1912,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.searchfiltername",{"_index":3281,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.field.setfieldmapentry(this.fieldmap",{"_index":1142,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["this.field.setvalue(null",{"_index":1906,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.setvalue(this.field.getvalue(selected.title",{"_index":1899,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.setvalue(this.field.getvalue(selected['originalobject",{"_index":1900,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.setvalue(this.field.getvalue(this.field.searchstr",{"_index":1910,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.field.submitting",{"_index":231,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.field.swap(i",{"_index":1497,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.targetstep",{"_index":544,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.tasktype",{"_index":790,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.field.useversionlabelforfilename",{"_index":2724,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.value",{"_index":2865,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.field.value[this.editingnotes.index].notes",{"_index":2873,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.fieldanchor",{"_index":1084,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldanchor.clear",{"_index":1118,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldanchor.createcomponent(compfactory",{"_index":1122,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap",{"_index":409,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp",{"_index":3773,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.delete",{"_index":543,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.fields",{"_index":2513,"title":{},"body":{"components/MapComponent.html":{}}}],["this.fieldmap._rootcomp.getfieldwithid(this.maintabid",{"_index":2512,"title":{},"body":{"components/MapComponent.html":{}}}],["this.fieldmap._rootcomp.gototab(focustabid",{"_index":571,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.gototab(tabid",{"_index":574,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.oid",{"_index":2695,"title":{},"body":{"components/PDFListComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.onsubmit().subscribe(response",{"_index":3854,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["this.fieldmap._rootcomp.onsubmit(null",{"_index":547,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.onsubmit(this.field.targetstep",{"_index":545,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.recordcreated.subscribe(this.setoid.bind(this",{"_index":3813,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.recordsaved.subscribe(this.setoid.bind(this",{"_index":3814,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.relatedrecordid",{"_index":2774,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["this.fieldmap._rootcomp.setrelatedrecordid(null",{"_index":3270,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.fieldmap._rootcomp.setrelatedrecordid(record.oid",{"_index":3266,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.fieldmap._rootcomp.setrelatedrecordid(this.value.oid",{"_index":3272,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.fieldmap._rootcomp[this.field.isdisabledfn",{"_index":557,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp[this.field.onclick_rootfn",{"_index":555,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap[this.field.name].instance",{"_index":1144,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap[this.versioncolumnvaluefield].field.value",{"_index":2688,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.fieldnames",{"_index":1675,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.fields",{"_index":1324,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields.length",{"_index":1420,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields.push(newelem",{"_index":1378,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0",{"_index":1322,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].createformmodel",{"_index":1311,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].getgroup(grp",{"_index":1310,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].isgroup",{"_index":1306,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].setmissingfields(val",{"_index":1447,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].setvalue(null",{"_index":1419,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[fromidx",{"_index":1390,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[index].component.onselect(selected",{"_index":1436,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[index].component.onselect(value",{"_index":1446,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[index].setvalue(value",{"_index":1396,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[toidx",{"_index":1389,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.filteredplans",{"_index":3274,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.filteredusers",{"_index":2288,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.flattenfields(f.fields",{"_index":1991,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.flattenfields(fields",{"_index":1993,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.forceclone",{"_index":1284,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.form",{"_index":1079,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/LocalAuthComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.form.controls",{"_index":1080,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.form.controls['username'].haserror('required",{"_index":2186,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.form.controls[this.field.name].valid",{"_index":1081,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.form.status",{"_index":2170,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.form.value.password",{"_index":2176,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.form.valuechanges.subscribe(data",{"_index":2168,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.formatdates(this.extractdata(res",{"_index":998,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.formatdates(this.extractdata(res))as",{"_index":984,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.formmodel",{"_index":1316,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.at(fromidx",{"_index":1393,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.at(toidx",{"_index":1391,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.controls.length",{"_index":1411,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.markasdirty",{"_index":2840,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.formmodel.markastouched",{"_index":228,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.formmodel.patchvalue(this.layergeojson",{"_index":2559,"title":{},"body":{"components/MapComponent.html":{}}}],["this.formmodel.patchvalue(value",{"_index":224,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PDFListComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.formmodel.push(newformmodel",{"_index":1381,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.removeat(index",{"_index":1385,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.setcontrol(fromidx",{"_index":1394,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.setcontrol(toidx",{"_index":1392,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.setvalidators([validators.required",{"_index":1719,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.formmodel.setvalue(null",{"_index":1724,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.formmodel.setvalue(value",{"_index":1796,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{}}}],["this.generatetemplatestring(templatestring",{"_index":3470,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["this.getclonecustomizer",{"_index":1357,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.getclonecustomizer(f",{"_index":1365,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.getcompleterdescription(data",{"_index":1842,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.geterrors",{"_index":2172,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.getfieldsmeta(f.definition.fields",{"_index":1987,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getfieldvaluepair(fldname",{"_index":1787,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.getformcontrol",{"_index":471,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.getformcontrol().setvalue(targetval",{"_index":599,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.getformfields(recordtype",{"_index":2939,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.getformfieldsmeta(recordtype",{"_index":2920,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.getfrominjector(dashboardservice",{"_index":3257,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.getfrominjector(recordsservice",{"_index":220,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AsynchComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.getfrominjector(workspacetypeservice",{"_index":3786,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.getinjectedservice('configservice').config",{"_index":1972,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getinjectedservice('utilityservice",{"_index":1970,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getinjectedservice(lookupservicename",{"_index":1999,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getoptions(headersobj",{"_index":888,"title":{},"body":{"classes/BaseService.html":{}}}],["this.getoptionsclient",{"_index":872,"title":{},"body":{"classes/BaseService.html":{},"injectables/EmailNotificationService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/UserSimpleService.html":{}}}],["this.getoptionsclient()).topromise",{"_index":2969,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.getpropertyfromobject(data",{"_index":3726,"title":{},"body":{"injectables/UtilityService.html":{}}}],["this.getrefinerconfig(name",{"_index":3098,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.gettargetstepparam(targetstep",{"_index":2956,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.gettitle(data",{"_index":1737,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.gettitle(this.value",{"_index":1715,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.gettitle(value",{"_index":1797,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.gettranslated(`${this.options.statuslabel",{"_index":752,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(option['label",{"_index":3798,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.gettranslated(options.coordinateshelp",{"_index":2498,"title":{},"body":{"components/MapComponent.html":{}}}],["this.gettranslated(options['applyeditnotesbuttontext",{"_index":2829,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['canceleditnotesbuttontext",{"_index":2827,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['completionlabel",{"_index":728,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['datecompletedlabel",{"_index":717,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['datestartedlabel",{"_index":713,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['editnotesbuttontext",{"_index":2823,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['editnotestitle",{"_index":2825,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['lastupdatelabel",{"_index":732,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['locationheader",{"_index":2836,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['messagelabel",{"_index":724,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['namelabel",{"_index":707,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['notesheader",{"_index":2838,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['open",{"_index":3788,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.gettranslated(options['savefirst",{"_index":3791,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.gettranslated(options['startedbylabel",{"_index":721,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['statuslabel",{"_index":710,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.gettranslated(options['typeheader",{"_index":2834,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(this.versioncolumnlabelkey",{"_index":2693,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.geturlparameter('focustabid",{"_index":569,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.geturlparameter(this.field.parametername",{"_index":623,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.googlehybrid",{"_index":2477,"title":{},"body":{"components/MapComponent.html":{}}}],["this.googlemaps",{"_index":2468,"title":{},"body":{"components/MapComponent.html":{}}}],["this.groupname",{"_index":1339,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.hasclearbutton",{"_index":1573,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.hasgroup",{"_index":1277,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.hasloaded",{"_index":2111,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.haslookup",{"_index":1660,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.hasrequirederror",{"_index":425,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.hasvalue",{"_index":3201,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["this.helpshow",{"_index":430,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.hideconfirmdlg",{"_index":553,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.http",{"_index":862,"title":{},"body":{"classes/BaseService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.http.delete(`${this.brandingandportalurl}/record/delete/${oid",{"_index":3028,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${searchurl",{"_index":1924,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.http.get(`${searchurl}`).map((res",{"_index":1829,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.http.get(`${this.baseurl}/user/info",{"_index":3644,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/admin/getreport?name=`+name",{"_index":3327,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/admin/roles/get",{"_index":3342,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/admin/users/get",{"_index":3654,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/ands/vocab/resourcedetails?uri=${uri}&vocab=${vocab",{"_index":106,"title":{},"body":{"injectables/ANDSService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/asynch?fq=${fq",{"_index":3023,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?${recordtype}${packagetype}${state}${sort}&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":1012,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?recordtype=rdmp&state=draft&editonly=true&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":983,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?recordtype=rdmp&state=draft&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":997,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?state=active&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":995,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/${oid}/attachments",{"_index":2968,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/${oid}/permissions",{"_index":3017,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/metadata/`+oid",{"_index":3015,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/search/${params.recordtype}/?searchstr=${params.basicsearch}${refinedsearchstr",{"_index":3007,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/type",{"_index":3011,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/type/${name",{"_index":3009,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/wfsteps/${name",{"_index":3013,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/searchplans?start=${start}&rows=${rows}&query=${basicsearch}&facets=${facets}&ts=${moment().unix",{"_index":1026,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/transferconfig/${recordtype",{"_index":2981,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/workspaces/types",{"_index":3862,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["this.http.get(`/csrftoken`).mergemap((csrfres:any",{"_index":910,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(`/dynamic/apiclientconfig?v=${new",{"_index":913,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(url",{"_index":991,"title":{},"body":{"injectables/DashboardService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{}}}],["this.http.post(`${this.baseurl}/user/login_local",{"_index":3651,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/action/${action",{"_index":3020,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/roles/user",{"_index":3343,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/genkey",{"_index":3658,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/newuser",{"_index":3657,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/revokekey",{"_index":3659,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/update",{"_index":3655,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/api/sendnotification",{"_index":1233,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/record/editors/modify",{"_index":2971,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/record/responsibility/update",{"_index":2977,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/record/workflow/step/${targetstep}/${oid",{"_index":2964,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/recordmeta/${recordtype",{"_index":2955,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/user/genkey",{"_index":3661,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/user/revokekey",{"_index":3662,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/user/update",{"_index":3660,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(this.url,{options:{query",{"_index":1803,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.http.put(`${this.brandingandportalurl}/recordmeta/${oid",{"_index":2959,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.importdatastring",{"_index":2565,"title":{},"body":{"components/MapComponent.html":{}}}],["this.importfailed",{"_index":2566,"title":{},"body":{"components/MapComponent.html":{}}}],["this.index",{"_index":418,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.initconfig",{"_index":906,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.initialvalue",{"_index":1716,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.initlookupdata",{"_index":1722,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.initsubject",{"_index":864,"title":{},"body":{"classes/BaseService.html":{}}}],["this.initsubject.next(this",{"_index":876,"title":{},"body":{"classes/BaseService.html":{}}}],["this.initsubject.subscribe(handler",{"_index":875,"title":{},"body":{"classes/BaseService.html":{}}}],["this.initsubs",{"_index":2260,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.initsubs.unsubscribe",{"_index":2262,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.inittranslator",{"_index":3505,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.inittranslator(translationservice",{"_index":1580,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["this.injector",{"_index":1351,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.injector.get(token",{"_index":434,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.isembedded",{"_index":1131,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.islistening",{"_index":771,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.isloading",{"_index":2107,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.islogindisabled",{"_index":2169,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.lastupdatelabel",{"_index":730,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.layergeojson",{"_index":2493,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layers",{"_index":2553,"title":{},"body":{"components/MapComponent.html":{}}}],["this.leafletoptions",{"_index":2479,"title":{},"body":{"components/MapComponent.html":{}}}],["this.lines",{"_index":2611,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.listentype",{"_index":739,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.loaded",{"_index":1886,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.locale",{"_index":754,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.locationheader",{"_index":2835,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.locationservice.prepareexternalurl(`export/record/download/csv?before=${before}&after=${after}&rectype=${this.record_type",{"_index":1597,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.loginmessage",{"_index":2184,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.lookupservice",{"_index":1731,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.lookupservice.getcollectionrooturl(this.vocabid",{"_index":1741,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.lookupservice.getexternalserviceurl(this.provider",{"_index":1760,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.lookupservice.getmintrooturl(this.vocabid",{"_index":1756,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.lookupservice.getuserlookupurl",{"_index":1742,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.lookupservice.http",{"_index":1758,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.maintabid",{"_index":2495,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map",{"_index":2500,"title":{},"body":{"components/MapComponent.html":{}}}],["this.masterdrawoptions",{"_index":2490,"title":{},"body":{"components/MapComponent.html":{}}}],["this.masterleafletoptions",{"_index":2486,"title":{},"body":{"components/MapComponent.html":{}}}],["this.messagelabel",{"_index":722,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.modafter",{"_index":1595,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.modbefore",{"_index":1591,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.movedownbuttonclass",{"_index":1300,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.moveupbuttonclass",{"_index":1296,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.name",{"_index":407,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.namelabel",{"_index":705,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.newlocation",{"_index":2843,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.next(matches",{"_index":1812,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.notesheader",{"_index":2837,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.onapplyfilter.emit(this.refinerconfig",{"_index":3203,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["this.onfilterchange",{"_index":2342,"title":{},"body":{"components/ManageRolesComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.onremovebtnclick.emit([event",{"_index":1422,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.onstart.bind(this",{"_index":792,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.onstop.bind(this",{"_index":794,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.onupdate.bind(this",{"_index":796,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.onvalueupdate.emit(data",{"_index":2772,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{}}}],["this.open",{"_index":3787,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.options",{"_index":107,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["this.options['disabledexpression",{"_index":2770,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["this.origdisabledexpr",{"_index":2767,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["this.parametername",{"_index":3115,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["this.parentid",{"_index":1129,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.pdfattachments",{"_index":2675,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.placeholder",{"_index":1679,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.plans",{"_index":3259,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.populateformgroup(field.fields",{"_index":2052,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.populateformgroup(fields",{"_index":2042,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.provider",{"_index":1692,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.rdmp",{"_index":3793,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.record_type",{"_index":1588,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.recordservice",{"_index":219,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.recordsservice",{"_index":750,"title":{},"body":{"components/AsynchComponent.html":{},"components/ExportFormComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.recordsservice.getalltypes().then((typeconfs",{"_index":1583,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.recordsservice.getrecordmeta(oid).then(data",{"_index":3118,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["this.recordsservice.getrecordmeta(oid).then(record",{"_index":2853,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.recordsservice.getrecordmeta(this.value).then(data",{"_index":2771,"title":{},"body":{"components/PublishDataLocationRefreshComponent.html":{}}}],["this.recordtype",{"_index":3048,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.rectypenames",{"_index":1584,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.rectypenames.push(typeconf.name",{"_index":1587,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.rectypenames[0",{"_index":1589,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.refinerconfig",{"_index":3061,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.refinerconfig.activevalue",{"_index":3202,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["this.registermapeventhandlers(map",{"_index":2501,"title":{},"body":{"components/MapComponent.html":{}}}],["this.relatedobjects",{"_index":2667,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.relatedobjectselected.emit(record.oid",{"_index":3268,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.relatedrecordid",{"_index":699,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.removebuttonclass",{"_index":1294,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.removebuttontext",{"_index":1280,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.removebuttontextclass",{"_index":1292,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.removeelem(idx",{"_index":1416,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.required",{"_index":1317,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.resetselectorevent.emit",{"_index":3271,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.restricttoselection",{"_index":1687,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.resultarrayproperty",{"_index":1694,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.roles",{"_index":2264,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.rolesservice.updateuserroles(this.currentuser.id",{"_index":2310,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.rows",{"_index":2603,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(url",{"_index":3144,"title":{},"body":{"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.savefirst",{"_index":3790,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.savemsg",{"_index":2321,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.savemsgtype",{"_index":2322,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfields",{"_index":1669,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.searchfieldstr",{"_index":1918,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.searchfilter.name",{"_index":2330,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfilter.prevname",{"_index":2331,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfilter.prevrole",{"_index":2332,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfilter.role",{"_index":2325,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfilter.roles.push({value:role.name",{"_index":2267,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.searchfiltername",{"_index":3280,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.setemptyvalue",{"_index":1721,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.setloading(false",{"_index":2112,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.setsavemessage",{"_index":2291,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.setsavemessage(\"please",{"_index":2307,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.setsavemessage(\"saving",{"_index":2309,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.setsavemessage(saveres.message",{"_index":2318,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.setupeventhandlers(fieldmap",{"_index":2043,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.setvalue(this.layergeojson",{"_index":2502,"title":{},"body":{"components/MapComponent.html":{}}}],["this.setvalue(this.value",{"_index":2694,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.setvalue({oid",{"_index":3262,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.setvalueatelem(idx",{"_index":1413,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.showconfirmdlg",{"_index":534,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.showversioncolumn",{"_index":2676,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.skipclone",{"_index":1282,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.sort",{"_index":3434,"title":{},"body":{"components/SortComponent.html":{}}}],["this.sortchanged.emit({title:this.title",{"_index":3437,"title":{},"body":{"components/SortComponent.html":{}}}],["this.sourcetype",{"_index":1677,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.startedbylabel",{"_index":719,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.startlisten",{"_index":770,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.startswith",{"_index":2672,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.statuslabel",{"_index":708,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.storelabelonly",{"_index":1690,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.stringlabeltofield",{"_index":1684,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.subjects",{"_index":904,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/TranslationService.html":{}}}],["this.subjects['get",{"_index":905,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.subjects['get'].next(this.config",{"_index":909,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.subjects['get'].subscribe(handler",{"_index":907,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.subjects['init",{"_index":3506,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.subjects['init'].next(this",{"_index":3545,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.subjects['init'].subscribe(handler",{"_index":3546,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.synchloading",{"_index":2108,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.tabid",{"_index":2491,"title":{},"body":{"components/MapComponent.html":{}}}],["this.targetaction",{"_index":217,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.tasktype",{"_index":743,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.timepickeropts",{"_index":1572,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.title",{"_index":3035,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.titlecompleterdescription",{"_index":1673,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefieldarr",{"_index":1667,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefieldarr.length",{"_index":1752,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefieldarr[0",{"_index":1753,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefielddelim",{"_index":1671,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefielddelim[idx",{"_index":1776,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefielddelim}${data[fdesc",{"_index":1856,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefielddelim}${data[titlefld",{"_index":1857,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefielddelim}${titleval",{"_index":1768,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.titlefieldname",{"_index":1665,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.translatei18next.init",{"_index":3507,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translatei18next.translate(key",{"_index":3547,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translationservice",{"_index":2011,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/LoadableComponent.html":{}}}],["this.translationservice.t(key",{"_index":2120,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.translator.t('plan",{"_index":1021,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.translatorloaded",{"_index":3544,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translatorready",{"_index":2110,"title":{},"body":{"classes/LoadableComponent.html":{},"injectables/TranslationService.html":{}}}],["this.type",{"_index":2595,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.typeheader",{"_index":2833,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.typelabel",{"_index":3039,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.unflattenflag",{"_index":1696,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.updateprogress(progress",{"_index":803,"title":{},"body":{"components/AsynchComponent.html":{}}}],["this.url}${searchstring",{"_index":1923,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.url}${searchstring}&unflatten=${this.unflattenflag",{"_index":1828,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.users",{"_index":2289,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.users.push(existinguser",{"_index":2283,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["this.userservice.loginlocal(this.form.value.username",{"_index":2175,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.useversionlabelforfilename",{"_index":2679,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.utilityservice",{"_index":2012,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.value",{"_index":221,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.value.length",{"_index":1315,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.value.push(newloc",{"_index":2845,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.value.push(this.newlocation",{"_index":2842,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.value.split(\"\\n",{"_index":2612,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.value=value",{"_index":3273,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.versioncolumnlabelkey",{"_index":2684,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.versioncolumnvaluefield",{"_index":2682,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.vocabfieldlookupservice",{"_index":2010,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.vocabid",{"_index":1661,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["this.waitforinit",{"_index":1581,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.workspaceapp",{"_index":3819,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspaceapps",{"_index":3795,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspacetypeservice",{"_index":3785,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspacetypeservice.getbrand",{"_index":3801,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspacetypeservice.getworkspacetypes().then(response",{"_index":3802,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this[lookupservicename",{"_index":2003,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["thom",{"_index":1228,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["those",{"_index":3064,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["though",{"_index":4477,"title":{},"body":{"license.html":{}}}],["threatened",{"_index":4124,"title":{},"body":{"license.html":{}}}],["three",{"_index":4377,"title":{},"body":{"license.html":{}}}],["through",{"_index":3062,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["throw",{"_index":2521,"title":{},"body":{"components/MapComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/WorkspaceFieldComponent.html":{}}}],["thus",{"_index":4277,"title":{},"body":{"license.html":{}}}],["tiles",{"_index":2389,"title":{},"body":{"components/MapComponent.html":{}}}],["time",{"_index":609,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["time'},{'name",{"_index":267,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["timepickeropts",{"_index":1517,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["times",{"_index":532,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ManageRolesComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["title",{"_index":1022,"title":{},"body":{"injectables/DashboardService.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"components/SortComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["title:record.title",{"_index":3264,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["titlecompleterdescription",{"_index":1647,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titlefieldarr",{"_index":1621,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titlefielddelim",{"_index":1622,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titlefieldname",{"_index":1646,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titlefld",{"_index":1764,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titles",{"_index":1745,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titleval",{"_index":1765,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["titleval}${delimpair.suffix",{"_index":1858,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["title}${_.isempty(title",{"_index":1767,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["todelidx",{"_index":1410,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["todo",{"_index":1748,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/ManageRolesComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["toformgroup",{"_index":2020,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["toformgroup(fields",{"_index":2034,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["together",{"_index":2058,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["toggle",{"_index":193,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["toggle'},{'name",{"_index":349,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["toggle=\"modal",{"_index":2729,"title":{},"body":{"components/PDFListComponent.html":{}}}],["toggle=\"tab\"]').on('shown.bs.tab",{"_index":563,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["togglecomponent",{"_index":348,"title":{"components/ToggleComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["togglecoordinateshelp",{"_index":2419,"title":{},"body":{"components/MapComponent.html":{}}}],["togglehelp",{"_index":144,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["toggles",{"_index":199,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["toidx",{"_index":1387,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["token",{"_index":177,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Role.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"classes/User.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["tool",{"_index":2945,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["tools",{"_index":3985,"title":{},"body":{"index.html":{},"license.html":{}}}],["tooltipmodule",{"_index":3433,"title":{},"body":{"components/SortComponent.html":{}}}],["tooltipmodule.forroot",{"_index":949,"title":{},"body":{"modules/DashboardModule.html":{},"modules/ReportModule.html":{},"modules/WorkspaceListModule.html":{}}}],["top",{"_index":1455,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["topright",{"_index":2451,"title":{},"body":{"components/MapComponent.html":{}}}],["topromise",{"_index":108,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["totalitems",{"_index":2750,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["trade",{"_index":4501,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":4500,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":4502,"title":{},"body":{"license.html":{}}}],["transaction",{"_index":4451,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":351,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{}}}],["transfer_owner.component",{"_index":3493,"title":{},"body":{"modules/TransferOwnerModule.html":{}}}],["transferownercomponent",{"_index":350,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["transferownermodule",{"_index":3487,"title":{"modules/TransferOwnerModule.html":{}},"body":{"modules/TransferOwnerModule.html":{},"modules.html":{},"overview.html":{}}}],["transferownerto",{"_index":4973,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["transferred",{"_index":4452,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["transferring",{"_index":4563,"title":{},"body":{"license.html":{}}}],["transform",{"_index":2630,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["transform(templatestring",{"_index":3444,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["transform(templatestring:string",{"_index":3468,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["transform(values",{"_index":2631,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["transform(values:string",{"_index":2636,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["transition",{"_index":4874,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["translate",{"_index":1459,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["translatei18next",{"_index":3498,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translatei18nextmodule",{"_index":3381,"title":{},"body":{"modules/SharedModule.html":{}}}],["translation",{"_index":93,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"injectables/ReportService.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["translationservice",{"_index":35,"title":{"injectables/TranslationService.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"overview.html":{}}}],["translationservice.isready((tservice:any",{"_index":2109,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["translationservice.isready(tservice",{"_index":1582,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["translationservice:translationservice",{"_index":2259,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["translator",{"_index":34,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["translator:translationservice",{"_index":101,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["translatorloaded",{"_index":1530,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"injectables/TranslationService.html":{}}}],["translatorready",{"_index":1520,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"injectables/TranslationService.html":{}}}],["transmission",{"_index":4406,"title":{},"body":{"license.html":{}}}],["treated",{"_index":4476,"title":{},"body":{"license.html":{}}}],["treaty",{"_index":4301,"title":{},"body":{"license.html":{}}}],["tree",{"_index":118,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["treemodule",{"_index":3392,"title":{},"body":{"modules/SharedModule.html":{}}}],["treenode",{"_index":3554,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["treenodecheckboxcomponent",{"_index":353,"title":{"components/TreeNodeCheckboxComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["trigger",{"_index":4915,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["triggervalidation",{"_index":1397,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["true",{"_index":226,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["try",{"_index":2519,"title":{},"body":{"components/MapComponent.html":{}}}],["ts",{"_index":2932,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/TranslationService.html":{},"dependencies.html":{}}}],["tus",{"_index":3958,"title":{},"body":{"dependencies.html":{}}}],["tval",{"_index":593,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tval}${this.field.onchange.control.delim}`}${v[subfield",{"_index":597,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["two",{"_index":4082,"title":{},"body":{"license.html":{}}}],["type",{"_index":41,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["type:\"url",{"_index":2804,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["type:string=\"primary",{"_index":2320,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["typeahead",{"_index":1751,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["typeconf",{"_index":1586,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["typeheader",{"_index":2819,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["typelabel",{"_index":3031,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["typeof",{"_index":2578,"title":{},"body":{"components/MapComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["types",{"_index":4864,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["typescript",{"_index":3961,"title":{},"body":{"dependencies.html":{}}}],["typical",{"_index":4431,"title":{},"body":{"license.html":{}}}],["unacceptable",{"_index":4112,"title":{},"body":{"license.html":{}}}],["undefined",{"_index":701,"title":{},"body":{"components/AsynchComponent.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["under",{"_index":1178,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["understand",{"_index":4860,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["unflattenflag",{"_index":1658,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["unique",{"_index":5030,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["universities",{"_index":3989,"title":{},"body":{"index.html":{}}}],["unless",{"_index":4438,"title":{},"body":{"license.html":{}}}],["unlimited",{"_index":4261,"title":{},"body":{"license.html":{}}}],["unmodified",{"_index":4164,"title":{},"body":{"license.html":{}}}],["unnecessary",{"_index":4288,"title":{},"body":{"license.html":{}}}],["unpacking",{"_index":4472,"title":{},"body":{"license.html":{}}}],["unqiue",{"_index":2507,"title":{},"body":{"components/MapComponent.html":{}}}],["until",{"_index":4530,"title":{},"body":{"license.html":{}}}],["up",{"_index":1298,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["update",{"_index":517,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["update(oid",{"_index":2958,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updated",{"_index":734,"title":{},"body":{"components/AsynchComponent.html":{}}}],["updatedata",{"_index":2976,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updatedata:updatedata",{"_index":2979,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updatemeta",{"_index":4999,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["updateprogress",{"_index":651,"title":{},"body":{"components/AsynchComponent.html":{}}}],["updateprogress(progress",{"_index":665,"title":{},"body":{"components/AsynchComponent.html":{}}}],["updateresponsibilities(records",{"_index":2975,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updates",{"_index":4462,"title":{},"body":{"license.html":{}}}],["updatetitle",{"_index":1725,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["updateuserdetails",{"_index":3623,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserdetails(userid",{"_index":3638,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserprofile",{"_index":3624,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserprofile(details",{"_index":3640,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserroles",{"_index":3338,"title":{},"body":{"injectables/RolesService.html":{}}}],["updateuserroles(userid",{"_index":3339,"title":{},"body":{"injectables/RolesService.html":{}}}],["uppercase",{"_index":3846,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["uppy",{"_index":2802,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["uppy/core",{"_index":3866,"title":{},"body":{"dependencies.html":{}}}],["uppy/dashboard",{"_index":3868,"title":{},"body":{"dependencies.html":{}}}],["uppy/tus",{"_index":3869,"title":{},"body":{"dependencies.html":{}}}],["uri",{"_index":47,"title":{},"body":{"injectables/ANDSService.html":{}}}],["url",{"_index":987,"title":{},"body":{"injectables/DashboardService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"dependencies.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["url':\"url",{"_index":2810,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["url:\"/api/v1.1/harvest/$packagetype",{"_index":5007,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["url=url+'&'+key+\"=\"+params[key",{"_index":3332,"title":{},"body":{"injectables/ReportService.html":{}}}],["urls",{"_index":4986,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["urlvariables",{"_index":579,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["url}&filename=rdmp",{"_index":2725,"title":{},"body":{"components/PDFListComponent.html":{}}}],["url}&filename=rdmp.pdf",{"_index":2728,"title":{},"body":{"components/PDFListComponent.html":{}}}],["usa",{"_index":1210,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["usage",{"_index":518,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["use",{"_index":3987,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["useclass",{"_index":1154,"title":{},"body":{"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/RecordSearchModule.html":{},"overview.html":{}}}],["used",{"_index":4137,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["useful",{"_index":1184,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["user",{"_index":357,"title":{"classes/User.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SaveResult.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["user.email",{"_index":2345,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user.name",{"_index":2344,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user.rolestr",{"_index":2286,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user.service",{"_index":3388,"title":{},"body":{"modules/SharedModule.html":{}}}],["user.username",{"_index":2273,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user/login_aaf",{"_index":5029,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["user:any",{"_index":2271,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user:any)=>{return",{"_index":2293,"title":{},"body":{"components/ManageRolesComponent.html":{}}}],["user_profile.component",{"_index":3612,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["userform",{"_index":3567,"title":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["userid",{"_index":3341,"title":{},"body":{"injectables/RolesService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{}}}],["username",{"_index":2166,"title":{},"body":{"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{}}}],["username:username",{"_index":2973,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["userprofilecomponent",{"_index":356,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"modules/UserProfileModule.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["userprofilemodule",{"_index":3606,"title":{"modules/UserProfileModule.html":{}},"body":{"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":2208,"title":{},"body":{"classes/LoginResult.html":{},"components/ManageRolesComponent.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["users'},{'name",{"_index":292,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["userservice",{"_index":2151,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["userservice.waitforinit((whatever:any",{"_index":2164,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["usersimpleservice",{"_index":2146,"title":{"injectables/UserSimpleService.html":{}},"body":{"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/UserSimpleService.html":{},"overview.html":{}}}],["uses",{"_index":2366,"title":{},"body":{"components/MapComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["useversionlabelforfilename:boolean",{"_index":2666,"title":{},"body":{"components/PDFListComponent.html":{}}}],["using",{"_index":3524,"title":{},"body":{"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["usually",{"_index":4878,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["util",{"_index":1944,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"modules/SharedModule.html":{}}}],["utilises",{"_index":4983,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["utility",{"_index":3664,"title":{},"body":{"injectables/UtilityService.html":{}}}],["utilityservice",{"_index":1361,"title":{"injectables/UtilityService.html":{}},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{},"injectables/UtilityService.html":{},"overview.html":{}}}],["v",{"_index":3753,"title":{},"body":{"injectables/UtilityService.html":{}}}],["v.replace(regtrail",{"_index":3754,"title":{},"body":{"injectables/UtilityService.html":{}}}],["v:any",{"_index":592,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["val",{"_index":442,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["val.location",{"_index":2860,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["val.name",{"_index":2858,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["val.type",{"_index":2848,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["val1",{"_index":3577,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val1.value",{"_index":3581,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val2",{"_index":3579,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val2.value",{"_index":3582,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val:any",{"_index":1384,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["valid",{"_index":1074,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["validation",{"_index":2892,"title":{},"body":{"classes/RbValidator.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["validator",{"_index":3902,"title":{},"body":{"dependencies.html":{}}}],["validatorfn",{"_index":2901,"title":{},"body":{"classes/RbValidator.html":{}}}],["validators",{"_index":673,"title":{},"body":{"components/AsynchComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{}}}],["validators.email",{"_index":3584,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["validators.required",{"_index":1319,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["valobj",{"_index":1780,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["valobj[fldname",{"_index":1790,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["valobj[targetfld",{"_index":1794,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["valobj[this.stringlabeltofield",{"_index":1785,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["value",{"_index":58,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["value'},{'name",{"_index":284,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["value.split(delim",{"_index":3739,"title":{},"body":{"injectables/UtilityService.html":{}}}],["value:any",{"_index":1345,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["valueelem",{"_index":1331,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["valueelem:any",{"_index":1326,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["valueelem[fieldctr",{"_index":1330,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["values",{"_index":2634,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"classes/RbValidator.html":{},"injectables/UtilityService.html":{}}}],["values.push(_.get(data",{"_index":3736,"title":{},"body":{"injectables/UtilityService.html":{}}}],["values.push(v.split(reg).map(item",{"_index":3755,"title":{},"body":{"injectables/UtilityService.html":{}}}],["values[i",{"_index":2640,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["var",{"_index":242,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["variable",{"_index":3423,"title":{},"body":{"components/SortComponent.html":{},"additional-documentation/configuration-guide.html":{}}}],["variable:this.variable",{"_index":3438,"title":{},"body":{"components/SortComponent.html":{}}}],["variables",{"_index":1085,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["variables.imports['moment",{"_index":1089,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["variables.imports[key",{"_index":1088,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["variables['imports",{"_index":3772,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["variety",{"_index":4849,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["verbatim",{"_index":4033,"title":{},"body":{"license.html":{}}}],["version",{"_index":1168,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/PDFListComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["versioncolumnlabelkey",{"_index":2665,"title":{},"body":{"components/PDFListComponent.html":{}}}],["versioncolumnvaluefield:string",{"_index":2664,"title":{},"body":{"components/PDFListComponent.html":{}}}],["versiondate",{"_index":2734,"title":{},"body":{"components/PDFListComponent.html":{}}}],["versions",{"_index":4047,"title":{},"body":{"license.html":{}}}],["versionvalue",{"_index":2687,"title":{},"body":{"components/PDFListComponent.html":{}}}],["versionvalue[versionvalue.length",{"_index":2690,"title":{},"body":{"components/PDFListComponent.html":{}}}],["very",{"_index":4853,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["via",{"_index":4871,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["view",{"_index":4200,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["viewchild",{"_index":381,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["viewchild('datetime",{"_index":611,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["viewchild('field",{"_index":1068,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["viewchild('ngcompleter",{"_index":1881,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["viewcontainerref",{"_index":382,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["viewcssclasses",{"_index":4910,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["viewencapsulation",{"_index":3556,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["viewencapsulation.none",{"_index":3551,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["viewonly",{"_index":4912,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["viewroles",{"_index":4896,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["views/emailtemplates",{"_index":4961,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["violates",{"_index":4467,"title":{},"body":{"license.html":{}}}],["violation",{"_index":4526,"title":{},"body":{"license.html":{}}}],["visible",{"_index":2388,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["vocab",{"_index":45,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["vocab'},{'name",{"_index":328,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["vocab.component",{"_index":1262,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{}}}],["vocab.component.ts",{"_index":1614,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["vocab.component.ts:280",{"_index":1623,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:291",{"_index":1631,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:306",{"_index":1624,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:310",{"_index":1626,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:320",{"_index":1629,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:347",{"_index":2616,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:362",{"_index":2621,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:380",{"_index":2617,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:384",{"_index":2618,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:411",{"_index":2619,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:428",{"_index":2620,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:619",{"_index":2623,"title":{},"body":{"classes/MintRelationshipLookup.html":{}}}],["vocab.component.ts:620",{"_index":2622,"title":{},"body":{"classes/MintRelationshipLookup.html":{}}}],["vocab.component.ts:627",{"_index":2624,"title":{},"body":{"classes/MintRelationshipLookup.html":{}}}],["vocab:string",{"_index":104,"title":{},"body":{"injectables/ANDSService.html":{}}}],["vocabfield",{"_index":1261,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{}}}],["vocabfieldcomponent",{"_index":359,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["vocabfieldlookupservice",{"_index":1859,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["vocabid",{"_index":1642,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["vocabulary",{"_index":1640,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["void",{"_index":52,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["volume",{"_index":4356,"title":{},"body":{"license.html":{}}}],["w",{"_index":4741,"title":{},"body":{"license.html":{}}}],["w['name",{"_index":3822,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["wait",{"_index":760,"title":{},"body":{"components/AsynchComponent.html":{}}}],["waitforinit",{"_index":31,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["waitforinit(handler",{"_index":68,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["waitforinit(servicearr",{"_index":1553,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{}}}],["waive",{"_index":4309,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4712,"title":{},"body":{"license.html":{}}}],["want",{"_index":1099,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["warranties",{"_index":4199,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1186,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["watch",{"_index":4795,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["way",{"_index":2254,"title":{},"body":{"components/ManageRolesComponent.html":{},"license.html":{}}}],["ways",{"_index":4368,"title":{},"body":{"license.html":{}}}],["web",{"_index":4844,"title":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["website",{"_index":2070,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["welcome",{"_index":4742,"title":{},"body":{"license.html":{}}}],["well",{"_index":4180,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["whatever",{"_index":1907,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{},"license.html":{}}}],["whether",{"_index":1963,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["whole",{"_index":1101,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["whose",{"_index":4413,"title":{},"body":{"license.html":{}}}],["wide",{"_index":742,"title":{},"body":{"components/AsynchComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["widely",{"_index":4215,"title":{},"body":{"license.html":{}}}],["widget",{"_index":2369,"title":{},"body":{"components/MapComponent.html":{}}}],["width",{"_index":2073,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["window",{"_index":402,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["window.location.href",{"_index":551,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["window.navigator.language",{"_index":755,"title":{},"body":{"components/AsynchComponent.html":{}}}],["window.open(url",{"_index":1598,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["wipo",{"_index":4300,"title":{},"body":{"license.html":{}}}],["wish",{"_index":4058,"title":{},"body":{"license.html":{}}}],["within",{"_index":2777,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["without",{"_index":1185,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["work",{"_index":4050,"title":{},"body":{"license.html":{}}}],["work's",{"_index":4237,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":4857,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workflow.js",{"_index":4914,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workflow_stagelabel",{"_index":4893,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workflowstep",{"_index":361,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["workflowstepbuttoncomponent",{"_index":360,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["working",{"_index":4216,"title":{},"body":{"license.html":{}}}],["works",{"_index":4040,"title":{},"body":{"license.html":{}}}],["workspace",{"_index":365,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["workspace.component",{"_index":3839,"title":{},"body":{"modules/WorkspaceListModule.html":{}}}],["workspaceapp",{"_index":3783,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["workspaceapps",{"_index":3780,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["workspacefieldcomponent",{"_index":362,"title":{"components/WorkspaceFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["workspacelistcomponent",{"_index":364,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["workspacelistmodule",{"_index":3833,"title":{"modules/WorkspaceListModule.html":{}},"body":{"modules/WorkspaceListModule.html":{},"modules.html":{},"overview.html":{}}}],["workspaces",{"_index":3809,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workspaceselectorcomponent",{"_index":366,"title":{"components/WorkspaceSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["workspaceselectorfield",{"_index":3779,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["workspaceselectorfieldcomponent",{"_index":368,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"overview.html":{}}}],["workspacetypeservice",{"_index":3359,"title":{"injectables/WorkspaceTypeService.html":{}},"body":{"modules/SharedModule.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"overview.html":{}}}],["worldwide",{"_index":4596,"title":{},"body":{"license.html":{}}}],["worries",{"_index":1905,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["wrap",{"_index":2094,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["wrapped",{"_index":604,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["write",{"_index":1199,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["writing",{"_index":4676,"title":{},"body":{"license.html":{}}}],["written",{"_index":4376,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["ws",{"_index":363,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/AsynchComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ManageRolesComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationRefreshComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordPermissionsComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SaveButtonComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["xs",{"_index":1889,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/MintRelationshipLookup.html":{}}}],["xxxxxx",{"_index":5016,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["yarn",{"_index":4778,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["year",{"_index":4729,"title":{},"body":{"license.html":{}}}],["years",{"_index":4378,"title":{},"body":{"license.html":{}}}],["yes",{"_index":526,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"pipes/MultivalueFieldPipe.html":{},"components/ParameterRetrieverComponent.html":{},"components/SaveButtonComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabNavButtonComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["you've",{"_index":4879,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["yourself",{"_index":4613,"title":{},"body":{"license.html":{}}}],["z0",{"_index":3589,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["zone.js",{"_index":3967,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":932,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ANDSService.html":{"url":"injectables/ANDSService.html","title":"injectable - ANDSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ANDSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/ands-service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResourceDetails\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService, translator: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/ands-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getResourceDetails\n                        \n                        \n                    \n                \n            \n            \n                \ngetResourceDetails(uri: string, vocab: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/ands-service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    uri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vocab\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport moment from 'moment-es6';\nimport { BaseService } from '../shared/base-service'\nimport { PlanTable, Plan } from './dashboard-models'\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class ANDSService extends BaseService {\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translator:TranslationService) {\n    super(http, configService);\n  }\n\n  getResourceDetails(uri:string, vocab:string): Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/ands/vocab/resourceDetails?uri=${uri}&vocab=${vocab}`, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionButtonComponent.html":{"url":"components/ActionButtonComponent.html","title":"component - ActionButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/action-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                action-button\n            \n\n\n\n            \n                template\n                \n  Record published at {{ field.value }}\n  {{field.label}}Submitting to CKAN\n  \n  \n  \n  \n\n\n  Record published at {{ field.value }}\n  Record not yet published\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                executeAction\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeAction\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteAction(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/action-button.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nisDisabled()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/action-button.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/action-button.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { AnchorOrButton } from './field-simple';\nimport { RecordsService } from './records.service';\n\nexport class ActionButton extends FieldBase  {\n  targetAction: string;\n  recordService: RecordsService;\n  submitting: boolean = false;\n\n  constructor(options: any, injector:any) {\n    super(options, injector);\n    this.targetAction = options['targetAction'] || null;\n    this.recordService = this.getFromInjector(RecordsService);\n    this.value = options['value'] || null;\n  }\n\n  setValue(value:any) {\n    this.value = value;\n    this.formModel.patchValue(value, {emitEvent: true, emitModelToViewChange:true });\n    this.formModel.markAsTouched();\n  }\n}\n\n// For action buttons\n@Component({\n  selector: 'action-button',\n  template: `\n  \n    Record published at {{ field.value }}\n    {{field.label}}Submitting to CKAN\n    \n    \n    \n    \n  \n  \n    Record published at {{ field.value }}\n    Record not yet published\n  \n  `,\n})\nexport class ActionButtonComponent extends SimpleComponent {\n  field: ActionButton;\n\n  executeAction(event:any) {\n    this.field.submitting = true;\n    let that = this;\n    this.field.recordService.executeAction(this.field.targetAction,{oid: this.field.fieldMap._rootComp.oid})\n    .then(function (response) {\n      that.field.submitting = false;\n      that.field.setValue(\"http://203.101.227.135:5000/dataset/\"+that.field.fieldMap._rootComp.oid);\n      that.fieldMap._rootComp.onSubmit().subscribe();\n    });\n\n  }\n\n  isDisabled() {\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Record published at {{ field.value }}  {{field.label}}Submitting to CKAN          Record published at {{ field.value }}  Record not yet published'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnchorOrButtonComponent.html":{"url":"components/AnchorOrButtonComponent.html","title":"component - AnchorOrButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AnchorOrButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                anchor-button\n            \n\n\n\n            \n                template\n                {{field.label}}\n&nbsp;{{field.label}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDisabled\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDisabled()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:554\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:550\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AnchorOrButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:548\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.label}} {{field.label}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnchorOrButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AngularPage.html":{"url":"classes/AngularPage.html","title":"class - AngularPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParagraphText\n                        \n                        \n                    \n                \n            \n            \n                \ngetParagraphText()\n                \n            \n\n\n            \n                \n                    Defined in angular/e2e/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in angular/e2e/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AngularPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AsynchComponent.html":{"url":"components/AsynchComponent.html","title":"component - AsynchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AsynchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-asynch.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display asynchronous processes\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                asynch-component\n            \n\n\n\n\n            \n                templateUrl\n                ./field-asynch.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                    Public\n                                isListening\n                            \n                            \n                                    Public\n                                locale\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formatDateForDisplay\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onStart\n                            \n                            \n                                    Public\n                                onStop\n                            \n                            \n                                    Public\n                                onUpdate\n                            \n                            \n                                    Protected\n                                startListen\n                            \n                            \n                                    Protected\n                                updateProgress\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-asynch.component.ts:97\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            formatDateForDisplay\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    formatDateForDisplay(value: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onStart\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onStart(progress)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onStop\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onStop(progress)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:166\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onUpdate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onUpdate(progress)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            startListen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startListen()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateProgress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProgress(progress)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-asynch.component.ts:178\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    progress\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AsynchField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isListening\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:96\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            locale\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:97\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ChangeDetectorRef } from '@angular/core';\nimport { PercentPipe } from '@angular/common';\nimport { SimpleComponent } from './field-simple.component';\nimport { NotInFormField } from './field-simple';\nimport { RecordsService } from './records.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/bufferTime';\nimport 'rxjs/add/operator/filter';\nimport moment from 'moment-es6';\n\ndeclare var jQuery: any;\ndeclare var io: any;\n\n/**\n * Async / background tasks field\n *\n * @author Shilo Banihit\n *\n */\nexport class AsynchField extends NotInFormField {\n  public listenType: any;\n  public relatedRecordId: string;\n  public criteria: any;\n  public nameLabel: string;\n  public statusLabel: string;\n  public dateStartedLabel: string;\n  public dateCompletedLabel: string;\n  public startedByLabel: string;\n  public messageLabel: string;\n  public lastUpdateLabel: string;\n  public completionLabel: string;\n  public completionRateType: string;\n  public progressArr: any[];\n  public RecordsService: RecordsService;\n  public dateFormat:string;\n  public taskType: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.relatedRecordId = options['relatedRecordId'] || undefined;\n    this.completionRateType = options['completionRateType'] || 'percentage';\n    this.nameLabel = options['nameLabel'] ? this.getTranslated(options['nameLabel'], options['nameLabel']) : 'Name';\n    this.statusLabel = options['statusLabel'] ? this.getTranslated(options['statusLabel'], options['statusLabel']) : 'Status';\n    this.dateStartedLabel = options['dateStartedLabel'] ? this.getTranslated(options['dateStartedLabel'], options['dateStartedLabel']) : 'Date Started';\n    this.dateCompletedLabel = options['dateCompletedLabel'] ? this.getTranslated(options['dateCompletedLabel'], options['dateCompletedLabel']) : 'Date Completed';\n    this.startedByLabel = options['startedByLabel'] ? this.getTranslated(options['startedByLabel'], options['startedByLabel']) : 'Started By';\n    this.messageLabel = options['messageLabel'] ? this.getTranslated(options['messageLabel'], options['messageLabel']) : 'Message';\n    this.completionLabel = options['completionLabel'] ? this.getTranslated(options['completionLabel'], options['completionLabel']) : 'Completion';\n    this.lastUpdateLabel = options['lastUpdateLabel'] ? this.getTranslated(options['lastUpdateLabel'], options['lastUpdateLabel']) : 'Last Updated';\n    this.dateFormat = options['dateFormat'] || 'L LT';\n    this.listenType = options['listenType'] || \"record\"; // listens to record wide\n    this.taskType = options['taskType'] || '';\n    this.criteria = options['criteria'] || {where: {relatedRecordId: '@oid'}}; // defaults to all happenings for this oid\n\n    this.RecordsService = this.getFromInjector(RecordsService);\n  }\n\n  public getStatusLabel(status) {\n    return this.getTranslated(`${this.options.statusLabel}-${status}`, status);\n  }\n\n}\n/**\n*\n* Component to display asynchronous processes\n*\n*\n*/\n@Component({\n  selector: 'asynch-component',\n  templateUrl: './field-asynch.component.html'\n})\nexport class AsynchComponent extends SimpleComponent {\n  field: AsynchField;\n  public isListening:boolean;\n  public locale;\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n    this.locale = window.navigator.language;\n  }\n\n  public ngOnInit() {\n    let oid = this.field.relatedRecordId || this.field.fieldMap._rootComp.oid;\n    const that = this;\n    if (_.isNull(oid) || _.isUndefined(oid) || _.isEmpty(oid)) {\n      // wait for the OID to be set when record is created\n      if (!this.field.fieldMap._rootComp.getSubscription('recordCreated')) {\n        console.log(`Subscribing to record creation..... ${this.field.name}`);\n        this.field.fieldMap._rootComp.subscribe('recordCreated', this.field.name, (createdInfo) => {\n          that.field.relatedRecordId = createdInfo.oid;\n          that.startListen();\n        });\n      }\n    }\n    if (oid) {\n      this.field.relatedRecordId = this.field.fieldMap._rootComp.oid;\n      this.startListen();\n    }\n  }\n\n  protected startListen() {\n    if (!this.isListening && (!_.isUndefined(this.field.relatedRecordId) && !_.isEmpty(this.field.relatedRecordId))) {\n      const fq = JSON.stringify(this.field.criteria).replace(/@oid/g, this.field.relatedRecordId);\n\n      this.field.RecordsService.getAsyncProgress(fq).then(progressArr => {\n        _.each(progressArr, (progress) => {\n          progress.completionRate = progress.currentIdx / progress.targetIdx;\n          if (this.field.listenType == \"progress\") {\n            this.field.RecordsService.subscribeToAsyncProgress(progress.id, (data, socketRes) => {\n              console.log(`Subscribed to async tasks: ${progress.id}`);\n              console.log(data);\n              console.log(socketRes);\n            });\n          }\n        });\n        if (this.field.listenType == \"record\") {\n          this.field.RecordsService.subscribeToAsyncProgress(this.field.relatedRecordId, (data, socketRes) => {\n            console.log(`Subscribed to async tasks for record: ${this.field.relatedRecordId}`);\n            console.log(data);\n            console.log(socketRes);\n          });\n        } else if (this.field.listenType == \"taskType\") {\n          this.field.RecordsService.subscribeToAsyncProgress(`${this.field.relatedRecordId}-${this.field.taskType}`, (data, socketRes) => {\n            console.log(`Subscribed to async tasks for record with taskType: ${this.field.relatedRecordId}-${this.field.taskType}`);\n            console.log(data);\n            console.log(socketRes);\n          });\n        }\n        io.socket.on('start', this.onStart.bind(this));\n        io.socket.on('stop', this.onStop.bind(this));\n        io.socket.on('update', this.onUpdate.bind(this));\n        this.field.progressArr = progressArr;\n        this.isListening = true;\n      });\n    }\n  }\n\n  public onStart(progress) {\n    console.log(`Got start event:`);\n    console.log(progress);\n    this.field.progressArr ? this.field.progressArr.push(progress) : this.field.progressArr = [progress];\n    this.changeRef.detectChanges();\n  }\n\n  public onStop(progress) {\n    console.log(`Got stop event:`);\n    console.log(progress);\n    this.updateProgress(progress);\n  }\n\n  public onUpdate(progress) {\n    console.log(`Got update event:`);\n    console.log(progress);\n    this.updateProgress(progress);\n  }\n\n  protected updateProgress(progress) {\n\n    const targetProgress = _.find(this.field.progressArr, (prog) => { return prog.id == progress.id; });\n    _.assign(targetProgress, progress);\n    this.changeRef.detectChanges();\n  }\n\n  public formatDateForDisplay(value: string) {\n    return value ? moment(value).locale(this.locale).format(this.field.dateFormat) : '';\n  }\n}\n\n    \n\n    \n        \n  &nbsp;\n   {{ field.label }} \n  \n    \n      \n        {{ field.nameLabel }} \n        {{ field.statusLabel }} \n        {{ field.completionLabel }} \n        {{ field.messageLabel }} \n        {{ field.dateStartedLabel }} \n        {{ field.startedByLabel }} \n        {{ field.lastUpdateLabel }} \n        {{ field.dateCompletedLabel }} \n      \n    \n    \n      \n        {{ progress.name }}\n        {{ field.getStatusLabel(progress.status) }}\n        {{ progress.completionRate | percent:'1.0-0':locale }}\n        {{ progress.message }}\n        {{ formatDateForDisplay(progress.date_started) }}\n        {{ progress.started_by }}\n        {{ formatDateForDisplay(progress.updatedAt) }}\n        {{ formatDateForDisplay(progress.date_completed) }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ field.label }}                     {{ field.nameLabel }}         {{ field.statusLabel }}         {{ field.completionLabel }}         {{ field.messageLabel }}         {{ field.dateStartedLabel }}         {{ field.startedByLabel }}         {{ field.lastUpdateLabel }}         {{ field.dateCompletedLabel }}                             {{ progress.name }}        {{ field.getStatusLabel(progress.status) }}        {{ progress.completionRate | percent:\\'1.0-0\\':locale }}        {{ progress.message }}        {{ formatDateForDisplay(progress.date_started) }}        {{ progress.started_by }}        {{ formatDateForDisplay(progress.updatedAt) }}        {{ formatDateForDisplay(progress.date_completed) }}            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AsynchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/base-service.ts\n        \n\n            \n                Description\n            \n            \n                Base class for all client-side services...\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getBrandingAndPortalUrl\n                                \n                                \n                                    getBaseUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: any, configService: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/base-service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/base-service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getBrandingAndPortalUrl\n                    \n                \n\n                \n                    \n                        getgetBrandingAndPortalUrl()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/base-service.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        getBaseUrl\n                    \n                \n\n                \n                    \n                        getgetBaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/base-service.ts:60\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/mergeMap';\nimport * as _ from \"lodash\";\nimport { Subject } from 'rxjs/Subject';\n/**\n * Base class for all client-side services...\n *\n * Author: Shilo Banihit\n *\n */\nexport class BaseService {\n  protected http: any;\n  protected config: any;\n  protected configService: any;\n  protected baseUrl:string;\n  protected brandingAndPortalUrl:string;\n  protected options: any;\n  protected static __config: any;\n  protected initSubject: any;\n\n  constructor (http: any , configService: any) {\n    this.http = http;\n    this.configService = configService;\n    this.initSubject = new Subject();\n    this.configService.getConfig((config:any) => {\n      this.config = config;\n      this.baseUrl = this.config.baseUrl;\n      this.brandingAndPortalUrl = `${this.baseUrl}/${this.config.branding}/${this.config.portal}`;\n      this.options = this.getOptionsClient();\n      this.emitInit();\n    });\n  }\n\n  public get getBrandingAndPortalUrl() {\n    return this.brandingAndPortalUrl;\n  }\n\n  public get getBaseUrl() {\n    return this.baseUrl;\n  }\n\n  public waitForInit(handler: any) {\n    const subs = this.initSubject.subscribe(handler);\n    this.emitInit();\n    return subs;\n  }\n\n  public getInitSubject() {\n    return this.initSubject;\n  }\n\n  public emitInit() {\n    if (this.config) {\n      this.initSubject.next(this);\n    }\n  }\n\n  getConfig() {\n    return this.config;\n  }\n\n  protected extractData(res: Response, parentField: any = null) {\n    let body = res.json();\n    if (parentField) {\n        return body[parentField] || {};\n    } else {\n        return body || {};\n    }\n  }\n\n  protected getOptions(headersObj: any) {\n    let headers = new Headers(headersObj);\n    return new RequestOptions({ headers: headers });\n  }\n\n  protected getOptionsClient(headersObj: any = {}) {\n    headersObj['X-Source'] = 'jsclient';\n    headersObj['Content-Type'] = 'application/json;charset=utf-8';\n    headersObj['X-CSRF-Token'] = this.config.csrfToken;\n\n    return this.getOptions(headersObj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonBarContainerComponent.html":{"url":"components/ButtonBarContainerComponent.html","title":"component - ButtonBarContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonBarContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                buttonbarcontainer\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonBarContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CancelButtonComponent.html":{"url":"components/CancelButtonComponent.html","title":"component - CancelButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CancelButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        Cancel Button Component\nButton designed to\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cancel-button\n            \n\n\n\n            \n                template\n                {{field.label}}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CancelButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:534\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.label}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CancelButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/config-service.ts\n        \n\n            \n                Description\n            \n            \n                Handles client-side global configuration\nAuthor: Shilo Banihit\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                csrfToken\n                            \n                            \n                                    Protected\n                                subjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitConfig\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                initConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/config-service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            emitConfig\n                        \n                        \n                    \n                \n            \n            \n                \nemitConfig()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/config-service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/config-service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig(handler: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/config-service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initConfig\n                        \n                        \n                    \n                \n            \n            \n                \ninitConfig()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/config-service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/config-service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            csrfToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/config-service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/config-service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/mergeMap';\nimport * as _ from \"lodash\";\n/**\n * Handles client-side global configuration\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class ConfigService {\n  protected config: any;\n  protected subjects: any;\n  public csrfToken: any;\n\n  constructor (@Inject(Http) protected http: any) {\n    this.subjects = {};\n    this.subjects['get'] = new Subject();\n    this.initConfig();\n  }\n\n  getConfig(handler: any): any {\n    const subs = this.subjects['get'].subscribe(handler);\n    this.emitConfig();\n    return subs;\n  }\n\n  emitConfig() {\n    if (this.config) {\n      this.subjects['get'].next(this.config);\n    }\n  }\n\n  initConfig() {\n    this.http.get(`/csrfToken`).mergeMap((csrfRes:any) => {\n      this.csrfToken = csrfRes.json()['_csrf'];\n      return this.http.get(`/dynamic/apiClientConfig?v=${new Date().getTime()}`);\n    })\n    .subscribe((res:any) => {\n      this.config = this.extractData(res);\n      this.config['csrfToken'] = this.csrfToken;\n      console.log(`ConfigService, initialized. `);\n      this.emitConfig();\n    });\n  }\n\n  protected extractData(res: Response, parentField: any = null) {\n    let body = res.json();\n    if (parentField) {\n        return body[parentField] || {};\n    } else {\n        return body || {};\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n    Modules\n    DashboardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_bootstrap\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSortComponent\n\nSortComponent\n\nDashboardModule -->\n\nSortComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/dashboard/app/dashboard.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Dashboard Module\nAuthor: Shilo Banihit\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardComponent\n                        \n                        \n                            SortComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            DashboardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { DashboardComponent }  from './dashboard.component';\nimport { SortComponent } from './sort.component';\nimport { PaginationModule,TooltipModule } from 'ngx-bootstrap';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n/**\n * Dashboard Module\n *\n * Author: Shilo Banihit\n * @param  {[   BrowserModule}           {imports\n * @param  {[type]} HttpModule\n * @param  {[type]} ReactiveFormsModule\n * @param  {[type]} FormsModule\n * @param  {[type]} PaginationModule.forRoot(\n * @return {[type]}\n */\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, PaginationModule.forRoot(), TooltipModule.forRoot(), SharedModule ],\n  declarations: [ DashboardComponent, SortComponent ],\n  providers:    [  ],\n  bootstrap:    [ DashboardComponent ]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/dashboard-service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDates\n                            \n                            \n                                getActivePlans\n                            \n                            \n                                getAllDraftPlansCanEdit\n                            \n                            \n                                getAllRecordsCanEdit\n                            \n                            \n                                getDraftPlans\n                            \n                            \n                                getRecords\n                            \n                            \n                                    Public\n                                searchRecords\n                            \n                            \n                                    Public\n                                setDashboardTitle\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService, translator: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/dashboard-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDates\n                        \n                        \n                    \n                \n            \n            \n                \nformatDates(response: object)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getActivePlans\n                        \n                        \n                    \n                \n            \n            \n                \ngetActivePlans(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllDraftPlansCanEdit\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllDraftPlansCanEdit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllRecordsCanEdit\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllRecordsCanEdit(recordType: string, state: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recordType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDraftPlans\n                        \n                        \n                    \n                \n            \n            \n                \ngetDraftPlans(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecords\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecords(recordType: string, state: string, pageNumber: number, packageType: string, sort: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    recordType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    state\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    packageType\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        undefined\n                                    \n\n                                \n                                \n                                    sort\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        undefined\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            searchRecords\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchRecords(pageNumber: number, basicSearch: string, facets: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    basicSearch\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    facets\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDashboardTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDashboardTitle(planTable: PlanTable, plans: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/dashboard-service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    planTable\n                                    \n                                                PlanTable\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    plans\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport moment from 'moment-es6';\nimport { BaseService } from '../shared/base-service'\nimport { PlanTable, Plan } from './dashboard-models'\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class DashboardService extends BaseService {\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translator:TranslationService) {\n    super(http, configService);\n  }\n\n  getAllDraftPlansCanEdit(): Promise {\n    const rows = this.config.maxTransferRowsPerPage;\n    const start = 0;\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?recordType=rdmp&state=draft&editOnly=true&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n  getAllRecordsCanEdit(recordType:string, state:string): Promise {\n    const rows = this.config.maxTransferRowsPerPage;\n    const start = 0;\n\n    let url = `${this.brandingAndPortalUrl}/listRecords?recordType=${recordType}&editOnly=true&start=${start}&rows=${rows}&ts=${moment().unix()}`;\n    if(state != '') {\n      url += `&state=${state}`;\n    }\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n  getActivePlans(pageNumber:number): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?state=active&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n  getDraftPlans(pageNumber:number): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?recordType=rdmp&state=draft&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res)) as PlanTable);\n  }\n\n  getRecords(recordType:string,state:string,pageNumber:number,packageType:string=undefined, sort:string=undefined): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    recordType = (!_.isEmpty(recordType) && !_.isUndefined(recordType)) ? `recordType=${recordType}` : '';\n    packageType = (!_.isEmpty(packageType) && !_.isUndefined(packageType)) ? `packageType=${packageType}` : '';\n    sort = (!_.isEmpty(sort) && !_.isUndefined(sort)) ? `&sort=${sort}` : '';\n    state = (!_.isEmpty(state) && !_.isUndefined(state)) ? `&state=${state}` : '';\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?${recordType}${packageType}${state}${sort}&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res)) as PlanTable);\n  }\n\n  formatDates(response:object){\n    var items = response[\"items\"];\n    for (var i=0;i {\n      plan.dashboardTitle = (_.isUndefined(plan.title) || _.isEmpty(plan.title) || _.isEmpty(plan.title[0])) ? this.translator.t('plan-with-no-title'): plan.title;\n    });\n  }\n\n  public searchRecords(pageNumber:number, basicSearch: string, facets: any = null) {\n    const rows = this.config.maxSearchRowsPerPage;\n    const start = (pageNumber-1) * rows;\n    return this.http.get(`${this.brandingAndPortalUrl}/searchPlans?start=${start}&rows=${rows}&query=${basicSearch}&facets=${facets}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res:any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateTimeComponent.html":{"url":"components/DateTimeComponent.html","title":"component - DateTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DateTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        Wrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                date-time\n            \n\n\n\n            \n                template\n                \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n\n\n  {{field.label}}\n  {{field.formatValueForDisplay()}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateTime\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatValue\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatValue\n                        \n                        \n                    \n                \n            \n            \n                \nformatValue()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:711\n                \n            \n\n\n            \n                \n                    Component method that formats the value, delegates to field.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:703\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dateTime')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:701\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:699\n                            \n                        \n\n                \n                    \n                        The field model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}                {{field.label}} is required    {{field.validationMessages.required}}    {{field.label}}  {{field.formatValueForDisplay()}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DmpFieldComponent.html":{"url":"components/DmpFieldComponent.html","title":"component - DmpFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DmpFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/dmp-field.component.ts\n\n\n    \n        Description\n    \n    \n        Base component for a DMP field.\nAuthor: Shilo Banihit\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dmp-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disabled\n                            \n                            \n                                    Private\n                                disabledElements\n                            \n                            \n                                disabledExpression\n                            \n                            \n                                fieldAnchor\n                            \n                            \n                                fieldElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDisabled\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                            \n                                parentId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/dmp-field.component.ts:80\n                            \n                        \n\n                \n                    \n                            For DI'ing...\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:42\n                            \n                        \n                \n                    \n                        The model for this field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:55\n                            \n                        \n                \n                    \n                        Field map\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:47\n                            \n                        \n                \n                    \n                        Form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:64\n                            \n                        \n                \n                    \n                        The parentId of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:51\n                            \n                        \n                \n                    \n                        The value of this field.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDisabled()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/dmp-field.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/dmp-field.component.ts:154\n                \n            \n\n\n            \n                \n                    Change handler, instantiates the field component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            disabledElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:80\n                            \n                        \n\n                \n                    \n                        Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledExpression\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldAnchor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:59\n                            \n                        \n\n                \n                    \n                        The DOM node for this field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:74\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/form/dmp-field.component.ts:91\n                                \n                            \n                    \n                        \n                                If the form is valid.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Inject, ViewChild, ViewContainerRef, ComponentFactoryResolver, ComponentRef, ApplicationRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldBase } from './field-base';\nimport { SimpleComponent } from './field-simple.component';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var $: any;\n/**\n * Base component for a DMP field.\n *\n * Author: Shilo Banihit\n *\n */\n@Component({\n  selector: 'dmp-field',\n  template: ''\n})\nexport class DmpFieldComponent {\n  /**\n   * The model for this field.\n   */\n  @Input() field: FieldBase;\n\n  /**\n   * Form group\n   */\n  @Input() form: FormGroup;\n  /**\n   * The value of this field.\n   */\n  @Input() value: any;\n  /**\n   * Field map\n   */\n  @Input() fieldMap: any;\n  /**\n   * The DOM node for this field.\n   */\n  @ViewChild('field', {read: ViewContainerRef}) fieldAnchor: ViewContainerRef;\n\n  /**\n   * The parentId of this field\n   */\n  @Input() parentId: string;\n\n  @Input() isEmbedded: boolean = false;\n\n  @Input() public name: any;\n\n  @Input() public index: number;\n\n  disabledExpression: string;\n\n  @ViewChild('field') fieldElement;\n\n  public disabled:boolean = false;\n  /**\n  * Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n  */\n  private disabledElements: any;\n\n  /**\n   * For DI'ing...\n   */\n  constructor(@Inject(ComponentFactoryResolver) private componentFactoryResolver: ComponentFactoryResolver, protected app: ApplicationRef){\n    this.disabledElements = [];\n  }\n  /**\n   * If the form is valid.\n   */\n  get isValid() {\n    if (this.form && this.form.controls) {\n      return this.form.controls[this.field.name].valid;\n    }\n    return false;\n  }\n\n  /**\n   *\n   */\n  public isDisabled() {\n\n    var disabledExpression = this.field.options['disabledExpression'];\n\n    if(disabledExpression != null) {\n\n      var imports = this.fieldAnchor;\n      var variables= {imports: {}};\n      _.forOwn(this.fieldMap._rootComp, (val, key) => {\n        variables.imports[key] = val;\n      });\n      variables.imports['moment'] = moment;\n      var compiled = _.template(disabledExpression, variables);\n      var parentElement = jQuery(this.fieldElement.nativeElement.parentElement);\n      if(compiled() == \"true\") {\n        if (!this.disabled) {\n          //take note of which elements where already disabled as we dont want to enable them if whole component becomes enabled again\n          this.disabledElements = parentElement.find('*:disabled');\n          parentElement.find('input').prop( \"disabled\", true );\n          parentElement.find('button').filter((index, buttonElem) => {\n            const isHelp = jQuery(buttonElem).find(\"span[class='glyphicon glyphicon-question-sign']\");\n            return isHelp.length  {\n            if (_.isFunction(disabledElement.prop)) {\n              disabledElement.prop(\"disabled\",true)\n            }\n          });\n          this.disabledElements = [];\n          this.disabled = false;\n        }\n        return null;\n      }\n\n    }\n    return null;\n  }\n\n  /**\n   * Change handler, instantiates the field component.\n   */\n  ngOnChanges() {\n    if (!this.field || !this.componentFactoryResolver) {\n      return;\n    }\n    this.fieldAnchor.clear();\n    let compFactory = this.componentFactoryResolver.resolveComponentFactory(this.field.compClass);\n    let fieldCompRef:ComponentRef = > this.fieldAnchor.createComponent(compFactory, undefined, this.app['_injector']);\n    fieldCompRef.instance.injector = this.app['_injector'];\n    fieldCompRef.instance.field = this.field;\n    fieldCompRef.instance.form = this.form;\n    fieldCompRef.instance.fieldMap = this.fieldMap;\n    fieldCompRef.instance.parentId = this.parentId;\n    fieldCompRef.instance.isEmbedded = this.isEmbedded;\n    fieldCompRef.instance.name = this.name;\n    fieldCompRef.instance.index = this.index;\n    // flip thi: make the fields responsible for setting the right fieldMap member\n    this.field.setFieldMapEntry(this.fieldMap, fieldCompRef);\n    //this.fieldMap[this.field.name].instance = fieldCompRef.instance;\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DmpFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DmpModule.html":{"url":"modules/DmpModule.html","title":"module - DmpModule","body":"\n                   \n\n\n\n\n    Modules\n    DmpModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DmpModule\n\n\n\ncluster_DmpModule_declarations\n\n\n\ncluster_DmpModule_DmpFormComponent_providers\n\n\n\ncluster_DmpModule_imports\n\n\n\ncluster_DmpModule_bootstrap\n\n\n\n\nDmpFormComponent\n\nDmpFormComponent\n\n\n\nDmpModule\n\nDmpModule\n\nDmpModule -->\n\nDmpFormComponent->DmpModule\n\n\n\n\n\nDmpFormComponent \n\nDmpFormComponent \n\nDmpFormComponent  -->\n\nDmpModule->DmpFormComponent \n\n\n\n\n\nLocation\n\nLocation\n\nDmpFormComponent -->\n\nLocation->DmpFormComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nDmpFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->DmpFormComponent\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDmpModule -->\n\nSharedModule->DmpModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/dmp/app/dmp.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DmpFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            DmpFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Copyright (c) 2017 Queensland Cyber Infrastructure Foundation (http://www.qcif.edu.au/)\n//\n// GNU GENERAL PUBLIC LICENSE\n//    Version 2, June 1991\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation; either version 2 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this program; if not, write to the Free Software Foundation, Inc.,\n// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nimport { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { DmpFormComponent } from './dmp-form.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, SharedModule ],\n  declarations: [ DmpFormComponent ],\n  providers:    [ ],\n  bootstrap:    [ DmpFormComponent ],\n  entryComponents: [ ]\n})\nexport class DmpModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownFieldComponent.html":{"url":"components/DropdownFieldComponent.html","title":"component - DropdownFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SelectionComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dropdownfield\n            \n\n\n\n            \n                template\n                \n   \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n   \n   \n   \n      \n        {{opt.label}}\n      \n      \n        {{opt.label}}\n      \n   \n   {{field.label}} is required\n   {{field.validationMessages.required}}\n\n\n  {{field.label}}\n  \n  {{getLabel(field.value)}}\n  \n  \n  {{getLabel(field.value.value)}}\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                compare\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compareFn\n                            \n                            \n                                getLabel\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            compareFn\n                        \n                        \n                    \n                \n            \n            \n                \ncompareFn(a, b)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    a\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    b\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(val: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SelectionComponent\n\n                \n            \n            \n                \n                        Defined in         SelectionComponent:149\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DropdownFieldComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:198\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            compare\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.compareFn.bind(this)\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:199\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectionField\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SelectionComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SelectionComponent:147\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{field.label}} {{ getRequiredLabelStr()}}                           {{opt.label}}                    {{opt.label}}            {{field.label}} is required   {{field.validationMessages.required}}  {{field.label}}    {{getLabel(field.value)}}      {{getLabel(field.value.value)}}  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailNotificationService.html":{"url":"injectables/EmailNotificationService.html","title":"injectable - EmailNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/email-service.ts\n        \n\n            \n                Description\n            \n            \n                User related service...\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                headers\n                            \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendNotification\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/email-service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sendNotification\n                        \n                        \n                    \n                \n            \n            \n                \nsendNotification(to: string, template: string, data: any, subject: string, from: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/email-service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    template\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/email-service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/email-service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/email-service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { ConfigService } from '../shared/config-service';\n/**\n * User related service...\n *\n * @author Thom Cuddihy\n *\n */\n@Injectable()\nexport class EmailNotificationService extends BaseService {\n  protected baseUrl: any;\n  protected config: any;\n  protected headers: any;\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  sendNotification(to: string, template: string, data: any = {}, subject: string = null, from: string = null): Promise {\n    var payload = {to: to, template: template, data: data};\n    if (subject) {\n      payload['subject'] = subject;\n    }\n    if (from) {\n      payload['from'] = from;\n    }\n    return this.http.post(`${this.brandingAndPortalUrl}/api/sendNotification`, payload, this.getOptionsClient())\n    .toPromise()\n    .then(this.extractData);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmbeddableComponent.html":{"url":"classes/EmbeddableComponent.html","title":"class - EmbeddableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmbeddableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-repeatable.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SimpleComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-repeatable.component.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-repeatable.component.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:222\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:225\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:224\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:223\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:226\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import { Input, Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { VocabField } from './field-vocab.component';\nimport { Container } from './field-simple';\nimport { FormControl, FormArray, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ContributorField } from './field-contributor.component';\n/**\n * Repeatable Field Container\n *\n * Author: Shilo Banihit\n *\n */\nexport class RepeatableContainer extends Container {\n  addButtonText: string;\n  removeButtonText: string;\n  skipClone: string[];\n  forceClone: any[];\n  addButtonTextClass: any;\n  removeButtonTextClass: any;\n  addButtonClass: any;\n  removeButtonClass: any;\n  moveUpButtonClass: any;\n  moveDownButtonClass: any;\n  delegateErrorHandling: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.hasGroup = true;\n    this.addButtonText = options['addButtonText'] || '';\n    this.removeButtonText = options['removeButtonText'] || null;\n    this.skipClone = options['skipClone'] || [];\n    this.forceClone = options['forceClone'] || [];\n    this.addButtonTextClass = options['addButtonTextClass'] || 'btn btn-success pull-right';\n    this.addButtonClass = options['addButtonClass'] || 'fa fa-plus-circle btn text-20 pull-right btn-success';\n    this.removeButtonTextClass = options['removeButtonTextClass'] || 'btn btn-danger pull-right';\n    this.removeButtonClass = options['removeButtonClass'] || 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n    this.moveUpButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-up btn text-20 pull-left btn-primary';\n    this.moveDownButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-down btn text-20 pull-left btn-primary';\n    this.delegateErrorHandling = !_.isUndefined(options['delegateErrorHandling']) ? options['delegateErrorHandling'] : true;\n  }\n\n  getInitArrayEntry() {\n    if (this.fields[0].isGroup) {\n      const grp = {};\n      const fm = {};\n      const fg = this.fields[0].getGroup(grp, fm);\n      return [fg];\n    }\n    return [this.fields[0].createFormModel()];\n  }\n\n  getGroup(group: any, fieldMap: any) {\n    this.fieldMap = fieldMap;\n    fieldMap[this.name] = {field:this};\n    if (!this.value || this.value.length == 0) {\n      this.formModel = this.required ? new FormArray(this.getInitArrayEntry(), Validators.required) : new FormArray(this.getInitArrayEntry());\n    } else {\n      let fieldCtr = 0;\n      const baseField = this.fields[0];\n      const elems = [];\n      this.fields = _.map(this.value, (valueElem:any) => {\n        let fieldClone = null;\n        if (fieldCtr == 0) {\n          fieldClone = baseField;\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        } else {\n          fieldClone = this.createNewElem(baseField, _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem);\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        }\n        fieldCtr++;\n        elems.push(fieldClone.createFormModel());\n        return fieldClone;\n      });\n      this.formModel = this.required ? new FormArray(elems, Validators.required) : new FormArray(elems);\n      _.each(this.fields, f => {\n        f.setupEventHandlers();\n      });\n    }\n    fieldMap[this.name].control = this.formModel;\n    if (this.groupName) {\n      if (group[this.groupName]) {\n        group[this.groupName].addControl(this.name, this.formModel);\n      } else {\n        const fg = {};\n        fg[this.name] = this.formModel;\n        group[this.groupName] = fg;\n      }\n    } else {\n      group[this.name] = this.formModel;\n    }\n  }\n\n  createNewElem(baseFieldInst: any, value:any = null) {\n    const newOpts = _.cloneDeep(baseFieldInst.options);\n    newOpts.value = value;\n    const newInst = new baseFieldInst.constructor(newOpts, this.injector);\n    _.forEach(this.skipClone, (f: any)=> {\n      newInst[f] = null;\n    });\n\n    _.forEach(this.forceClone, (f: any) => {\n      if (_.isString(f)) {\n        newInst[f] = _.cloneDeepWith(baseFieldInst[f], this.getCloneCustomizer(\n          {\n            skipClone: ['fields', 'fieldMap', 'formModel', 'injector', 'onValueUpdate', 'onValueLoaded', 'translationService', 'utilityService', 'componentReactors'],\n            copy: ['fieldMap', 'injector', 'translationService', 'utilityService']\n          }\n        ));\n      } else {\n        newInst[f.field] = _.cloneDeepWith(baseFieldInst[f.field], this.getCloneCustomizer(f));\n      }\n    });\n\n    if (_.isFunction(newInst.postInit)) {\n      newInst.postInit(value);\n    }\n    return newInst;\n  }\n\n  getCloneCustomizer(cloneOpts:any) {\n    const that = this;\n    return function(value: any, key: any) {\n      if (_.includes(cloneOpts.skipClone, key) ) {\n        if (_.includes(cloneOpts.copy, key)) {\n          return that[key];\n        }\n        return false;\n      }\n    };\n  }\n\n  addElem(val:any = null) {\n    const newElem = this.createNewElem(this.fields[0], val);\n    if (val == null && _.isFunction(newElem.setEmptyValue)) {\n      newElem.setEmptyValue();\n    }\n    this.fields.push(newElem);\n    const newFormModel = newElem.createFormModel();\n    this.formModel.push(newFormModel);\n    return newElem;\n  }\n\n  removeElem(index: number) {\n    _.remove(this.fields, (val:any, idx: number) => { return idx == index });\n    this.formModel.removeAt(index);\n  }\n\n  swap(fromIdx, toIdx) {\n    let temp = this.fields[toIdx];\n    this.fields[toIdx] = this.fields[fromIdx];\n    this.fields[fromIdx] = temp;\n    temp = this.formModel.at(toIdx);\n    this.formModel.setControl(toIdx, this.formModel.at(fromIdx));\n    this.formModel.setControl(fromIdx, temp);\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].setValue(value, true);\n  }\n\n  public triggerValidation() {\n    _.forEach(this.fields, (f:any) => {\n      f.triggerValidation();\n    });\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any) {\n    console.log(`Repeatable container field reacting: ${eventName}`);\n    console.log(eventData);\n    // delete first...\n    for (let toDelIdx = 1; toDelIdx  {\n      if (idx >= this.formModel.controls.length) {\n        this.addElem(entry);\n      } else {\n        this.setValueAtElem(idx, entry);\n      }\n    });\n  }\n\n  public removeAllElems() {\n    _.each(this.fields, (f, idx) => {\n      this.removeElem(idx);\n    });\n  }\n\n  public reset(data=null, eventConfig=null) {\n    this.fields[0].setValue(null);\n    if (this.fields.length > 1) {\n      for (var i=1; i = new EventEmitter();\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  public getGroupClass(fldName:string=null): string {\n    let baseClass = 'form-group';\n    if (this.isEmbedded) {\n      baseClass = '';\n    }\n    return `${baseClass} ${this.hasRequiredError() ? 'has-error' : '' } ${this.field.groupClasses}`;\n  }\n}\n\nexport class RepeatableComponent extends SimpleComponent {\n  field: RepeatableContainer;\n\n  addElem(event: any) {\n    this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n\n  hasRequiredError() {\n    let hasError = false;\n    _.each(this.field.formModel.controls, (c) => {\n      if (c.hasError('required')) {\n        hasError = true;\n        return false;\n      }\n    });\n    return hasError;\n  }\n}\n\nexport class RepeatableVocab extends RepeatableContainer {\n  fields: VocabField[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RepeatableVocab';\n  }\n\n  setValueAtElem(index, value:any) {\n    console.log(`Repeatable vocab setting value at: ${index}`);\n    console.log(value);\n    let selected = {};\n    selected['originalObject'] = value;\n    this.fields[index].component.onSelect(selected, false, true);\n  }\n}\n\n@Component({\n  selector: 'repeatable-vocab',\n  template: `\n  \n    \n      \n      {{field.label}}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableVocabComponent extends RepeatableComponent {\n  field: RepeatableVocab;\n  static clName = 'RepeatableVocabComponent';\n\n}\n\nexport class RepeatableContributor extends RepeatableContainer {\n  fields: ContributorField[];\n  canSort: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.canSort = _.isUndefined(options['canSort']) ? false : options['canSort'];\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].component.onSelect(value, false, true);\n  }\n\n  addElem(val:any = null) {\n    this.fields[0].setMissingFields(val);\n    return super.addElem(val);\n  }\n}\n\n@Component({\n  selector: 'repeatable-contributor',\n  template: `\n  \n    \n      \n        \n          {{field.fields[0].label}} {{getRequiredLabelStr()}}\n          \n        \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      \n         1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n         1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n         1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n         1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    \n      \n        {{field.fields[0].label}}\n      \n      \n        {{field.fields[0].titleColHdr}}\n        {{field.fields[0].nameColHdr}}\n        {{field.fields[0].emailColHdr}}\n        {{field.fields[0].roleColHdr}}\n        {{field.fields[0].orcidColHdr}}\n      \n      \n        {{fieldElem.value.honorific}}\n        {{fieldElem.value.text_full_name}}\n        {{fieldElem.value.email}}\n        {{fieldElem.value.role}}\n        {{fieldElem.value.orcid}}\n      \n    \n  \n  `,\n})\nexport class RepeatableContributorComponent extends RepeatableComponent implements OnInit {\n  field: RepeatableContributor;\n\n  ngOnInit() {\n    this.field.fields[0]['showHeader'] = false;\n    this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    this.field.fields[0].componentReactors.push(this);\n  }\n\n  addElem(event: any) {\n    const newElem:any = this.field.addElem();\n    newElem.marginTop = '0px';\n    newElem.vocabField.initialValue = null;\n    newElem.setupEventHandlers();\n    newElem.showHeader = false;\n    newElem.componentReactors.push(this);\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n    if (i == 0) {\n      this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    }\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any, elem:any) {\n    if (this.field.fields.length > 0) {\n      elem.marginTop = '0px';\n      elem.vocabField.initialValue = eventData;\n      elem.setupEventHandlers();\n      elem.componentReactors.push(this);\n    }\n  }\n\n  public moveUp(event: any, i:number) {\n    const newIdx = i - 1;\n    if (newIdx >= 0) {\n      this.field.swap(i, newIdx);\n      if (newIdx == 0) {\n        this.field.fields[i].marginTop = '';\n        this.field.fields[newIdx].marginTop = this.field.fields[newIdx].baseMarginTop;\n      }\n    }\n  }\n\n  public moveDown(event: any, i:number) {\n    const newIdx = i + 1;\n    if (newIdx \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExportFormComponent.html":{"url":"components/ExportFormComponent.html","title":"component - ExportFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExportFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/export/app/export-form.component.ts\n\n\n    \n        Description\n    \n    \n        Main Export component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n                LoadableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n            \n                providers\n                \n                                Location\n                            { provide: LocationStrategy, useClass: PathLocationStrategy }\n                \n            \n\n\n            \n                selector\n                export-form\n            \n\n\n\n\n            \n                templateUrl\n                ./export-form.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                criticalError\n                            \n                            \n                                datePickerOpts\n                            \n                            \n                                hasClearButton\n                            \n                            \n                                initSubs\n                            \n                            \n                                modAfter\n                            \n                            \n                                modBefore\n                            \n                            \n                                record_type\n                            \n                            \n                                recTypeNames\n                            \n                            \n                                timePickerOpts\n                            \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                download\n                            \n                            \n                                getRecordTypeNames\n                            \n                            \n                                setRecordType\n                            \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elm: ElementRef, LocationService: Location, translationService: TranslationService, recordsService: RecordsService)\n                    \n                \n                        \n                            \n                                Defined in angular/export/app/export-form.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elm\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        LocationService\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recordsService\n                                                  \n                                                        \n                                                                        RecordsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            download\n                        \n                        \n                    \n                \n            \n            \n                \ndownload()\n                \n            \n\n\n            \n                \n                    Defined in angular/export/app/export-form.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRecordTypeNames\n                        \n                        \n                    \n                \n            \n            \n                \ngetRecordTypeNames()\n                \n            \n\n\n            \n                \n                    Defined in angular/export/app/export-form.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRecordType\n                        \n                        \n                    \n                \n            \n            \n                \nsetRecordType(recType, e)\n                \n            \n\n\n            \n                \n                    Defined in angular/export/app/export-form.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    recType\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    e\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfHasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfHasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslated\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslated(key, defValue)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defValue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nhasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTranslator\n                        \n                        \n                    \n                \n            \n            \n                \ninitTranslator(translationService: TranslationService)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translationService\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(loading: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    loading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            synchLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsynchLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translatorLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ntranslatorLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \nwaitForInit(serviceArr: any[], handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceArr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criticalError\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePickerOpts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasClearButton\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modAfter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modBefore\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            record_type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recTypeNames\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timePickerOpts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input, ElementRef } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { LoadableComponent } from './shared/loadable.component';\nimport moment from 'moment-es6';\nimport { TranslationService } from './shared/translation-service';\nimport { RecordsService } from './shared/form/records.service';\nimport * as _ from \"lodash\";\n\n/**\n * Main Export component\n *\n * Author: Shilo Banihit\n *\n */\n@Component({\n  moduleId: module.id,\n  selector: 'export-form',\n  templateUrl: './export-form.html',\n  providers: [Location, { provide: LocationStrategy, useClass: PathLocationStrategy }]\n})\n\nexport class ExportFormComponent extends LoadableComponent {\n  criticalError: any;\n  modBefore: any;\n  modAfter: any;\n  initSubs: any;\n  datePickerOpts: any;\n  timePickerOpts: any;\n  hasClearButton: boolean;\n  recTypeNames: string[];\n  record_type: string;\n\n  constructor(\n    elm: ElementRef,\n    @Inject(Location) protected LocationService: Location,\n    translationService: TranslationService,\n    protected recordsService: RecordsService\n  ) {\n    super();\n    this.timePickerOpts = false;\n    this.hasClearButton = false;\n    this.datePickerOpts = { placeholder: 'dd/mm/yyyy', format: 'dd/mm/yyyy', icon: 'fa fa-calendar' };\n    this.initTranslator(translationService);\n    this.waitForInit([\n      this.recordsService\n    ], () => {\n      translationService.isReady(tService => {\n        this.recordsService.getAllTypes().then((typeConfs: any) => {\n          this.recTypeNames = [];\n          _.each(typeConfs, typeConf => {\n            this.recTypeNames.push(typeConf.name);\n          });\n          this.record_type = this.recTypeNames[0];\n          this.checkIfHasLoaded();\n        });\n\n      });\n    });\n  }\n\n  download() {\n    const before = this.modBefore ? moment(this.modBefore).format('YYYY-MM-DD') : '';\n    const after = this.modAfter ? moment(this.modAfter).format('YYYY-MM-DD') : '';\n    const url = this.LocationService.prepareExternalUrl(`export/record/download/csv?before=${before}&after=${after}&recType=${this.record_type}`);\n    window.open(url, '_blank');\n  }\n\n  getRecordTypeNames() {\n    return this.recTypeNames;\n  }\n\n  setRecordType(recType, e) {\n    if (e) {\n      e.preventDefault();\n    }\n    this.record_type = recType;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n      \n        {{ 'export-modified-after' | translate }} \n        \n          \n        \n      \n      \n        {{ 'export-modified-before' | translate }} \n        \n          \n        \n      \n      \n        \n        \n          \n            \n              {{ 'export-csv-' + record_type  | translate }}\n            \n            \n              \n            \n            \n              \n                \n                  {{ 'export-csv-' + recTypeName  | translate }}\n                \n              \n            \n          \n        \n      \n    \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ \\'export-modified-after\\' | translate }}                                               {{ \\'export-modified-before\\' | translate }}                                                                                           {{ \\'export-csv-\\' + record_type  | translate }}                                                                                                              {{ \\'export-csv-\\' + recTypeName  | translate }}                                                                            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExportFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExportModule.html":{"url":"modules/ExportModule.html","title":"module - ExportModule","body":"\n                   \n\n\n\n\n    Modules\n    ExportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExportModule\n\n\n\ncluster_ExportModule_declarations\n\n\n\ncluster_ExportModule_ExportFormComponent_providers\n\n\n\ncluster_ExportModule_imports\n\n\n\ncluster_ExportModule_bootstrap\n\n\n\n\nExportFormComponent\n\nExportFormComponent\n\n\n\nExportModule\n\nExportModule\n\nExportModule -->\n\nExportFormComponent->ExportModule\n\n\n\n\n\nExportFormComponent \n\nExportFormComponent \n\nExportFormComponent  -->\n\nExportModule->ExportFormComponent \n\n\n\n\n\nLocation\n\nLocation\n\nExportFormComponent -->\n\nLocation->ExportFormComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nExportFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->ExportFormComponent\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nExportModule -->\n\nSharedModule->ExportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/export/app/export.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ExportFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            ExportFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // Copyright (c) 2017 Queensland Cyber Infrastructure Foundation (http://www.qcif.edu.au/)\n//\n// GNU GENERAL PUBLIC LICENSE\n//    Version 2, June 1991\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation; either version 2 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this program; if not, write to the Free Software Foundation, Inc.,\n// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nimport { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ExportFormComponent } from './export-form.component';\nimport { SharedModule } from './shared/shared.module';\nimport { NKDatetimeModule } from 'ng2-datetime/ng2-datetime';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule, NKDatetimeModule ],\n  declarations: [ ExportFormComponent ],\n  providers:    [  ],\n  bootstrap:    [ ExportFormComponent ],\n  entryComponents: [  ]\n})\nexport class ExportModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExternalLookupDataService.html":{"url":"classes/ExternalLookupDataService.html","title":"class - ExternalLookupDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExternalLookupDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-vocab.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n            \n                Implements\n            \n            \n                        CompleterData\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                convertToItem\n                            \n                            \n                                getTitle\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, http: Http, arrayProperty: string, compositeTitleName: string, titleFieldArr: string[], titleFieldDelim: string)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-vocab.component.ts:280\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        arrayProperty\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compositeTitleName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldArr\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldDelim\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:306\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertToItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToItem(data: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:310\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CompleterItem | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle(data: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:320\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(term: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, Injectable, Inject, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs';\nimport { Subject } from \"rxjs/Subject\";\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map'\nimport { Http } from '@angular/http';\nimport { BaseService } from '../base-service';\nimport { CompleterService, CompleterData, CompleterItem } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport * as luceneEscapeQuery from \"lucene-escape-query\";\n/**\n * Vocabulary Field\n *\n * Author: Shilo Banihit\n *\n */\nexport class VocabField extends FieldBase {\n  public searchStr: any;\n  public vocabId: string;\n  public sourceData: any;\n  public completerService: CompleterService;\n  public dataService: CompleterData;\n  public initialValue: any;\n  public titleFieldName: string;\n  public titleFieldArr: string[];\n  public titleFieldDelim: any;\n  public titleCompleterDescription: string;\n  public searchFields: string;\n  public fieldNames: any[];\n  public sourceType: string;\n  public lookupService: any;\n  public placeHolder: string;\n  public disableEditAfterSelect: boolean;\n  public stringLabelToField: string;\n  public component: any;\n  public restrictToSelection: boolean;\n  public storeLabelOnly: boolean;\n  public provider: string;\n  public resultArrayProperty: string;\n  public unflattenFlag: boolean;\n\n  @Output() onItemSelect: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'VocabField';\n    this.hasLookup = true;\n    this.vocabId = options['vocabId'] || '';\n    this.controlType = 'textbox';\n    this.titleFieldName = options['titleFieldName'] || 'title';\n    this.titleFieldArr = options['titleFieldArr'] || [];\n    this.searchFields = options['searchFields'] || '';\n    this.titleFieldDelim = options['titleFieldDelim'] || ' - ';\n    this.titleCompleterDescription = options['titleCompleterDescription'] || '';\n    this.fieldNames = options['fieldNames'] || [];\n    this.sourceType = options['sourceType'] || 'vocab';\n    this.placeHolder = options['placeHolder'] || 'Select a valid value';\n    this.disableEditAfterSelect = options['disableEditAfterSelect'] == undefined ? true : options['disableEditAfterSelect'];\n    this.stringLabelToField = options['stringLabelToField'] ? options['stringLabelToField'] : 'dc_title';\n    this.restrictToSelection = _.isUndefined(options['restrictToSelection']) ? false : options['restrictToSelection'];\n    this.storeLabelOnly = options['storeLabelOnly'] ? options['storeLabelOnly'] : false;\n    this.provider = options['provider'] ? options['provider'] : '';\n    this.resultArrayProperty = options['resultArrayProperty'] ? options['resultArrayProperty'] : '';\n    this.unflattenFlag = _.isUndefined(options['unflattenFlag']) ? false : options['unflattenFlag'];\n  }\n\n  createFormModel(valueElem: any = undefined, createFormGroup: boolean = false) {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n    if (createFormGroup) {\n      const flds = {};\n      _.forEach(this.fieldNames, fld => {\n        _.forOwn(fld, (srcFld, targetFld) => {\n          flds[targetFld] = new FormControl(this.value[targetFld] || '');\n        });\n      });\n      this.formModel = new FormGroup(flds);\n    } else {\n      this.formModel = new FormControl(this.value || '');\n    }\n    if (this.value) {\n      if(!_.isString(this.value)) {\n      const init = _.cloneDeep(this.value);\n      init.title = this.getTitle(this.value);\n      this.initialValue = init;\n    } else {\n      let init = {};\n      init['title'] = this.value;\n      init[this.stringLabelToField] = this.value;\n      this.initialValue = init;\n    }\n\n    }\n\n    if (this.required) {\n      this.formModel.setValidators([Validators.required]);\n    }\n    return this.formModel;\n  }\n\n  postInit(value: any) {\n    if (value) {\n      this.value = value;\n    } else {\n      this.setEmptyValue();\n    }\n    this.initLookupData();\n  }\n\n  setEmptyValue(updateTitle: boolean = false) {\n    this.value = null;\n    if (this.formModel) {\n      this.formModel.setValue(null, { emitEvent: true });\n    }\n    if (updateTitle && this.component && this.component.ngCompleter) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = null;\n    }\n    return this.value;\n  }\n\n  setLookupServices(completerService: any, lookupService: any) {\n    this.completerService = completerService;\n    this.lookupService = lookupService;\n  }\n\n  initLookupData() {\n    if (this.sourceType == \"vocab\") {\n      // Hack for creating the intended title...\n      _.forEach(this.sourceData, (data: any) => {\n        data.title = this.getTitle(data);\n      });\n      this.dataService = this.completerService.local(this.sourceData, this.searchFields, 'title');\n    } else if (this.sourceType == \"collection\" || this.sourceType == \"user\") {\n      let url = this.lookupService.getCollectionRootUrl(this.vocabId);\n      if (this.sourceType == \"user\") {\n        url = this.lookupService.getUserLookupUrl();\n      }\n      console.log(`Using: ${url}`);\n      // at the moment, multiple titles arrays are not supported\n      // TODO: consider replacing with ngx-bootstrap typeahead\n      const title = this.titleFieldArr.length == 1 ? this.titleFieldArr[0] : 'title';\n      console.log(`Using title: ${title}`);\n      this.dataService = this.completerService.remote(url, this.searchFields, title);\n    } else if (this.sourceType == \"mint\") {\n      const url = this.lookupService.getMintRootUrl(this.vocabId);\n      console.log(`Using: ${url}`);\n\n      this.dataService = new MintLookupDataService(\n        url,\n        this.lookupService.http,\n        this.fieldNames,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim,\n        this.titleCompleterDescription,\n        this.searchFields,\n        this.unflattenFlag);\n    } else if (this.sourceType == \"external\") {\n      const url = this.lookupService.getExternalServiceUrl(this.provider);\n      this.dataService = new ExternalLookupDataService(\n        url,\n        this.lookupService.http,\n        this.resultArrayProperty,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim\n      );\n    }\n\n  }\n\n  public getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if(_.isString(data)) {\n        return data;\n      }\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : delimPair.prefix}${titleVal}${_.isEmpty(title) ? '' : delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n\n  public getValue(data: any) {\n    const valObj = {};\n    if (!_.isUndefined(data) && !_.isEmpty(data)) {\n      if (_.isString(data)) {\n        console.log(`Data is string...`)\n        if (this.storeLabelOnly) {\n          return data;\n        } else {\n          valObj[this.stringLabelToField] = data;\n        }\n        return valObj;\n      }\n\n        _.forEach(this.fieldNames, (fldName: any) => {\n          if (data.originalObject) {\n            this.getFieldValuePair(fldName, data.originalObject, valObj)\n          } else {\n            this.getFieldValuePair(fldName, data, valObj)\n          }\n        });\n\n    }\n    return valObj;\n  }\n\n  public getFieldValuePair(fldName: any, data: any, valObj: any) {\n    if (_.isString(fldName)) {\n      valObj[fldName] = _.get(data, fldName);\n    } else {\n      // expects a value pair\n      _.forOwn(fldName, (srcFld, targetFld) => {\n        if (_.get(data, srcFld)) {\n          valObj[targetFld] = _.get(data, srcFld);\n        } else {\n          valObj[targetFld] = _.get(data, targetFld);\n        }\n      });\n    }\n  }\n\n  public setValue(value: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    this.formModel.setValue(value, { emitEvent: emitEvent });\n    if (updateTitle) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = this.getTitle(value);\n    }\n  }\n\n  relationshipLookup(searchTerm, lowerTerm, searchFields) {\n    const url = this.lookupService.getMintRootUrl(this.vocabId);\n    console.log(`Using: ${url}`);\n    const mlu = new MintRelationshipLookup(url, this.lookupService.http, searchFields);\n    return mlu.search(searchTerm, lowerTerm);\n  }\n\n}\n\nclass ExternalLookupDataService extends Subject implements CompleterData {\n\n    constructor(private url: string,\n      private http: Http,\n      private arrayProperty: string,\n      private compositeTitleName: string,\n      private titleFieldArr: string[],\n      private titleFieldDelim: string) {\n      super();\n    }\n\n    public search(term: string): void {\n\n      this.http.post(this.url,{options:{query: term}}).map((res: any, index: number) => {\n        // Convert the result to CompleterItem[]\n        let data = res.json();\n        let itemArray = _.get(data, this.arrayProperty);\n        let matches: CompleterItem[] = [];\n        _.each(itemArray, item => {\n          matches.push(this.convertToItem(item));\n        })\n\n        this.next(matches);\n      }).subscribe();\n    }\n\n    public cancel() {\n      // Handle cancel\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n      if (!data) {\n        return null;\n      }\n      let completerItem = {};\n      completerItem[this.compositeTitleName] = this.getTitle(data);\n      completerItem['originalObject'] = data;\n      return completerItem as CompleterItem;\n    }\n\n    getTitle(data: any): string {\n      let title = '';\n      if (data) {\n        if (_.isString(this.titleFieldDelim)) {\n          _.forEach(this.titleFieldArr, (titleFld: string) => {\n            const titleVal = _.get(data, titleFld);\n            if (titleVal) {\n              title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n            }\n          });\n        } else {\n          // // expecting a delim pair array, 'prefix', 'suffix'\n          // _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          //   const delimPair = this.titleFieldDelim[idx];\n          //   const titleVal = data[titleFld];\n          //   if (titleVal) {\n          //     title = `${title} ${titleVal}`;\n          //   }\n          // });\n        }\n      }\n      return title;\n    }\n\n}\nclass MintLookupDataService extends Subject implements CompleterData {\n\n  searchFields: any[];\n\n  constructor(private url: string,\n    private http: Http,\n    private fields: string[],\n    private compositeTitleName: string,\n    private titleFieldArr: string[],\n    private titleFieldDelim: any[],\n    private titleCompleterDescription: string,\n    searchFieldStr: any,\n    private unflattenFlag: boolean) {\n    super();\n    this.searchFields = searchFieldStr.split(',');\n  }\n\n  public search(term: string): void {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      term = _.toLower(term);\n      _.forEach(this.searchFields, (searchFld) => {\n        searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}*`\n      });\n    }\n    const searchUrl = `${this.url}${searchString}&unflatten=${this.unflattenFlag}`;\n    this.http.get(`${searchUrl}`).map((res: any, index: number) => {\n      // Convert the result to CompleterItem[]\n      let data = res.json();\n      let matches: CompleterItem[] = _.map(data, (mintDataItem: any) => { return this.convertToItem(mintDataItem); });\n      this.next(matches);\n    }).subscribe();\n  }\n\n  public cancel() {\n    // Handle cancel\n  }\n\n  public convertToItem(data: any): CompleterItem | null {\n    if (!data) {\n      return null;\n    }\n    const item = {};\n    _.forEach(this.fields, (fieldName) => {\n      if (_.isString(fieldName)) {\n        item[fieldName] = data[fieldName];\n      } else {\n        // expects a value pair\n        _.forOwn(fieldName, (srcFld, targetFld) => {\n          if (_.get(data, srcFld)) {\n            item[srcFld] = _.get(data, srcFld);\n          } else {\n            item[targetFld] = _.get(data, targetFld);\n          }\n        });\n      }\n    });\n    // build the title,\n    let completerItem = {};\n    completerItem[this.compositeTitleName] = this.getTitle(data);\n    completerItem['description'] = this.getCompleterDescription(data);\n    completerItem['originalObject'] = item;\n    return completerItem as CompleterItem;\n  }\n\n  getCompleterDescription(data: any): string {\n    let description = '';\n    const fieldDesc = this.titleCompleterDescription;\n    if(data) {\n      if (_.isString(fieldDesc)) {\n        const ele = data[fieldDesc];\n        description = _.toString(_.head(ele)) || '';\n      } else if (_.isArray(fieldDesc)){\n        // enable descriptions to be built as an array\n        _.forEach(fieldDesc, (fDesc: any) => {\n          description = `${description}${_.isEmpty(description) ? '' : this.titleFieldDelim}${data[fDesc]}`\n        });\n      }\n    }\n    return description;\n  }\n\n  getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${data[titleFld]}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title} ${titleVal}${delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n}\n\n@Injectable()\nexport class VocabFieldLookupService extends BaseService {\n\n  constructor(@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getLookupData(field: VocabField) {\n    const vocabId = field.vocabId;\n    // only retrieving static data when on vocab mode\n    if (field.sourceType == \"vocab\") {\n      const url = `${this.brandingAndPortalUrl}/${this.config.vocabRootUrl}/${vocabId}`;\n      return this.http.get(url, this.options)\n        .flatMap((res: any) => {\n          const data = this.extractData(res);\n          field.sourceData = data;\n          field.postInit(field.value);\n          return Observable.of(field);\n        });\n    }\n    field.postInit(field.value);\n    return Observable.of(field);\n  }\n\n  getCollectionRootUrl(collectionId: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.collectionRootUri}/${collectionId}/?search=`;\n  }\n\n  getUserLookupUrl(searchSource: string = '') {\n    return `${this.brandingAndPortalUrl}/${this.config.userRootUri}/?source=${searchSource}&name=`;\n  }\n\n  findLookupData(field: VocabField, search: string) {\n\n  }\n\n  getMintRootUrl(source: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.mintRootUri}/${source}/?search=`;\n  }\n\n  getExternalServiceUrl(provider: string) {\n    return `${this.brandingAndPortalUrl}/external/vocab/${provider}`;\n  }\n}\n\n@Component({\n  selector: 'rb-vocab',\n  template: `\n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n    \n    {{field.validationMessages.required}}\n  \n  \n    \n      {{field.help}}\n      \n        \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.validationMessages.required}}\n    \n  \n\n  \n    {{field.label}}\n    {{getTitle()}}\n  \n  `,\n})\nexport class VocabFieldComponent extends SimpleComponent {\n  @Input() field: VocabField;\n  @Input() isEmbedded: boolean = false;\n  @Input() canRemove: boolean = false;\n  @Input() removeBtnText: string = null;\n  @Input() removeBtnClass: string = 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n  @Input() index: number;\n  @Input() disableEditAfterSelect: boolean = true;\n  @Output() onRemoveBtnClick: EventEmitter = new EventEmitter();\n  disableInput: boolean;\n  @ViewChild('ngCompleter') public ngCompleter: ElementRef;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.component = this;\n    if (_.isEmpty(this.field.value) || _.isNull(this.field.value) || _.isUndefined(this.field.value)) {\n      this.loaded = true;\n    }\n  }\n\n  public getGroupClass(fldName: string = null): string {\n    if(this.isEmbedded) {\n      return `col-xs-12 form-group ${this.hasRequiredError() ? 'has-error' : ''}`;\n    } else {\n      return '';\n    }\n  }\n\n  onSelect(selected: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    console.log(`On select:`);\n    console.log(selected);\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (selected) {\n      if (this.loaded) {\n        this.field.onItemSelect.emit(selected['originalObject']);\n      } else {\n        // set the flag after initial call\n        this.loaded = true;\n      }\n      if(this.field.storeLabelOnly){\n        this.field.setValue(this.field.getValue(selected.title), emitEvent, updateTitle);\n      } else {\n        this.field.setValue(this.field.getValue(selected['originalObject']), emitEvent, updateTitle);\n      }\n      if (disableEditAfterSelect)\n        this.disableInput = true;\n    } else {\n      if (disableEditAfterSelect) {\n        // means user can't edit, so no worries!\n        this.field.setValue(null, emitEvent, updateTitle);\n      } else {\n        // set whatever value on the searchStr, let the fields decide how to parse the string...\n        this.field.setValue(this.field.getValue(this.field.searchStr), emitEvent, updateTitle);\n      }\n    }\n  }\n\n  onKeyup(value: any) {\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (!disableEditAfterSelect && !this.field.restrictToSelection) {\n      this.field.formModel.setValue(this.field.getValue(this.field.searchStr));\n    }\n\n  }\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  getTitle() {\n    return this.field && _.isFunction(this.field.getTitle) ? this.field.getTitle(this.field.value) : '';\n  }\n\n  getClearUnselected() {\n    if (this.field.restrictToSelection) {\n      return true;\n    } else {\n      return this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    }\n  }\n}\n\nexport class MintRelationshipLookup {\n\n  searchFieldStr: string;\n  http: Http;\n\n  constructor(private url: string, http: Http, searchFieldStr: string) {\n      this.http = http;\n      this.searchFieldStr = searchFieldStr;\n  }\n\n  search(term, lower) {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      if(lower) term = _.toLower(term);\n      if(_.isEmpty(this.searchFieldStr)) {\n        searchString = term;\n      } else {\n        _.forEach(this.searchFieldStr.split(','), (searchFld) => {\n          searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}`\n        });\n      }\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    return this.http.get(`${searchUrl}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldControlMetaService.html":{"url":"injectables/FieldControlMetaService.html","title":"injectable - FieldControlMetaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldControlMetaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-control-meta.service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                classes\n                            \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                flattenFields\n                            \n                            \n                                getFieldsMeta\n                            \n                            \n                                getInjectedService\n                            \n                            \n                                getLookupData\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, vocabFieldLookupService: VocabFieldLookupService, completerService: CompleterService, configService: ConfigService, translationService: TranslationService, utilityService: UtilityService, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-control-meta.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vocabFieldLookupService\n                                                  \n                                                        \n                                                                        VocabFieldLookupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        completerService\n                                                  \n                                                        \n                                                                    CompleterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilityService\n                                                  \n                                                        \n                                                                        UtilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            flattenFields\n                        \n                        \n                    \n                \n            \n            \n                \nflattenFields(fields: any[], fieldArr: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control-meta.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldArr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldsMeta\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldsMeta(fieldsArr: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control-meta.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fieldsArr\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInjectedService\n                        \n                        \n                    \n                \n            \n            \n                \ngetInjectedService(serviceName: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control-meta.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLookupData\n                        \n                        \n                    \n                \n            \n            \n                \ngetLookupData(fields: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control-meta.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            classes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : fieldClasses\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-control-meta.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }   from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport  { fieldClasses }from '../fieldClasses';\n\nimport { ConfigService } from '../config-service';\nimport { VocabFieldLookupService } from './field-vocab.component';\nimport { CompleterService } from 'ng2-completer';\nimport { TranslationService } from '../translation-service';\nimport { UtilityService } from '../util-service';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class FieldControlMetaService extends BaseService {\n  protected classes =  fieldClasses;\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(VocabFieldLookupService) private vocabFieldLookupService: VocabFieldLookupService,\n    @Inject(CompleterService) private completerService: CompleterService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translationService: TranslationService,\n    @Inject(UtilityService) protected utilityService: UtilityService,\n    protected app: ApplicationRef\n  ) {\n      super(http, configService);\n  }\n\n  getFieldsMeta(fieldsArr: any) {\n    const fields = _.map(fieldsArr, (f:any) => {\n        // console.log(f.class);\n        // if(typeof this.classes[f.class] != 'undefined'){\n        //   console.log(f.class + ' is null');\n        // }\n        //Todo: break this up and return a more meaningful error when the field name doesn't exist  \n      let fieldClass = this.classes[f.class];\n      if(fieldClass === undefined) {\n        console.error(\"Field class with name: \" + f.class + \" not found field class list. Check spelling and whether it is declared in the following list.\")\n        console.error(this.classes);\n      }\n      const inst = new fieldClass.meta(f.definition, this.app['_injector']);\n      inst.utilityService = this.getInjectedService('utilityService');\n      inst.appConfig = this.getInjectedService('configService').config;\n      // set the component class\n      if (_.isArray(this.classes[f.class].comp)) {\n        inst.compClass = _.find(this.classes[f.class].comp, (c:any)=> {\n          // console.log(`Checking if ${c.clName} == ${f.compClass}`);\n          return c.clName == f.compClass\n        });\n        // defaults to the first entry when compClass is undefined\n        if (_.isUndefined(inst.compClass)) {\n          inst.compClass = this.classes[f.class].comp[0];\n        }\n      } else {\n        inst.compClass = this.classes[f.class].comp;\n      }\n      if (f.definition && f.definition.fields) {\n        inst.fields = this.getFieldsMeta(f.definition.fields);\n      }\n      return inst;\n    });\n    return fields;\n  }\n\n  flattenFields(fields: any[], fieldArr: any[]) {\n    _.map(fields, (f:any)=> {\n      fieldArr.push(f);\n      if (f.fields) {\n        this.flattenFields(f.fields, fieldArr);\n      }\n    });\n  }\n\n  getLookupData(fields: any[]) {\n    let fieldArray: any[] = [];\n    this.flattenFields(fields, fieldArray);\n    return Observable.from(fieldArray).flatMap((f:any) => {\n      if (f.hasLookup) {\n        const lookupServiceName = this.classes[f.clName].lookupService;\n        const serviceInst = this.getInjectedService(lookupServiceName);\n        f.setLookupServices(this.getInjectedService('completerService'), serviceInst);\n        // f.completerService = this.completerService;\n        // f.lookupService = this[lookupServiceName];\n        return serviceInst.getLookupData(f);\n      } else {\n        return Observable.of(null);\n      }\n    })\n    .flatMap((field:any) => {\n      return Observable.of(field);\n    })\n    .last()\n    .flatMap((whatever:any) => {\n      return Observable.of(fields);\n    });\n  }\n\n  getInjectedService(serviceName: string) {\n    let serviceInst = null;\n    switch (serviceName) {\n      case 'vocabFieldLookupService':\n        serviceInst = this.vocabFieldLookupService;\n        break;\n      case 'completerService':\n        serviceInst = this.completerService;\n        break;\n      case 'configService':\n        serviceInst = this.configService;\n        break;\n      case 'translationService':\n        serviceInst = this.translationService;\n        break;\n      case 'utilityService':\n        serviceInst = this.utilityService;\n        break;\n    }\n    return serviceInst;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldControlService.html":{"url":"injectables/FieldControlService.html","title":"injectable - FieldControlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-control.service.ts\n        \n\n            \n                Description\n            \n            \n                Field / Model Factory Service...\nAuthor: Shilo Banihit\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                classes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addComponentClasses\n                            \n                            \n                                getEmptyFormGroup\n                            \n                            \n                                getFieldsMeta\n                            \n                            \n                                getLookupData\n                            \n                            \n                                populateFormGroup\n                            \n                            \n                                setupEventHandlers\n                            \n                            \n                                toFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(completerService: CompleterService, configService: ConfigService, translationService: TranslationService, utilityService: UtilityService, fcmetaService: FieldControlMetaService, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-control.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        completerService\n                                                  \n                                                        \n                                                                    CompleterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilityService\n                                                  \n                                                        \n                                                                        UtilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fcmetaService\n                                                  \n                                                        \n                                                                        FieldControlMetaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addComponentClasses\n                        \n                        \n                    \n                \n            \n            \n                \naddComponentClasses(componentClasses: object)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentClasses\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEmptyFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ngetEmptyFormGroup()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFieldsMeta\n                        \n                        \n                    \n                \n            \n            \n                \ngetFieldsMeta(fieldsArr: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fieldsArr\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLookupData\n                        \n                        \n                    \n                \n            \n            \n                \ngetLookupData(fields: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            populateFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \npopulateFormGroup(fields: any[], group: any, fieldMap: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    group\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    fieldMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setupEventHandlers\n                        \n                        \n                    \n                \n            \n            \n                \nsetupEventHandlers(fieldMap: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fieldMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toFormGroup\n                        \n                        \n                    \n                \n            \n            \n                \ntoFormGroup(fields: FieldBase[], fieldMap: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-control.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                                FieldBase[]\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    fieldMap\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            classes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : fieldClasses\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-control.service.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef, Output, EventEmitter }   from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/last';\nimport 'rxjs/add/observable/from';\nimport { CompleterService } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport { TranslationService } from '../translation-service';\nimport { UtilityService } from '../util-service';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { FieldBase } from './field-base';\nimport  { fieldClasses } from '../fieldClasses';\n/**\n * Field / Model Factory Service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class FieldControlService {\n  protected classes =  fieldClasses;\n  constructor(\n  @Inject(CompleterService) private completerService: CompleterService,\n  @Inject(ConfigService) protected configService: ConfigService,\n  @Inject(TranslationService) protected translationService: TranslationService,\n  @Inject(UtilityService) protected utilityService: UtilityService,\n  @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n  protected app: ApplicationRef\n  ) {\n\n  }\n\n  addComponentClasses(componentClasses: object) {\n    this.classes = _.merge(this.classes,componentClasses);\n  }\n\n  getEmptyFormGroup() {\n    return new FormGroup({});\n  }\n\n  toFormGroup(fields: FieldBase[], fieldMap: any = null ) {\n    let group: any = {};\n    this.populateFormGroup(fields, group, fieldMap);\n    this.setupEventHandlers(fieldMap);\n    return new FormGroup(group);\n  }\n\n  setupEventHandlers(fieldMap: any) {\n    _.forOwn(fieldMap, (fMap:any) => {\n      if (fMap.field) {\n        fMap.field.setupEventHandlers();\n      }\n    });\n  }\n\n  populateFormGroup(fields: any[], group: any, fieldMap: any) {\n    fields.forEach((field:any) => {\n      if (field.fields && !field.hasGroup) {\n        this.populateFormGroup(field.fields, group, fieldMap);\n      } else {\n        field.getGroup(group, fieldMap);\n      }\n    });\n    return group;\n  }\n\n  getFieldsMeta(fieldsArr: any) {\n    const fields = this.fcmetaService.getFieldsMeta(fieldsArr);\n    return fields;\n  }\n\n  getLookupData(fields: any[]) {\n    return this.fcmetaService.getLookupData(fields);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenericGroupComponent.html":{"url":"components/GenericGroupComponent.html","title":"component - GenericGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GenericGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-group.component.ts\n\n\n    \n        Description\n    \n    \n        Generic Group Component\nGeneric component for grouping components together. The resulting JSON will have the field names as keys.\n{\n   class: 'Container',\n   compClass: 'GenericGroupComponent',\n   definition: {\n     name: \"related_website\",\n     cssClasses: \"form-inline\",\n     fields: [\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_url',\n           label: '@dmpt-related-website-url',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_title',\n           label: '@dmpt-related-website-title',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_notes',\n           label: '@dmpt-related-website-notes',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       }\n     ]\n   }\n }\n\n    \n\n    \n        Extends\n    \n    \n                EmbeddableComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                generic-group-field\n            \n\n\n\n            \n                template\n                \n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n  \n  \n    \n      \n        \n          \n        \n        \n          {{removeBtnText}}\n          \n        \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n  \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:222\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:225\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:224\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:223\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:226\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:232\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GenericGroupComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-group.component.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\nimport * as _ from \"lodash\";\n/**\n#### Generic Group Component\n\nGeneric component for grouping components together. The resulting JSON will have the field names as keys.\n\n```\n{\n   class: 'Container',\n   compClass: 'GenericGroupComponent',\n   definition: {\n     name: \"related_website\",\n     cssClasses: \"form-inline\",\n     fields: [\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_url',\n           label: '@dmpt-related-website-url',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_title',\n           label: '@dmpt-related-website-title',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_notes',\n           label: '@dmpt-related-website-notes',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       }\n     ]\n   }\n }\n```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'generic-group-field',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n          \n            \n          \n          \n            {{removeBtnText}}\n            \n          \n        \n      \n    \n    \n      \n        \n      \n    \n  \n  \n    \n      \n    \n  \n  `,\n})\nexport class GenericGroupComponent extends EmbeddableComponent {\n  static clName = 'GenericGroupComponent';\n\n}\n\n/**\n * ### Repeatable Generic Component\n *\n *\n * ```\n * {\n   class: 'RepeatableContainer',\n   compClass: 'RepeatableGroupComponent',\n   definition: {\n     name: \"related_websites\",\n     label: \"@dmpt-related-website\",\n     help: \"@dmpt-related-website-help\",\n     forceClone: ['fields', 'fieldMap'],\n     fields: [\n       {\n         class: 'Container',\n         compClass: 'GenericGroupComponent',\n         definition: {\n           name: \"related_website\",\n           cssClasses: \"form-inline\",\n           fields: [\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_url',\n                 label: '@dmpt-related-website-url',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_title',\n                 label: '@dmpt-related-website-title',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_notes',\n                 label: '@dmpt-related-website-notes',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             }\n           ]\n         }\n       }\n     ]\n   }\n }\n ```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'repeatable-group',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n           1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n        \n      \n      \n        &nbsp;\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableGroupComponent extends RepeatableComponent {\n  static clName = 'RepeatableGroupComponent';\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{field.label}} {{getRequiredLabelStr()}}              {{field.help}}                                                          {{removeBtnText}}                                                        '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenericGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenValueComponent.html":{"url":"components/HiddenValueComponent.html","title":"component - HiddenValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HiddenValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hidden-field\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleChange\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handleChange\n                        \n                        \n                    \n                \n            \n            \n                \nhandleChange(value: any, source: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:648\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HtmlRawComponent.html":{"url":"components/HtmlRawComponent.html","title":"component - HtmlRawComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HtmlRawComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                htmlraw\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HtmlRaw\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:404\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HtmlRawComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinkValueComponent.html":{"url":"components/LinkValueComponent.html","title":"component - LinkValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LinkValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                link-value\n            \n\n\n\n            \n                template\n                \n  {{field.label}}\n  {{field.value}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isVisible\n                        \n                        \n                    \n                \n            \n            \n                \nisVisible()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:633\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{field.label}}  {{field.value}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LinkValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadableComponent.html":{"url":"classes/LoadableComponent.html","title":"class - LoadableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/loadable.component.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class to wrap JQuery calls ...\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in angular/shared/loadable.component.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfHasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfHasLoaded()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslated\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslated(key, defValue)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defValue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nhasLoaded()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTranslator\n                        \n                        \n                    \n                \n            \n            \n                \ninitTranslator(translationService: TranslationService)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translationService\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(loading: boolean)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    loading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            synchLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsynchLoading()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translatorLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ntranslatorLoaded()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \nwaitForInit(serviceArr: any[], handler: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/loadable.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceArr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { TranslationService } from './translation-service';\n\nimport * as _ from \"lodash\";\ndeclare var jQuery: any;\n/**\n * Convenience class to wrap JQuery calls ...\n *\n * Author: Shilo Banihit\n *\n */\nexport class LoadableComponent  {\n  isLoading: boolean;\n  translatorReady: boolean;\n  translationService: any;\n  spinnerElem: string = ``;\n\n  constructor() {\n    this.isLoading = true;\n    this.synchLoading();\n\n  }\n\n  initTranslator(translationService: TranslationService) {\n    this.translationService = translationService;\n    translationService.isReady((tService:any) => {\n      this.translatorReady = true;\n    });\n  }\n\n  translatorLoaded() {\n    this.translatorReady = true;\n    this.checkIfHasLoaded();\n  }\n\n  public checkIfHasLoaded() {\n    if (this.hasLoaded()) {\n      this.setLoading(false);\n    }\n  }\n\n  hasLoaded() {\n    return this.isLoading && (this.translationService ? this.translatorReady : true);\n  }\n\n  setLoading(loading: boolean=true) {\n    this.isLoading = loading;\n    this.synchLoading();\n  }\n\n  synchLoading() {\n    if (this.isLoading) {\n      jQuery(\"#loading\").removeClass(\"hidden\");\n    } else {\n      jQuery(\"#loading\").addClass(\"hidden\");\n    }\n  }\n\n  getTranslated(key, defValue) {\n    if (!_.isEmpty(key) && !_.isUndefined(key)) {\n      // Keys can now be any string, previously, these were required to start with the '@' character\n      if (this.translationService) {\n        return this.translationService.t(key);\n      } else {\n        return key;\n      }\n    } else {\n      return defValue;\n    }\n  }\n\n  waitForInit(serviceArr: any[], handler:any) {\n    const subs = _.map(serviceArr, (service)=> { return service.getInitSubject() });\n    const subTracker = {loaded: {}, subs: {}};\n    const subTrackerFn = (serviceIdx:any) => {\n      return (serviceInst:any) => {\n        subTracker.loaded[`${serviceIdx}`] = serviceInst;\n        if (_.keys(subTracker.loaded).length >= subs.length) {\n          subTracker.subs[`${serviceIdx}`].unsubscribe();\n          handler();\n        }\n      };\n    };\n    _.forOwn(serviceArr, (service:any, serviceIdx:any) => {\n      subTracker.subs[`${serviceIdx}`] = service.getInitSubject().subscribe(subTrackerFn(serviceIdx));\n      service.emitInit();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocalAuthComponent.html":{"url":"components/LocalAuthComponent.html","title":"component - LocalAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocalAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/localAuth/app/local_auth.component.ts\n\n\n    \n        Description\n    \n    \n        Local Authentication  Component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n                LoadableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                local-auth\n            \n\n\n\n\n            \n                templateUrl\n                ./localAuth.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                isLoginDisabled\n                            \n                            \n                                loginMessage\n                            \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrors\n                            \n                            \n                                onLogin\n                            \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserSimpleService, fb: FormBuilder, document: any, translationService: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/localAuth/app/local_auth.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserSimpleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getErrors\n                        \n                        \n                    \n                \n            \n            \n                \ngetErrors()\n                \n            \n\n\n            \n                \n                    Defined in angular/localAuth/app/local_auth.component.ts:85\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onLogin\n                        \n                        \n                    \n                \n            \n            \n                \nonLogin(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/localAuth/app/local_auth.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfHasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfHasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslated\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslated(key, defValue)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defValue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nhasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTranslator\n                        \n                        \n                    \n                \n            \n            \n                \ninitTranslator(translationService: TranslationService)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translationService\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(loading: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    loading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            synchLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsynchLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translatorLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ntranslatorLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \nwaitForInit(serviceArr: any[], handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceArr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoginDisabled\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { UserSimpleService } from './shared/user.service-simple';\nimport { LoginResult } from './shared/user-models'\nimport { LoadableComponent } from './shared/loadable.component';\nimport { TranslationService } from './shared/translation-service';\n\n/**\n * Local Authentication  Component\n *\n * Author: Shilo Banihit\n *\n */\n@Component({\n  moduleId: module.id,\n  selector: 'local-auth',\n  templateUrl: './localAuth.html'\n})\n\n@Injectable()\nexport class LocalAuthComponent extends LoadableComponent {\n  form: FormGroup;\n  loginMessage: string;\n  isLoginDisabled: boolean;\n  constructor (@Inject(UserSimpleService) protected userService: UserSimpleService, @Inject(FormBuilder) protected fb: FormBuilder, @Inject(DOCUMENT) protected document:any, translationService: TranslationService) {\n    super();\n    this.initTranslator(translationService);\n    translationService.isReady(tService => {\n      userService.waitForInit((whatever:any)=> {\n        this.form = this.fb.group({\n            \"username\": [\"\", Validators.required],\n            \"password\":[\"\", Validators.required]\n        });\n        this.form.valueChanges.subscribe(data => {\n          this.isLoginDisabled = this.form.status == 'INVALID';\n          if (this.isLoginDisabled) {\n            this.getErrors();\n          }\n        });\n        this.checkIfHasLoaded();\n      });\n    });\n  }\n\n  onLogin(event:any) {\n    if (this.isLoginDisabled || this.form.status == 'INVALID') {\n      this.getErrors();\n      return;\n    }\n    event.preventDefault();\n    this.isLoginDisabled = true;\n    this.userService.loginLocal(this.form.value.username, this.form.value.password)\n    .then((res:LoginResult) => {\n      console.log(res);\n      if (res.user) {\n        console.log(\"Login success, redirecting...\");\n        this.document.location.href = res.url;\n      } else {\n        this.loginMessage = res.message;\n        this.isLoginDisabled = false;\n      }\n    });\n  }\n\n  getErrors() {\n    if (this.form.controls['username'].hasError('required')) {\n      this.loginMessage = \"Please provide a username.\";\n    } else {\n      this.loginMessage = \"Please provide a password.\";\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'local-creds-header' | translate }}\n    \n    \n      \n      \n        \n        \n        \n        \n        \n          \n              Login \n          \n        \n        \n        \n          {{loginMessage}}\n        \n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'local-creds-header\\' | translate }}                                                                                    Login                                             {{loginMessage}}                        '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocalAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocalAuthModule.html":{"url":"modules/LocalAuthModule.html","title":"module - LocalAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    LocalAuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocalAuthModule\n\n\n\ncluster_LocalAuthModule_declarations\n\n\n\ncluster_LocalAuthModule_imports\n\n\n\ncluster_LocalAuthModule_bootstrap\n\n\n\n\nLocalAuthComponent\n\nLocalAuthComponent\n\n\n\nLocalAuthModule\n\nLocalAuthModule\n\nLocalAuthModule -->\n\nLocalAuthComponent->LocalAuthModule\n\n\n\n\n\nLocalAuthComponent \n\nLocalAuthComponent \n\nLocalAuthComponent  -->\n\nLocalAuthModule->LocalAuthComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLocalAuthModule -->\n\nSharedModule->LocalAuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/localAuth/app/local_auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LocalAuthComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            LocalAuthComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { LocalAuthComponent }  from './local_auth.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, SharedModule ],\n  declarations: [ LocalAuthComponent ],\n  providers:    [ ],\n  bootstrap:    [ LocalAuthComponent ]\n})\nexport class LocalAuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResult.html":{"url":"classes/LoginResult.html","title":"class - LoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                message\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ManageRolesComponent.html":{"url":"components/ManageRolesComponent.html","title":"component - ManageRolesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ManageRolesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/manageRoles/app/manage_roles.component.ts\n\n\n    \n        Description\n    \n    \n        Manage Roles component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n                LoadableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                manage-roles\n            \n\n\n\n\n            \n                templateUrl\n                ./manageRoles.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                filteredUsers\n                            \n                            \n                                hiddenUsers\n                            \n                            \n                                initSubs\n                            \n                            \n                                roles\n                            \n                            \n                                saveMsg\n                            \n                            \n                                saveMsgType\n                            \n                            \n                                searchFilter\n                            \n                            \n                                users\n                            \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                editUser\n                            \n                            \n                                onFilterChange\n                            \n                            \n                                resetFilter\n                            \n                            \n                                saveCurrentUser\n                            \n                            \n                                setSaveMessage\n                            \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(rolesService: RolesService, fb: FormBuilder, document: any, translationService: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/manageRoles/app/manage_roles.component.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rolesService\n                                                  \n                                                        \n                                                                        RolesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            editUser\n                        \n                        \n                    \n                \n            \n            \n                \neditUser(username: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/manageRoles/app/manage_roles.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onFilterChange\n                        \n                        \n                    \n                \n            \n            \n                \nonFilterChange(roleFilter: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/manageRoles/app/manage_roles.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    roleFilter\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resetFilter\n                        \n                        \n                    \n                \n            \n            \n                \nresetFilter()\n                \n            \n\n\n            \n                \n                    Defined in angular/manageRoles/app/manage_roles.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            saveCurrentUser\n                        \n                        \n                    \n                \n            \n            \n                \nsaveCurrentUser($event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/manageRoles/app/manage_roles.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSaveMessage\n                        \n                        \n                    \n                \n            \n            \n                \nsetSaveMessage(msg: string, type: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/manageRoles/app/manage_roles.component.ts:122\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"\"\n                                    \n\n                                \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        \"primary\"\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            checkIfHasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkIfHasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTranslated\n                        \n                        \n                    \n                \n            \n            \n                \ngetTranslated(key, defValue)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defValue\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasLoaded\n                        \n                        \n                    \n                \n            \n            \n                \nhasLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:59\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTranslator\n                        \n                        \n                    \n                \n            \n            \n                \ninitTranslator(translationService: TranslationService)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:41\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    translationService\n                                    \n                                                TranslationService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(loading: boolean)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:63\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    loading\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        true\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            synchLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsynchLoading()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translatorLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ntranslatorLoaded()\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \nwaitForInit(serviceArr: any[], handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         LoadableComponent\n\n                \n            \n            \n                \n                        Defined in         LoadableComponent:89\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    serviceArr\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {username:'', name:'', email:'', roles:[]}\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hiddenUsers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['admin']\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initSubs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveMsg\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveMsgType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"info\"\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : { name: null, role: null, prevName: null, prevRole:null, roles: [ {value: null, label:'Any', checked:true}]}\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in angular/manageRoles/app/manage_roles.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:30\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:33\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:32\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         LoadableComponent:31\n\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { UserSimpleService } from './shared/user.service-simple';\nimport { RolesService } from './shared/roles-service';\nimport { Role, User, LoginResult, SaveResult } from './shared/user-models';\nimport * as _ from \"lodash\";\nimport { LoadableComponent } from './shared/loadable.component';\nimport { TranslationService } from './shared/translation-service';\n\ndeclare var pageData :any;\ndeclare var jQuery: any;\n/**\n * Manage Roles component\n *\n *\n * Author: Shilo Banihit\n */\n@Component({\n  moduleId: module.id,\n  selector: 'manage-roles',\n  templateUrl: './manageRoles.html'\n})\n\n// TODO: find a way to remove jQuery dependency\n@Injectable()\nexport class ManageRolesComponent extends LoadableComponent {\n  users: any[] = [];\n  filteredUsers: any[];\n  searchFilter: { name: string, role: any, prevName: string, prevRole: any, roles: any[] } = { name: null, role: null, prevName: null, prevRole:null, roles: [ {value: null, label:'Any', checked:true}]};\n  roles: Role[];\n  hiddenUsers = ['admin'];\n  currentUser: any = {username:'', name:'', email:'', roles:[]};\n  saveMsg = \"\";\n  saveMsgType =\"info\";\n  initSubs: any;\n\n  constructor (@Inject(RolesService) protected rolesService: RolesService, @Inject(FormBuilder) fb: FormBuilder, @Inject(DOCUMENT) protected document:any, translationService:TranslationService) {\n    super();\n    this.initTranslator(translationService);\n    this.initSubs = rolesService.waitForInit((initStat:any) => {\n      this.initSubs.unsubscribe();\n      translationService.isReady(tService => {\n        rolesService.getBrandRoles().then((roles:any) => {\n          this.roles = roles;\n          _.forEach(roles, (role:any) => {\n            this.searchFilter.roles.push({value:role.name, label:role.name, checked:false});\n            _.forEach(role.users, (user:any) => {\n              if (!_.includes(this.hiddenUsers, user.username)) {\n                // flattening the tree, match by username\n                let existingUser: any = _.find(this.users, (existingUser:any) => { return existingUser.username == user.username});\n                if (_.isEmpty(existingUser)) {\n                  existingUser = user;\n                  existingUser.roles = [role.name];\n                  this.users.push(existingUser);\n                } else {\n                  existingUser.roles.push(role.name);\n                }\n              }\n            });\n          });\n          _.map(this.users, (user:any)=> {user.roleStr = _.join(user.roles, ', ')});\n          this.filteredUsers = this.users;\n          this.checkIfHasLoaded();\n        });\n      });\n    });\n  }\n\n  editUser(username:string) {\n    this.setSaveMessage();\n    this.currentUser = _.find(this.users, (user:any)=>{return user.username == username});\n    this.currentUser.newRoles = _.map(this.roles, (r:any) => {\n      return {name: r.name, id:r.id, hasRole: _.includes(this.currentUser.roles, r.name)};\n    });\n  }\n\n  saveCurrentUser($event:any) {\n    let hasRole:boolean = false;\n    let newRoles:any[] = [];\n    _.forEach(this.currentUser.newRoles, (role:any) => {\n      hasRole = hasRole || role.hasRole;\n      if (role.hasRole)\n        newRoles.push(role.name);\n    });\n    if (!hasRole) {\n      this.setSaveMessage(\"Please select at least one role!\", \"danger\");\n      return;\n    }\n    this.setSaveMessage(\"Saving...\", \"primary\");\n    this.rolesService.updateUserRoles(this.currentUser.id, newRoles).then((saveRes:SaveResult) => {\n      if (saveRes.status) {\n        this.currentUser.roles = newRoles;\n        this.currentUser.roleStr =  _.join(this.currentUser.roles);\n        this.setSaveMessage();\n        jQuery('#myModal').modal('hide');\n      } else {\n        this.setSaveMessage(saveRes.message, \"danger\");\n      }\n    });\n  }\n\n  setSaveMessage(msg:string=\"\", type:string=\"primary\") {\n    this.saveMsg = msg;\n    this.saveMsgType = type;\n  }\n\n  onFilterChange(roleFilter:any=null) {\n    if (roleFilter) {\n      roleFilter.checked = true;\n      this.searchFilter.role = roleFilter.value;\n      _.map(this.searchFilter.roles, (role:any)=> role.checked = roleFilter.value == role.value );\n    }\n    if (this.searchFilter.name != this.searchFilter.prevName || this.searchFilter.role != this.searchFilter.prevRole) {\n      this.searchFilter.prevName = this.searchFilter.name;\n      this.searchFilter.prevRole = this.searchFilter.role;\n      var nameFilter =_.isEmpty(this.searchFilter.name) ? \"\" : _.trim(this.searchFilter.name);\n      // run filter change...\n      this.filteredUsers = _.filter(this.users, (user:any) => {\n        var hasRole = this.searchFilter.role == null ?  true : _.includes(user.roles, this.searchFilter.role);\n        var hasNameMatch = nameFilter == \"\" ? true : (_.toLower(user.name).indexOf(_.toLower(this.searchFilter.name)) >= 0);\n        return hasRole && hasNameMatch;\n      });\n    }\n  }\n\n  resetFilter() {\n    this.searchFilter.name = null;\n    this.searchFilter.role = null;\n    _.map(this.searchFilter.roles, (role:any)=> role.checked = role.value == null);\n    this.onFilterChange();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ 'manage-roles-title' | translate }}\n      \n    \n    \n      \n        {{ 'manage-roles-filter-name' | translate }}\n        \n        Reset\n      \n      \n        \n      \n      \n        \n          {{ 'manage-roles-filter-label' | translate }}\n        \n        \n          \n            \n            \n              \n              &nbsp;{{roleFilter.label}}\n            \n          \n        \n        \n      \n      \n        \n      \n      \n        \n          \n            \n              {{ 'manage-roles-name' | translate }}\n              {{ 'manage-roles-email' | translate }}\n              {{ 'manage-roles-role' | translate }}\n              {{ 'manage-roles-action' | translate }}\n            \n          \n          \n            \n              {{user.name}}\n              {{user.email}}\n              {{user.roleStr}}\n              \n                Edit\n              \n            \n          \n        \n      \n    \n  \n\n\n\n  \n    \n    \n      \n        &times;\n        {{ 'manage-roles-edit' | translate }}\n      \n      \n        \n          \n            \n              \n                \n                  {{ 'manage-roles-name' | translate }}\n                  {{currentUser.name}}\n                \n                \n                  {{ 'manage-roles-email' | translate }}\n                  {{currentUser.email}}\n                \n                \n                  {{ 'manage-roles-role' | translate }}\n                  \n                    \n                      \n                        \n                        {{role.name}}\n                      \n                    \n                  \n                \n              \n            \n          \n        \n        {{saveMsg}}\n      \n      \n        {{ 'manage-roles-save' | translate }}\n        {{ 'manage-roles-cancel' | translate }}\n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'manage-roles-title\\' | translate }}                            {{ \\'manage-roles-filter-name\\' | translate }}                Reset                                                  {{ \\'manage-roles-filter-label\\' | translate }}                                                                               {{roleFilter.label}}                                                                                                                  {{ \\'manage-roles-name\\' | translate }}              {{ \\'manage-roles-email\\' | translate }}              {{ \\'manage-roles-role\\' | translate }}              {{ \\'manage-roles-action\\' | translate }}                                                          {{user.name}}              {{user.email}}              {{user.roleStr}}                              Edit                                                                                ×        {{ \\'manage-roles-edit\\' | translate }}                                                                                          {{ \\'manage-roles-name\\' | translate }}                  {{currentUser.name}}                                                  {{ \\'manage-roles-email\\' | translate }}                  {{currentUser.email}}                                                  {{ \\'manage-roles-role\\' | translate }}                                                                                                            {{role.name}}                                                                                                                                {{saveMsg}}                    {{ \\'manage-roles-save\\' | translate }}        {{ \\'manage-roles-cancel\\' | translate }}            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ManageRolesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManageRolesModule.html":{"url":"modules/ManageRolesModule.html","title":"module - ManageRolesModule","body":"\n                   \n\n\n\n\n    Modules\n    ManageRolesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManageRolesModule\n\n\n\ncluster_ManageRolesModule_declarations\n\n\n\ncluster_ManageRolesModule_imports\n\n\n\ncluster_ManageRolesModule_bootstrap\n\n\n\n\nManageRolesComponent\n\nManageRolesComponent\n\n\n\nManageRolesModule\n\nManageRolesModule\n\nManageRolesModule -->\n\nManageRolesComponent->ManageRolesModule\n\n\n\n\n\nManageRolesComponent \n\nManageRolesComponent \n\nManageRolesComponent  -->\n\nManageRolesModule->ManageRolesComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nManageRolesModule -->\n\nSharedModule->ManageRolesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/manageRoles/app/manage_roles.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ManageRolesComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            ManageRolesComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ManageRolesComponent }  from './manage_roles.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule ],\n  declarations: [ ManageRolesComponent ],\n  providers:    [ ],\n  bootstrap:    [ ManageRolesComponent ]\n})\nexport class ManageRolesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManageUsersModule.html":{"url":"modules/ManageUsersModule.html","title":"module - ManageUsersModule","body":"\n                   \n\n\n\n\n    Modules\n    ManageUsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManageUsersModule\n\n\n\ncluster_ManageUsersModule_declarations\n\n\n\ncluster_ManageUsersModule_imports\n\n\n\ncluster_ManageUsersModule_bootstrap\n\n\n\n\nManageUsersComponent\n\nManageUsersComponent\n\n\n\nManageUsersModule\n\nManageUsersModule\n\nManageUsersModule -->\n\nManageUsersComponent->ManageUsersModule\n\n\n\n\n\nManageUsersComponent \n\nManageUsersComponent \n\nManageUsersComponent  -->\n\nManageUsersModule->ManageUsersComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nManageUsersModule -->\n\nSharedModule->ManageUsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/manageUsers/app/manage_users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ManageUsersComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            ManageUsersComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ModalModule } from 'ngx-bootstrap';\n\nimport { ManageUsersComponent }  from './manage_users.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule, ModalModule.forRoot() ],\n  declarations: [ ManageUsersComponent ],\n  providers:    [ ],\n  bootstrap:    [ ManageUsersComponent ]\n})\nexport class ManageUsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-map.component.ts\n\n\n    \n        Description\n    \n    \n        Map Component.\nUses Leaflet.js to render a widget and the Leaflet.draw plugin to be able to select regions\nUsage\n*  {\n*   class: 'MapField',\n*   compClass: 'MapComponent',\n*   definition: {\n*     name: 'geocoords',\n*     label: '@dataRecord-coverage',\n*     help: '@dataRecord-coverage',\n*     tabId: 'coverage',\n*     leafletOptions: {\n*                      zoom: 3,\n*                      center: latLng([108.94248962402342, 34.26516142452615)\n*                     }\n*     }\n*   }\n*\n| Property Name  | Description                                                                                                                                                                                                                                                                                                                       | Required | Default                                                                                                                                                                                                                                                                                  |\n|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| label          | The label to show above the component                                                                                                                                                                                                                                                                                             | No       *|                                                                                                                                                                                                                                                                                          |\n| help           | Help text                                                                                                                                                                                                                                                                                                                         | No       *|                                                                                                                                                                                                                                                                                          |\n| tabId          | The name of the tab the widget is placed, this is needed as Leaflet needs the map to be visible before the tiles can be loaded correctly. Leave empty if widget isn't placed in a tab.                                                                                                                                            | No       *|                                                                                                                                                                                                                                                                                          |\n| leafletOptions | The leaflet options object. See the Leaflet's documentation for more information. Note: layers cannot be changed as other functionality depends on it being set as it is and will be overridden. Defaults to a map centred on Australia (if no elements are drawn on map) | No       | {zoom: 4, center:\" latLng([-24.673148, 134.074574]) }                                                                                                                                                                                                                              |\n| drawOptions    | The leaflet draw options object. See the Leaflet Draw's documentation for more information. Note: the edit featureGroup cannot be changed as other functionality depends on it being set as it is and will be overridden.                         | No       | {position:\"topright\",draw:{marker:{icon:icon({iconSize:[25,41],iconAnchor:[13,41],iconUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-icon.png\",shadowUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-shadow.png\"})},circlemarker:false,circle:false}} |\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-mapdata\n            \n\n\n\n\n            \n                templateUrl\n                ./field-map.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                coordinatesHelpShow\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                toggleCoordinatesHelp\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-map.component.ts:368\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleCoordinatesHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleCoordinatesHelp()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-map.component.ts:374\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            coordinatesHelpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-map.component.ts:366\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MapField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-map.component.ts:364\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport {  Map,  GeoJSON,   } from 'leaflet';\ndeclare var omnivore: any;\ndeclare var L: any;\ndeclare var jQuery: any;\n\n\n/**\n * Map Model\n *\n *\n * @author Andrew Brazzatti\n *\n */\nexport class MapField extends FieldBase {\n\n\n  initialised: boolean = false;\n  tabId: string;\n  importDataString: string = \"\";\n\n  layerGeoJSON: any = {};\n  map: Map;\n  importFailed:boolean = false;\n  layers = [];\n  drawnItems: any = new L.FeatureGroup();\n  googleMaps = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {\n    maxZoom: 20,\n    subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\n    detectRetina: true\n  });\n  googleHybrid = L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {\n    maxZoom: 20,\n    subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\n    detectRetina: true\n  });\n  coordinatesHelp?: any;\n\n\n  /*\n  *\n  * Draw options\n  */\n  /* Draw options that we do not want to be overridden by form config as it'll break functionality */\n  masterDrawOptions: any = {\n    edit: {\n      featureGroup: this.drawnItems\n    },\n  };\n\n\n  defaultDrawOptions: any = {\n    position: 'topright',\n    edit: {\n      featureGroup: this.drawnItems\n    },\n    draw: {\n      marker: {\n        icon: L.icon({\n          iconSize: [25, 41],\n          iconAnchor: [13, 41],\n          iconUrl: 'http://localhost:1500/default/rdmp/images/leaflet/marker-icon.png',\n          shadowUrl: 'http://localhost:1500/default/rdmp/images/leaflet/marker-shadow.png'\n        })\n      },\n      circlemarker: false,\n      circle: false\n    }\n  };\n\n  drawOptions: any = this.defaultDrawOptions;\n\n  /*\n  *\n  * Leaf options\n  */\n  masterLeafletOptions = {\n    layers: [this.googleMaps, this.drawnItems],\n  };\n\n  defaultLeafletOptions = {\n    zoom: 4,\n    center: L.latLng([-24.673148, 134.074574])\n  };\n\n  leafletOptions: any = this.defaultLeafletOptions;\n\n  layersControl = {\n    baseLayers: {\n      'Google Maps': this.googleMaps,\n      'Google Hybrid': this.googleHybrid\n    }\n  };\n\n  mainTabId: any;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'MapField';\n\n    this.leafletOptions = options['leafletOptions'] || this.defaultLeafletOptions;\n    // merge in master options to ensure we have the right layers configured\n    this.leafletOptions = _.merge(this.leafletOptions, this.masterLeafletOptions);\n\n    this.drawOptions = options['drawOptions'] || this.drawOptions;\n    // merge in master options to ensure we have the right layers configured\n    this.drawOptions = _.merge(this.drawOptions, this.masterDrawOptions);\n\n    this.tabId = options['tabId'] || null;\n\n    this.layerGeoJSON = options.value;\n    this.mainTabId = options['mainTabId'] || null;\n    this.coordinatesHelp =  this.getTranslated(options.coordinatesHelp, undefined);\n  }\n\n  onMapReady(map: Map) {\n\n    this.map = map;\n\n    let that = this;\n\n    this.registerMapEventHandlers(map);\n    this.setValue(this.layerGeoJSON);\n\n\n    if (this.tabId === null) {\n      map.invalidateSize();\n      map.fitBounds(this.drawnItems.getBounds());\n    } else {\n      if (this.editMode) {\n        // Note: this assumes the tabId is unqiue in the page, which may not be when there are multiple tab layouts.\n        jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n          const curTabId = e.target.href.split('#')[1];\n          if (curTabId == that.tabId) {\n            that.initMap(map, that);\n          }\n        });\n      } else {\n        const field = this.fieldMap._rootComp.getFieldWithId(this.mainTabId, this.fieldMap._rootComp.fields);\n        field.onAccordionCollapseExpand.subscribe((event) => {\n          if (event.shown == true && event.tabId == that.tabId && !that.initialised) {\n            that.initMap(map, that);\n            that.initialised = true;\n          }\n        });\n      }\n    }\n  }\n\n  public initMap(map, that) {\n    map.invalidateSize();\n\n      try {\n        // if there are no layers present this will throw an error\n        map.fitBounds(this.drawnItems.getBounds());\n      } catch (e) {\n\n      }\n\n  }\n\n\n\n  registerMapEventHandlers(map: Map) {\n    let that = this;\n    map.on(L.Draw.Event.CREATED, function(e: any) {\n      var type = e.layerType,\n        layer = e.layer;\n      that.layers.push(layer);\n      that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n      that.setValue(that.layerGeoJSON);\n      return false;\n    });\n\n    map.on('draw:edited', function(e: any) {\n      let layers = e.layers;\n      let that2 = that;\n      layers.eachLayer(function(layer) {\n        let layerIndex = _.findIndex(that2.layers, function(o) { return o._leaflet_id == layer._leaflet_id; });\n        if(layerIndex == -1) {\n          that2.layers.push(layer);\n        } else {\n          that2.layers[layerIndex] = layer;\n        }\n\n      });\n    });\n\n    map.on('draw:editstop', function(e: any) {\n      that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n      that.setValue(that.layerGeoJSON);\n    });\n\n    map.on('draw:deletestop', function(e: any) {\n      that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n      that.setValue(that.layerGeoJSON);\n    });\n\n    map.on('draw:deleted', function(e: any) {\n      let layers = e.layers;\n      let that2 = that;\n      layers.eachLayer(function(layer) {\n        _.remove(that2.layers, function(o) { return o._leaflet_id == layer._leaflet_id; });\n      });\n    });\n  }\n\n\n  drawLayers() {\n    this.drawnItems.clearLayers();\n    let geoJSONLayer: GeoJSON = L.geoJSON(this.layerGeoJSON);\n    this.layers = [];\n    let that = this;\n    geoJSONLayer.eachLayer(layer => {\n      layer.addTo(that.drawnItems);\n      that.layers.push(layer);\n    });\n  }\n\n\n  postInit(value: any) {\n    if (!_.isEmpty(value)) {\n      this.layerGeoJSON = value;\n      this.drawLayers();\n    }\n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.layerGeoJSON = valueElem;\n    }\n\n    this.formModel = new FormControl(this.layerGeoJSON || {});\n\n    return this.formModel;\n  }\n\n  setValue(value: any) {\n    if (!_.isEmpty(value)) {\n      this.layerGeoJSON = value;\n      this.drawLayers();\n      this.formModel.patchValue(this.layerGeoJSON, { emitEvent: false });\n      this.formModel.markAsTouched();\n    }\n  }\n\n  setEmptyValue() {\n    this.layerGeoJSON = {};\n    return this.layerGeoJSON;\n  }\n\n  importData() {\n    if(this.importDataString.length > 0) {\n      try {\n      if(this.importDataString.indexOf(\" {\n          layer.addTo(that.drawnItems);\n          that.layers.push(layer);\n          that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n          this.drawLayers();\n          that.map.fitBounds(that.drawnItems.getBounds());\n        });\n        this.importDataString = \"\";\n        this.importFailed = false;\n      } else {\n        let parsedLayers = L.geoJSON(JSON.parse(this.importDataString));\n        let that = this;\n        parsedLayers.eachLayer(layer => {\n          layer.addTo(that.drawnItems);\n          that.layers.push(layer);\n          that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n          this.drawLayers();\n          that.map.fitBounds(that.drawnItems.getBounds());\n        });\n        this.importDataString = \"\";\n        this.importFailed = false;\n      }\n      this.layerGeoJSON = L.featureGroup(this.layers).toGeoJSON();\n      this.setValue(this.layerGeoJSON);\n    } catch (e) {\n      this.importFailed = true;\n    }\n\n    }\n\n    return false;\n  }\n\n}\n\ndeclare var aotMode\n// Setting the template url to a constant rather than directly in the component as the latter breaks document generation\nlet rbMapDataTemplate = './field-map.html';\nif (typeof aotMode == 'undefined') {\n  rbMapDataTemplate = '../angular/shared/form/field-map.html';\n}\n\n/**\n* #### Map Component.\n*\n* Uses Leaflet.js to render a widget and the Leaflet.draw plugin to be able to select regions\n*\n* #### Usage\n* ```\n*  {\n*   class: 'MapField',\n*   compClass: 'MapComponent',\n*   definition: {\n*     name: 'geocoords',\n*     label: '@dataRecord-coverage',\n*     help: '@dataRecord-coverage',\n*     tabId: 'coverage',\n*     leafletOptions: {\n*                      zoom: 3,\n*                      center: latLng([108.94248962402342, 34.26516142452615)\n*                     }\n*     }\n*   }\n* ```\n*\n*| Property Name  | Description                                                                                                                                                                                                                                                                                                                       | Required | Default                                                                                                                                                                                                                                                                                  |\n*|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n*| label          | The label to show above the component                                                                                                                                                                                                                                                                                             | No       *|                                                                                                                                                                                                                                                                                          |\n*| help           | Help text                                                                                                                                                                                                                                                                                                                         | No       *|                                                                                                                                                                                                                                                                                          |\n*| tabId          | The name of the tab the widget is placed, this is needed as Leaflet needs the map to be visible before the tiles can be loaded correctly. Leave empty if widget isn't placed in a tab.                                                                                                                                            | No       *|                                                                                                                                                                                                                                                                                          |\n*| leafletOptions | The leaflet options object. See the [Leaflet's documentation](http://leafletjs.com/reference-1.3.0.html#map-option) for more information. Note: layers cannot be changed as other functionality depends on it being set as it is and will be overridden. Defaults to a map centred on Australia (if no elements are drawn on map) | No       | ```{zoom: 4, center:\" latLng([-24.673148, 134.074574]) }```                                                                                                                                                                                                                              |\n*| drawOptions    | The leaflet draw options object. See the [Leaflet Draw's documentation](https://leaflet.github.io/Leaflet.draw/docs/leaflet-draw-latest.html#options) for more information. Note: the edit featureGroup cannot be changed as other functionality depends on it being set as it is and will be overridden.                         | No       | ```{position:\"topright\",draw:{marker:{icon:icon({iconSize:[25,41],iconAnchor:[13,41],iconUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-icon.png\",shadowUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-shadow.png\"})},circlemarker:false,circle:false}}``` |\n*/\n@Component({\n  selector: 'rb-mapdata',\n  templateUrl: './field-map.html'\n})\nexport class MapComponent extends SimpleComponent {\n  field: MapField;\n\n  coordinatesHelpShow: boolean;\n\n  ngAfterViewInit() {\n    if (!this.field.editMode) {\n      this.field.initMap(this.field.map, this.field);\n    }\n  }\n\n  public toggleCoordinatesHelp() {\n    this.coordinatesHelpShow = !this.coordinatesHelpShow;\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n   \n  \n\n  \n  \n  \n  \n    Enter KML or GeoJSON\n      \n    \n    {{field.coordinatesHelp}}\n    \n  Import Entered text is not a valid KML or GeoJSON\n\n\n\n\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{field.label}} {{ getRequiredLabelStr()}}                     Enter KML or GeoJSON              {{field.coordinatesHelp}}      Import Entered text is not a valid KML or GeoJSON    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownTextAreaComponent.html":{"url":"components/MarkdownTextAreaComponent.html","title":"component - MarkdownTextAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MarkdownTextAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmbeddableComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                markdown-text-area\n            \n\n\n\n            \n                template\n                \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  Preview\n  \n  {{field.label}} is required\n  {{field.validationMessages.required}}\n\n\n  {{field.label}}\n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:222\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:225\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:224\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:223\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:226\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-textfield.component.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:232\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MarkdownTextArea\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:257\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n        \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}            Preview    {{field.label}} is required  {{field.validationMessages.required}}  {{field.label}}    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownTextAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MintLookupDataService.html":{"url":"classes/MintLookupDataService.html","title":"class - MintLookupDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MintLookupDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-vocab.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n            \n                Implements\n            \n            \n                        CompleterData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                convertToItem\n                            \n                            \n                                getCompleterDescription\n                            \n                            \n                                getTitle\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, http: Http, fields: string[], compositeTitleName: string, titleFieldArr: string[], titleFieldDelim: any[], titleCompleterDescription: string, searchFieldStr: any, unflattenFlag: boolean)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-vocab.component.ts:347\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fields\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compositeTitleName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldArr\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldDelim\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleCompleterDescription\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchFieldStr\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        unflattenFlag\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:347\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            cancel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    cancel()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:380\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            convertToItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    convertToItem(data: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:384\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     CompleterItem | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCompleterDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetCompleterDescription(data: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:411\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitle(data: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:428\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            search\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    search(term: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:362\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    term\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, Injectable, Inject, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs';\nimport { Subject } from \"rxjs/Subject\";\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map'\nimport { Http } from '@angular/http';\nimport { BaseService } from '../base-service';\nimport { CompleterService, CompleterData, CompleterItem } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport * as luceneEscapeQuery from \"lucene-escape-query\";\n/**\n * Vocabulary Field\n *\n * Author: Shilo Banihit\n *\n */\nexport class VocabField extends FieldBase {\n  public searchStr: any;\n  public vocabId: string;\n  public sourceData: any;\n  public completerService: CompleterService;\n  public dataService: CompleterData;\n  public initialValue: any;\n  public titleFieldName: string;\n  public titleFieldArr: string[];\n  public titleFieldDelim: any;\n  public titleCompleterDescription: string;\n  public searchFields: string;\n  public fieldNames: any[];\n  public sourceType: string;\n  public lookupService: any;\n  public placeHolder: string;\n  public disableEditAfterSelect: boolean;\n  public stringLabelToField: string;\n  public component: any;\n  public restrictToSelection: boolean;\n  public storeLabelOnly: boolean;\n  public provider: string;\n  public resultArrayProperty: string;\n  public unflattenFlag: boolean;\n\n  @Output() onItemSelect: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'VocabField';\n    this.hasLookup = true;\n    this.vocabId = options['vocabId'] || '';\n    this.controlType = 'textbox';\n    this.titleFieldName = options['titleFieldName'] || 'title';\n    this.titleFieldArr = options['titleFieldArr'] || [];\n    this.searchFields = options['searchFields'] || '';\n    this.titleFieldDelim = options['titleFieldDelim'] || ' - ';\n    this.titleCompleterDescription = options['titleCompleterDescription'] || '';\n    this.fieldNames = options['fieldNames'] || [];\n    this.sourceType = options['sourceType'] || 'vocab';\n    this.placeHolder = options['placeHolder'] || 'Select a valid value';\n    this.disableEditAfterSelect = options['disableEditAfterSelect'] == undefined ? true : options['disableEditAfterSelect'];\n    this.stringLabelToField = options['stringLabelToField'] ? options['stringLabelToField'] : 'dc_title';\n    this.restrictToSelection = _.isUndefined(options['restrictToSelection']) ? false : options['restrictToSelection'];\n    this.storeLabelOnly = options['storeLabelOnly'] ? options['storeLabelOnly'] : false;\n    this.provider = options['provider'] ? options['provider'] : '';\n    this.resultArrayProperty = options['resultArrayProperty'] ? options['resultArrayProperty'] : '';\n    this.unflattenFlag = _.isUndefined(options['unflattenFlag']) ? false : options['unflattenFlag'];\n  }\n\n  createFormModel(valueElem: any = undefined, createFormGroup: boolean = false) {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n    if (createFormGroup) {\n      const flds = {};\n      _.forEach(this.fieldNames, fld => {\n        _.forOwn(fld, (srcFld, targetFld) => {\n          flds[targetFld] = new FormControl(this.value[targetFld] || '');\n        });\n      });\n      this.formModel = new FormGroup(flds);\n    } else {\n      this.formModel = new FormControl(this.value || '');\n    }\n    if (this.value) {\n      if(!_.isString(this.value)) {\n      const init = _.cloneDeep(this.value);\n      init.title = this.getTitle(this.value);\n      this.initialValue = init;\n    } else {\n      let init = {};\n      init['title'] = this.value;\n      init[this.stringLabelToField] = this.value;\n      this.initialValue = init;\n    }\n\n    }\n\n    if (this.required) {\n      this.formModel.setValidators([Validators.required]);\n    }\n    return this.formModel;\n  }\n\n  postInit(value: any) {\n    if (value) {\n      this.value = value;\n    } else {\n      this.setEmptyValue();\n    }\n    this.initLookupData();\n  }\n\n  setEmptyValue(updateTitle: boolean = false) {\n    this.value = null;\n    if (this.formModel) {\n      this.formModel.setValue(null, { emitEvent: true });\n    }\n    if (updateTitle && this.component && this.component.ngCompleter) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = null;\n    }\n    return this.value;\n  }\n\n  setLookupServices(completerService: any, lookupService: any) {\n    this.completerService = completerService;\n    this.lookupService = lookupService;\n  }\n\n  initLookupData() {\n    if (this.sourceType == \"vocab\") {\n      // Hack for creating the intended title...\n      _.forEach(this.sourceData, (data: any) => {\n        data.title = this.getTitle(data);\n      });\n      this.dataService = this.completerService.local(this.sourceData, this.searchFields, 'title');\n    } else if (this.sourceType == \"collection\" || this.sourceType == \"user\") {\n      let url = this.lookupService.getCollectionRootUrl(this.vocabId);\n      if (this.sourceType == \"user\") {\n        url = this.lookupService.getUserLookupUrl();\n      }\n      console.log(`Using: ${url}`);\n      // at the moment, multiple titles arrays are not supported\n      // TODO: consider replacing with ngx-bootstrap typeahead\n      const title = this.titleFieldArr.length == 1 ? this.titleFieldArr[0] : 'title';\n      console.log(`Using title: ${title}`);\n      this.dataService = this.completerService.remote(url, this.searchFields, title);\n    } else if (this.sourceType == \"mint\") {\n      const url = this.lookupService.getMintRootUrl(this.vocabId);\n      console.log(`Using: ${url}`);\n\n      this.dataService = new MintLookupDataService(\n        url,\n        this.lookupService.http,\n        this.fieldNames,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim,\n        this.titleCompleterDescription,\n        this.searchFields,\n        this.unflattenFlag);\n    } else if (this.sourceType == \"external\") {\n      const url = this.lookupService.getExternalServiceUrl(this.provider);\n      this.dataService = new ExternalLookupDataService(\n        url,\n        this.lookupService.http,\n        this.resultArrayProperty,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim\n      );\n    }\n\n  }\n\n  public getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if(_.isString(data)) {\n        return data;\n      }\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : delimPair.prefix}${titleVal}${_.isEmpty(title) ? '' : delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n\n  public getValue(data: any) {\n    const valObj = {};\n    if (!_.isUndefined(data) && !_.isEmpty(data)) {\n      if (_.isString(data)) {\n        console.log(`Data is string...`)\n        if (this.storeLabelOnly) {\n          return data;\n        } else {\n          valObj[this.stringLabelToField] = data;\n        }\n        return valObj;\n      }\n\n        _.forEach(this.fieldNames, (fldName: any) => {\n          if (data.originalObject) {\n            this.getFieldValuePair(fldName, data.originalObject, valObj)\n          } else {\n            this.getFieldValuePair(fldName, data, valObj)\n          }\n        });\n\n    }\n    return valObj;\n  }\n\n  public getFieldValuePair(fldName: any, data: any, valObj: any) {\n    if (_.isString(fldName)) {\n      valObj[fldName] = _.get(data, fldName);\n    } else {\n      // expects a value pair\n      _.forOwn(fldName, (srcFld, targetFld) => {\n        if (_.get(data, srcFld)) {\n          valObj[targetFld] = _.get(data, srcFld);\n        } else {\n          valObj[targetFld] = _.get(data, targetFld);\n        }\n      });\n    }\n  }\n\n  public setValue(value: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    this.formModel.setValue(value, { emitEvent: emitEvent });\n    if (updateTitle) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = this.getTitle(value);\n    }\n  }\n\n  relationshipLookup(searchTerm, lowerTerm, searchFields) {\n    const url = this.lookupService.getMintRootUrl(this.vocabId);\n    console.log(`Using: ${url}`);\n    const mlu = new MintRelationshipLookup(url, this.lookupService.http, searchFields);\n    return mlu.search(searchTerm, lowerTerm);\n  }\n\n}\n\nclass ExternalLookupDataService extends Subject implements CompleterData {\n\n    constructor(private url: string,\n      private http: Http,\n      private arrayProperty: string,\n      private compositeTitleName: string,\n      private titleFieldArr: string[],\n      private titleFieldDelim: string) {\n      super();\n    }\n\n    public search(term: string): void {\n\n      this.http.post(this.url,{options:{query: term}}).map((res: any, index: number) => {\n        // Convert the result to CompleterItem[]\n        let data = res.json();\n        let itemArray = _.get(data, this.arrayProperty);\n        let matches: CompleterItem[] = [];\n        _.each(itemArray, item => {\n          matches.push(this.convertToItem(item));\n        })\n\n        this.next(matches);\n      }).subscribe();\n    }\n\n    public cancel() {\n      // Handle cancel\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n      if (!data) {\n        return null;\n      }\n      let completerItem = {};\n      completerItem[this.compositeTitleName] = this.getTitle(data);\n      completerItem['originalObject'] = data;\n      return completerItem as CompleterItem;\n    }\n\n    getTitle(data: any): string {\n      let title = '';\n      if (data) {\n        if (_.isString(this.titleFieldDelim)) {\n          _.forEach(this.titleFieldArr, (titleFld: string) => {\n            const titleVal = _.get(data, titleFld);\n            if (titleVal) {\n              title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n            }\n          });\n        } else {\n          // // expecting a delim pair array, 'prefix', 'suffix'\n          // _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          //   const delimPair = this.titleFieldDelim[idx];\n          //   const titleVal = data[titleFld];\n          //   if (titleVal) {\n          //     title = `${title} ${titleVal}`;\n          //   }\n          // });\n        }\n      }\n      return title;\n    }\n\n}\nclass MintLookupDataService extends Subject implements CompleterData {\n\n  searchFields: any[];\n\n  constructor(private url: string,\n    private http: Http,\n    private fields: string[],\n    private compositeTitleName: string,\n    private titleFieldArr: string[],\n    private titleFieldDelim: any[],\n    private titleCompleterDescription: string,\n    searchFieldStr: any,\n    private unflattenFlag: boolean) {\n    super();\n    this.searchFields = searchFieldStr.split(',');\n  }\n\n  public search(term: string): void {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      term = _.toLower(term);\n      _.forEach(this.searchFields, (searchFld) => {\n        searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}*`\n      });\n    }\n    const searchUrl = `${this.url}${searchString}&unflatten=${this.unflattenFlag}`;\n    this.http.get(`${searchUrl}`).map((res: any, index: number) => {\n      // Convert the result to CompleterItem[]\n      let data = res.json();\n      let matches: CompleterItem[] = _.map(data, (mintDataItem: any) => { return this.convertToItem(mintDataItem); });\n      this.next(matches);\n    }).subscribe();\n  }\n\n  public cancel() {\n    // Handle cancel\n  }\n\n  public convertToItem(data: any): CompleterItem | null {\n    if (!data) {\n      return null;\n    }\n    const item = {};\n    _.forEach(this.fields, (fieldName) => {\n      if (_.isString(fieldName)) {\n        item[fieldName] = data[fieldName];\n      } else {\n        // expects a value pair\n        _.forOwn(fieldName, (srcFld, targetFld) => {\n          if (_.get(data, srcFld)) {\n            item[srcFld] = _.get(data, srcFld);\n          } else {\n            item[targetFld] = _.get(data, targetFld);\n          }\n        });\n      }\n    });\n    // build the title,\n    let completerItem = {};\n    completerItem[this.compositeTitleName] = this.getTitle(data);\n    completerItem['description'] = this.getCompleterDescription(data);\n    completerItem['originalObject'] = item;\n    return completerItem as CompleterItem;\n  }\n\n  getCompleterDescription(data: any): string {\n    let description = '';\n    const fieldDesc = this.titleCompleterDescription;\n    if(data) {\n      if (_.isString(fieldDesc)) {\n        const ele = data[fieldDesc];\n        description = _.toString(_.head(ele)) || '';\n      } else if (_.isArray(fieldDesc)){\n        // enable descriptions to be built as an array\n        _.forEach(fieldDesc, (fDesc: any) => {\n          description = `${description}${_.isEmpty(description) ? '' : this.titleFieldDelim}${data[fDesc]}`\n        });\n      }\n    }\n    return description;\n  }\n\n  getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${data[titleFld]}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title} ${titleVal}${delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n}\n\n@Injectable()\nexport class VocabFieldLookupService extends BaseService {\n\n  constructor(@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getLookupData(field: VocabField) {\n    const vocabId = field.vocabId;\n    // only retrieving static data when on vocab mode\n    if (field.sourceType == \"vocab\") {\n      const url = `${this.brandingAndPortalUrl}/${this.config.vocabRootUrl}/${vocabId}`;\n      return this.http.get(url, this.options)\n        .flatMap((res: any) => {\n          const data = this.extractData(res);\n          field.sourceData = data;\n          field.postInit(field.value);\n          return Observable.of(field);\n        });\n    }\n    field.postInit(field.value);\n    return Observable.of(field);\n  }\n\n  getCollectionRootUrl(collectionId: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.collectionRootUri}/${collectionId}/?search=`;\n  }\n\n  getUserLookupUrl(searchSource: string = '') {\n    return `${this.brandingAndPortalUrl}/${this.config.userRootUri}/?source=${searchSource}&name=`;\n  }\n\n  findLookupData(field: VocabField, search: string) {\n\n  }\n\n  getMintRootUrl(source: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.mintRootUri}/${source}/?search=`;\n  }\n\n  getExternalServiceUrl(provider: string) {\n    return `${this.brandingAndPortalUrl}/external/vocab/${provider}`;\n  }\n}\n\n@Component({\n  selector: 'rb-vocab',\n  template: `\n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n    \n    {{field.validationMessages.required}}\n  \n  \n    \n      {{field.help}}\n      \n        \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.validationMessages.required}}\n    \n  \n\n  \n    {{field.label}}\n    {{getTitle()}}\n  \n  `,\n})\nexport class VocabFieldComponent extends SimpleComponent {\n  @Input() field: VocabField;\n  @Input() isEmbedded: boolean = false;\n  @Input() canRemove: boolean = false;\n  @Input() removeBtnText: string = null;\n  @Input() removeBtnClass: string = 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n  @Input() index: number;\n  @Input() disableEditAfterSelect: boolean = true;\n  @Output() onRemoveBtnClick: EventEmitter = new EventEmitter();\n  disableInput: boolean;\n  @ViewChild('ngCompleter') public ngCompleter: ElementRef;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.component = this;\n    if (_.isEmpty(this.field.value) || _.isNull(this.field.value) || _.isUndefined(this.field.value)) {\n      this.loaded = true;\n    }\n  }\n\n  public getGroupClass(fldName: string = null): string {\n    if(this.isEmbedded) {\n      return `col-xs-12 form-group ${this.hasRequiredError() ? 'has-error' : ''}`;\n    } else {\n      return '';\n    }\n  }\n\n  onSelect(selected: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    console.log(`On select:`);\n    console.log(selected);\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (selected) {\n      if (this.loaded) {\n        this.field.onItemSelect.emit(selected['originalObject']);\n      } else {\n        // set the flag after initial call\n        this.loaded = true;\n      }\n      if(this.field.storeLabelOnly){\n        this.field.setValue(this.field.getValue(selected.title), emitEvent, updateTitle);\n      } else {\n        this.field.setValue(this.field.getValue(selected['originalObject']), emitEvent, updateTitle);\n      }\n      if (disableEditAfterSelect)\n        this.disableInput = true;\n    } else {\n      if (disableEditAfterSelect) {\n        // means user can't edit, so no worries!\n        this.field.setValue(null, emitEvent, updateTitle);\n      } else {\n        // set whatever value on the searchStr, let the fields decide how to parse the string...\n        this.field.setValue(this.field.getValue(this.field.searchStr), emitEvent, updateTitle);\n      }\n    }\n  }\n\n  onKeyup(value: any) {\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (!disableEditAfterSelect && !this.field.restrictToSelection) {\n      this.field.formModel.setValue(this.field.getValue(this.field.searchStr));\n    }\n\n  }\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  getTitle() {\n    return this.field && _.isFunction(this.field.getTitle) ? this.field.getTitle(this.field.value) : '';\n  }\n\n  getClearUnselected() {\n    if (this.field.restrictToSelection) {\n      return true;\n    } else {\n      return this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    }\n  }\n}\n\nexport class MintRelationshipLookup {\n\n  searchFieldStr: string;\n  http: Http;\n\n  constructor(private url: string, http: Http, searchFieldStr: string) {\n      this.http = http;\n      this.searchFieldStr = searchFieldStr;\n  }\n\n  search(term, lower) {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      if(lower) term = _.toLower(term);\n      if(_.isEmpty(this.searchFieldStr)) {\n        searchString = term;\n      } else {\n        _.forEach(this.searchFieldStr.split(','), (searchFld) => {\n          searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}`\n        });\n      }\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    return this.http.get(`${searchUrl}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MintRelationshipLookup.html":{"url":"classes/MintRelationshipLookup.html","title":"class - MintRelationshipLookup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MintRelationshipLookup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-vocab.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                http\n                            \n                            \n                                searchFieldStr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, http: Http, searchFieldStr: string)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-vocab.component.ts:620\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchFieldStr\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Http\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:620\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchFieldStr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:619\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            search\n                        \n                        \n                    \n                \n            \n            \n                \nsearch(term, lower)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-vocab.component.ts:627\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    term\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    lower\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, Injectable, Inject, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs';\nimport { Subject } from \"rxjs/Subject\";\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map'\nimport { Http } from '@angular/http';\nimport { BaseService } from '../base-service';\nimport { CompleterService, CompleterData, CompleterItem } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport * as luceneEscapeQuery from \"lucene-escape-query\";\n/**\n * Vocabulary Field\n *\n * Author: Shilo Banihit\n *\n */\nexport class VocabField extends FieldBase {\n  public searchStr: any;\n  public vocabId: string;\n  public sourceData: any;\n  public completerService: CompleterService;\n  public dataService: CompleterData;\n  public initialValue: any;\n  public titleFieldName: string;\n  public titleFieldArr: string[];\n  public titleFieldDelim: any;\n  public titleCompleterDescription: string;\n  public searchFields: string;\n  public fieldNames: any[];\n  public sourceType: string;\n  public lookupService: any;\n  public placeHolder: string;\n  public disableEditAfterSelect: boolean;\n  public stringLabelToField: string;\n  public component: any;\n  public restrictToSelection: boolean;\n  public storeLabelOnly: boolean;\n  public provider: string;\n  public resultArrayProperty: string;\n  public unflattenFlag: boolean;\n\n  @Output() onItemSelect: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'VocabField';\n    this.hasLookup = true;\n    this.vocabId = options['vocabId'] || '';\n    this.controlType = 'textbox';\n    this.titleFieldName = options['titleFieldName'] || 'title';\n    this.titleFieldArr = options['titleFieldArr'] || [];\n    this.searchFields = options['searchFields'] || '';\n    this.titleFieldDelim = options['titleFieldDelim'] || ' - ';\n    this.titleCompleterDescription = options['titleCompleterDescription'] || '';\n    this.fieldNames = options['fieldNames'] || [];\n    this.sourceType = options['sourceType'] || 'vocab';\n    this.placeHolder = options['placeHolder'] || 'Select a valid value';\n    this.disableEditAfterSelect = options['disableEditAfterSelect'] == undefined ? true : options['disableEditAfterSelect'];\n    this.stringLabelToField = options['stringLabelToField'] ? options['stringLabelToField'] : 'dc_title';\n    this.restrictToSelection = _.isUndefined(options['restrictToSelection']) ? false : options['restrictToSelection'];\n    this.storeLabelOnly = options['storeLabelOnly'] ? options['storeLabelOnly'] : false;\n    this.provider = options['provider'] ? options['provider'] : '';\n    this.resultArrayProperty = options['resultArrayProperty'] ? options['resultArrayProperty'] : '';\n    this.unflattenFlag = _.isUndefined(options['unflattenFlag']) ? false : options['unflattenFlag'];\n  }\n\n  createFormModel(valueElem: any = undefined, createFormGroup: boolean = false) {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n    if (createFormGroup) {\n      const flds = {};\n      _.forEach(this.fieldNames, fld => {\n        _.forOwn(fld, (srcFld, targetFld) => {\n          flds[targetFld] = new FormControl(this.value[targetFld] || '');\n        });\n      });\n      this.formModel = new FormGroup(flds);\n    } else {\n      this.formModel = new FormControl(this.value || '');\n    }\n    if (this.value) {\n      if(!_.isString(this.value)) {\n      const init = _.cloneDeep(this.value);\n      init.title = this.getTitle(this.value);\n      this.initialValue = init;\n    } else {\n      let init = {};\n      init['title'] = this.value;\n      init[this.stringLabelToField] = this.value;\n      this.initialValue = init;\n    }\n\n    }\n\n    if (this.required) {\n      this.formModel.setValidators([Validators.required]);\n    }\n    return this.formModel;\n  }\n\n  postInit(value: any) {\n    if (value) {\n      this.value = value;\n    } else {\n      this.setEmptyValue();\n    }\n    this.initLookupData();\n  }\n\n  setEmptyValue(updateTitle: boolean = false) {\n    this.value = null;\n    if (this.formModel) {\n      this.formModel.setValue(null, { emitEvent: true });\n    }\n    if (updateTitle && this.component && this.component.ngCompleter) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = null;\n    }\n    return this.value;\n  }\n\n  setLookupServices(completerService: any, lookupService: any) {\n    this.completerService = completerService;\n    this.lookupService = lookupService;\n  }\n\n  initLookupData() {\n    if (this.sourceType == \"vocab\") {\n      // Hack for creating the intended title...\n      _.forEach(this.sourceData, (data: any) => {\n        data.title = this.getTitle(data);\n      });\n      this.dataService = this.completerService.local(this.sourceData, this.searchFields, 'title');\n    } else if (this.sourceType == \"collection\" || this.sourceType == \"user\") {\n      let url = this.lookupService.getCollectionRootUrl(this.vocabId);\n      if (this.sourceType == \"user\") {\n        url = this.lookupService.getUserLookupUrl();\n      }\n      console.log(`Using: ${url}`);\n      // at the moment, multiple titles arrays are not supported\n      // TODO: consider replacing with ngx-bootstrap typeahead\n      const title = this.titleFieldArr.length == 1 ? this.titleFieldArr[0] : 'title';\n      console.log(`Using title: ${title}`);\n      this.dataService = this.completerService.remote(url, this.searchFields, title);\n    } else if (this.sourceType == \"mint\") {\n      const url = this.lookupService.getMintRootUrl(this.vocabId);\n      console.log(`Using: ${url}`);\n\n      this.dataService = new MintLookupDataService(\n        url,\n        this.lookupService.http,\n        this.fieldNames,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim,\n        this.titleCompleterDescription,\n        this.searchFields,\n        this.unflattenFlag);\n    } else if (this.sourceType == \"external\") {\n      const url = this.lookupService.getExternalServiceUrl(this.provider);\n      this.dataService = new ExternalLookupDataService(\n        url,\n        this.lookupService.http,\n        this.resultArrayProperty,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim\n      );\n    }\n\n  }\n\n  public getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if(_.isString(data)) {\n        return data;\n      }\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : delimPair.prefix}${titleVal}${_.isEmpty(title) ? '' : delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n\n  public getValue(data: any) {\n    const valObj = {};\n    if (!_.isUndefined(data) && !_.isEmpty(data)) {\n      if (_.isString(data)) {\n        console.log(`Data is string...`)\n        if (this.storeLabelOnly) {\n          return data;\n        } else {\n          valObj[this.stringLabelToField] = data;\n        }\n        return valObj;\n      }\n\n        _.forEach(this.fieldNames, (fldName: any) => {\n          if (data.originalObject) {\n            this.getFieldValuePair(fldName, data.originalObject, valObj)\n          } else {\n            this.getFieldValuePair(fldName, data, valObj)\n          }\n        });\n\n    }\n    return valObj;\n  }\n\n  public getFieldValuePair(fldName: any, data: any, valObj: any) {\n    if (_.isString(fldName)) {\n      valObj[fldName] = _.get(data, fldName);\n    } else {\n      // expects a value pair\n      _.forOwn(fldName, (srcFld, targetFld) => {\n        if (_.get(data, srcFld)) {\n          valObj[targetFld] = _.get(data, srcFld);\n        } else {\n          valObj[targetFld] = _.get(data, targetFld);\n        }\n      });\n    }\n  }\n\n  public setValue(value: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    this.formModel.setValue(value, { emitEvent: emitEvent });\n    if (updateTitle) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = this.getTitle(value);\n    }\n  }\n\n  relationshipLookup(searchTerm, lowerTerm, searchFields) {\n    const url = this.lookupService.getMintRootUrl(this.vocabId);\n    console.log(`Using: ${url}`);\n    const mlu = new MintRelationshipLookup(url, this.lookupService.http, searchFields);\n    return mlu.search(searchTerm, lowerTerm);\n  }\n\n}\n\nclass ExternalLookupDataService extends Subject implements CompleterData {\n\n    constructor(private url: string,\n      private http: Http,\n      private arrayProperty: string,\n      private compositeTitleName: string,\n      private titleFieldArr: string[],\n      private titleFieldDelim: string) {\n      super();\n    }\n\n    public search(term: string): void {\n\n      this.http.post(this.url,{options:{query: term}}).map((res: any, index: number) => {\n        // Convert the result to CompleterItem[]\n        let data = res.json();\n        let itemArray = _.get(data, this.arrayProperty);\n        let matches: CompleterItem[] = [];\n        _.each(itemArray, item => {\n          matches.push(this.convertToItem(item));\n        })\n\n        this.next(matches);\n      }).subscribe();\n    }\n\n    public cancel() {\n      // Handle cancel\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n      if (!data) {\n        return null;\n      }\n      let completerItem = {};\n      completerItem[this.compositeTitleName] = this.getTitle(data);\n      completerItem['originalObject'] = data;\n      return completerItem as CompleterItem;\n    }\n\n    getTitle(data: any): string {\n      let title = '';\n      if (data) {\n        if (_.isString(this.titleFieldDelim)) {\n          _.forEach(this.titleFieldArr, (titleFld: string) => {\n            const titleVal = _.get(data, titleFld);\n            if (titleVal) {\n              title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n            }\n          });\n        } else {\n          // // expecting a delim pair array, 'prefix', 'suffix'\n          // _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          //   const delimPair = this.titleFieldDelim[idx];\n          //   const titleVal = data[titleFld];\n          //   if (titleVal) {\n          //     title = `${title} ${titleVal}`;\n          //   }\n          // });\n        }\n      }\n      return title;\n    }\n\n}\nclass MintLookupDataService extends Subject implements CompleterData {\n\n  searchFields: any[];\n\n  constructor(private url: string,\n    private http: Http,\n    private fields: string[],\n    private compositeTitleName: string,\n    private titleFieldArr: string[],\n    private titleFieldDelim: any[],\n    private titleCompleterDescription: string,\n    searchFieldStr: any,\n    private unflattenFlag: boolean) {\n    super();\n    this.searchFields = searchFieldStr.split(',');\n  }\n\n  public search(term: string): void {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      term = _.toLower(term);\n      _.forEach(this.searchFields, (searchFld) => {\n        searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}*`\n      });\n    }\n    const searchUrl = `${this.url}${searchString}&unflatten=${this.unflattenFlag}`;\n    this.http.get(`${searchUrl}`).map((res: any, index: number) => {\n      // Convert the result to CompleterItem[]\n      let data = res.json();\n      let matches: CompleterItem[] = _.map(data, (mintDataItem: any) => { return this.convertToItem(mintDataItem); });\n      this.next(matches);\n    }).subscribe();\n  }\n\n  public cancel() {\n    // Handle cancel\n  }\n\n  public convertToItem(data: any): CompleterItem | null {\n    if (!data) {\n      return null;\n    }\n    const item = {};\n    _.forEach(this.fields, (fieldName) => {\n      if (_.isString(fieldName)) {\n        item[fieldName] = data[fieldName];\n      } else {\n        // expects a value pair\n        _.forOwn(fieldName, (srcFld, targetFld) => {\n          if (_.get(data, srcFld)) {\n            item[srcFld] = _.get(data, srcFld);\n          } else {\n            item[targetFld] = _.get(data, targetFld);\n          }\n        });\n      }\n    });\n    // build the title,\n    let completerItem = {};\n    completerItem[this.compositeTitleName] = this.getTitle(data);\n    completerItem['description'] = this.getCompleterDescription(data);\n    completerItem['originalObject'] = item;\n    return completerItem as CompleterItem;\n  }\n\n  getCompleterDescription(data: any): string {\n    let description = '';\n    const fieldDesc = this.titleCompleterDescription;\n    if(data) {\n      if (_.isString(fieldDesc)) {\n        const ele = data[fieldDesc];\n        description = _.toString(_.head(ele)) || '';\n      } else if (_.isArray(fieldDesc)){\n        // enable descriptions to be built as an array\n        _.forEach(fieldDesc, (fDesc: any) => {\n          description = `${description}${_.isEmpty(description) ? '' : this.titleFieldDelim}${data[fDesc]}`\n        });\n      }\n    }\n    return description;\n  }\n\n  getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${data[titleFld]}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title} ${titleVal}${delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n}\n\n@Injectable()\nexport class VocabFieldLookupService extends BaseService {\n\n  constructor(@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getLookupData(field: VocabField) {\n    const vocabId = field.vocabId;\n    // only retrieving static data when on vocab mode\n    if (field.sourceType == \"vocab\") {\n      const url = `${this.brandingAndPortalUrl}/${this.config.vocabRootUrl}/${vocabId}`;\n      return this.http.get(url, this.options)\n        .flatMap((res: any) => {\n          const data = this.extractData(res);\n          field.sourceData = data;\n          field.postInit(field.value);\n          return Observable.of(field);\n        });\n    }\n    field.postInit(field.value);\n    return Observable.of(field);\n  }\n\n  getCollectionRootUrl(collectionId: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.collectionRootUri}/${collectionId}/?search=`;\n  }\n\n  getUserLookupUrl(searchSource: string = '') {\n    return `${this.brandingAndPortalUrl}/${this.config.userRootUri}/?source=${searchSource}&name=`;\n  }\n\n  findLookupData(field: VocabField, search: string) {\n\n  }\n\n  getMintRootUrl(source: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.mintRootUri}/${source}/?search=`;\n  }\n\n  getExternalServiceUrl(provider: string) {\n    return `${this.brandingAndPortalUrl}/external/vocab/${provider}`;\n  }\n}\n\n@Component({\n  selector: 'rb-vocab',\n  template: `\n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n    \n    {{field.validationMessages.required}}\n  \n  \n    \n      {{field.help}}\n      \n        \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.validationMessages.required}}\n    \n  \n\n  \n    {{field.label}}\n    {{getTitle()}}\n  \n  `,\n})\nexport class VocabFieldComponent extends SimpleComponent {\n  @Input() field: VocabField;\n  @Input() isEmbedded: boolean = false;\n  @Input() canRemove: boolean = false;\n  @Input() removeBtnText: string = null;\n  @Input() removeBtnClass: string = 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n  @Input() index: number;\n  @Input() disableEditAfterSelect: boolean = true;\n  @Output() onRemoveBtnClick: EventEmitter = new EventEmitter();\n  disableInput: boolean;\n  @ViewChild('ngCompleter') public ngCompleter: ElementRef;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.component = this;\n    if (_.isEmpty(this.field.value) || _.isNull(this.field.value) || _.isUndefined(this.field.value)) {\n      this.loaded = true;\n    }\n  }\n\n  public getGroupClass(fldName: string = null): string {\n    if(this.isEmbedded) {\n      return `col-xs-12 form-group ${this.hasRequiredError() ? 'has-error' : ''}`;\n    } else {\n      return '';\n    }\n  }\n\n  onSelect(selected: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    console.log(`On select:`);\n    console.log(selected);\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (selected) {\n      if (this.loaded) {\n        this.field.onItemSelect.emit(selected['originalObject']);\n      } else {\n        // set the flag after initial call\n        this.loaded = true;\n      }\n      if(this.field.storeLabelOnly){\n        this.field.setValue(this.field.getValue(selected.title), emitEvent, updateTitle);\n      } else {\n        this.field.setValue(this.field.getValue(selected['originalObject']), emitEvent, updateTitle);\n      }\n      if (disableEditAfterSelect)\n        this.disableInput = true;\n    } else {\n      if (disableEditAfterSelect) {\n        // means user can't edit, so no worries!\n        this.field.setValue(null, emitEvent, updateTitle);\n      } else {\n        // set whatever value on the searchStr, let the fields decide how to parse the string...\n        this.field.setValue(this.field.getValue(this.field.searchStr), emitEvent, updateTitle);\n      }\n    }\n  }\n\n  onKeyup(value: any) {\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (!disableEditAfterSelect && !this.field.restrictToSelection) {\n      this.field.formModel.setValue(this.field.getValue(this.field.searchStr));\n    }\n\n  }\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  getTitle() {\n    return this.field && _.isFunction(this.field.getTitle) ? this.field.getTitle(this.field.value) : '';\n  }\n\n  getClearUnselected() {\n    if (this.field.restrictToSelection) {\n      return true;\n    } else {\n      return this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    }\n  }\n}\n\nexport class MintRelationshipLookup {\n\n  searchFieldStr: string;\n  http: Http;\n\n  constructor(private url: string, http: Http, searchFieldStr: string) {\n      this.http = http;\n      this.searchFieldStr = searchFieldStr;\n  }\n\n  search(term, lower) {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      if(lower) term = _.toLower(term);\n      if(_.isEmpty(this.searchFieldStr)) {\n        searchString = term;\n      } else {\n        _.forEach(this.searchFieldStr.split(','), (searchFld) => {\n          searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}`\n        });\n      }\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    return this.http.get(`${searchUrl}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MultivalueFieldPipe.html":{"url":"pipes/MultivalueFieldPipe.html","title":"pipe - MultivalueFieldPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MultivalueFieldPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/report/app/MultivalueFieldPipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        multivalue\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(values: string, args?: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/report/app/MultivalueFieldPipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    values\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    Inject,\n    Pipe,\n    PipeTransform\n} from '@angular/core';\n\n\n@Pipe({\n    name: 'multivalue'\n})\nexport class MultivalueFieldPipe implements PipeTransform {\n\n\n    public transform(values:string, args?:any[]):string {\n      var output = \"\";\n      for(var i=0; i \" + values[i] +\"\";\n      }\n      output = output + \"\";\n      return output;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PDFListComponent.html":{"url":"components/PDFListComponent.html","title":"component - PDFListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PDFListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-pdflist.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display PDFs related to this record\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-pdf-list\n            \n\n\n\n\n            \n                templateUrl\n                ./field-pdflist.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDownloadUrl\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDownloadUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDownloadUrl(attachment, hasFileName: boolean, index: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-pdflist.component.ts:150\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    attachment\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    hasFileName\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-pdflist.component.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PDFListField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-pdflist.component.ts:118\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport moment from 'moment-es6';\n\n\n\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class PDFListField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  relatedObjects: object[];\n  accessDeniedObjects: object[];\n  failedObjects: object[];\n  hasInit: boolean;\n  recordsService: RecordsService;\n  columns: object[];\n  pdfAttachments: object[];\n  latestPdf: object;\n  startsWith:string;\n  showHistoryTable:boolean = false;\n  showVersionColumn:boolean = false;\n  versionColumnValueField:string = \"\";\n  versionColumnLabelKey: string = \"\";\n  useVersionLabelForFileName:boolean = false;\n\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.relatedObjects = [];\n    this.accessDeniedObjects = [];\n    this.failedObjects = [];\n    this.columns = options['columns'] || [];\n    this.startsWith = options['startsWith'] || 'rdmp-pdf';\n    var relatedObjects = this.relatedObjects;\n    this.recordsService = this.getFromInjector(RecordsService);\n    this.pdfAttachments = [];\n    this.showVersionColumn = _.isUndefined(options['showVersionColumn']) ? this.showVersionColumn : options['showVersionColumn'];\n    this.useVersionLabelForFileName = _.isUndefined(options['useVersionLabelForFileName']) ? this.showVersionColumn : options['useVersionLabelForFileName'];\n    this.versionColumnValueField = options['versionColumnValueField'] || this.versionColumnValueField;\n    this.versionColumnLabelKey = options['versionColumnLabelKey'] || this.versionColumnLabelKey;\n  }\n\n  getVersionLabel(attachment, index) {\n    const versionValue = this.fieldMap[this.versionColumnValueField].field.value;\n    let version = null;\n    if (_.isArray(versionValue)) {\n      version = versionValue[versionValue.length - (index+1)];\n    } else {\n      version = _.toNumber(versionValue) - index;\n    }\n    return `${this.getTranslated(this.versionColumnLabelKey, \"\")}${version}`;\n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n\n      this.formModel = new FormControl(this.value || []);\n\n      if (this.value) {\n        this.setValue(this.value);\n      }\n\n    return this.formModel;\n  }\n\n  setValue(value:any) {\n    this.formModel.patchValue(value, {emitEvent: false });\n    this.formModel.markAsTouched();\n  }\n\n  setEmptyValue() {\n    this.value = [];\n    return this.value;\n  }\n}\n\n/**\n* Component to display PDFs related to this record\n*\n*/\n@Component({\n  selector: 'rb-pdf-list',\n  templateUrl: './field-pdflist.html'\n})\nexport class PDFListComponent extends SimpleComponent implements OnInit {\n  field: PDFListField;\n\n  public ngOnInit() {\n    const oid = this.fieldMap._rootComp.oid;\n    if(oid) {\n      let allAttachmentsPromise = this.field.recordsService.getAttachments(oid);\n      let matchingExpression = new RegExp(`${this.field.startsWith}-[0-9a-fA-F]{32}-[0-9]+\\.pdf`);\n      var that = this;\n      allAttachmentsPromise.then(allAttachments => {\n        this.field.latestPdf = null;\n        _.forEach(allAttachments, (attachment:any) => {\n          if(matchingExpression.test(attachment.label)) {\n\n            attachment.dateUpdated = moment(attachment.dateUpdated).format('LLL');\n            this.field.pdfAttachments.push(attachment);\n            if(this.field.latestPdf == null || moment(this.field.latestPdf['dateUpdated']).isBefore(moment(attachment.dateUpdated))) {\n              this.field.latestPdf = attachment;\n            }\n          }\n        });\n\n        this.field.pdfAttachments.sort(function compare(a, b) {\n          let before = moment(a['dateUpdated']).isBefore(moment(b['dateUpdated']));\n          //We want descending order so let's reverse it\n          return before ? 1 : -1;\n        });\n\n      });\n\n    }\n  }\n\n  public getDownloadUrl(attachment, hasFileName:boolean=false, index:number=0) {\n    const oid = this.fieldMap._rootComp.oid;\n    const url = `${this.field.recordsService.getBrandingAndPortalUrl}/record/${oid}/datastream?datastreamId=${attachment.label}`\n    if (hasFileName) {\n      if (this.field.useVersionLabelForFileName) {\n        return `${url}&fileName=rdmp-${this.field.getVersionLabel(attachment, index)}.pdf`;\n      } else {\n        return `${url}&fileName=rdmp.pdf`;\n      }\n    } else {\n      return url;\n    }\n  }\n}\n\n    \n\n    \n        \n\n 0\">\n  &nbsp; Download a PDF of this plan\n   1\" data-toggle=\"modal\" data-target=\"#pdfHistoryModal\" [ngClass]=\"field.cssClasses\">Download a previous version -->\n\n\n\n  &nbsp; Download a PDF of this plan\n  \n    \n    Toggle Dropdown\n  \n  \n    Download a previous version\n  \n\n\n\n\n\n  \n    \n      \n        \n          \n              \n                  VersionDate createdDownload\n              \n          \n          \n            \n              \n              {{ item.dateUpdated }}\n               Download\n            \n          \n        \n      \n      \n        Close\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">    Download a PDF of this plan   1\" data-toggle=\"modal\" data-target=\"#pdfHistoryModal\" [ngClass]=\"field.cssClasses\">Download a previous version -->    Download a PDF of this plan          Toggle Dropdown        Download a previous version                                                                VersionDate createdDownload                                                                          {{ item.dateUpdated }}               Download                                                  Close            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PDFListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ParameterRetrieverComponent.html":{"url":"components/ParameterRetrieverComponent.html","title":"component - ParameterRetrieverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ParameterRetrieverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                parameter-retriever\n            \n\n\n\n            \n                template\n                \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUrlParameter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrlParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrlParameter(param: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:735\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:728\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ParameterRetrieverField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:726\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ParameterRetrieverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Plan.html":{"url":"classes/Plan.html","title":"class - Plan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Plan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/dashboard-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboardTitle\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateModified\n                            \n                            \n                                oid\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dashboardTitle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreated\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateModified\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PlanTable {\n\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: Plan[]\n}\nexport class Plan {\n  oid: string\n  title: string\n  dateCreated: string\n  dateModified: string\n\n  dashboardTitle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlanTable.html":{"url":"classes/PlanTable.html","title":"class - PlanTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlanTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/dashboard-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                items\n                            \n                            \n                                noItems\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Plan[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PlanTable {\n\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: Plan[]\n}\nexport class Plan {\n  oid: string\n  title: string\n  dateCreated: string\n  dateModified: string\n\n  dashboardTitle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublishDataLocationRefreshComponent.html":{"url":"components/PublishDataLocationRefreshComponent.html","title":"component - PublishDataLocationRefreshComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PublishDataLocationRefreshComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-publish-data-location-refresh.component.ts\n\n\n    \n        Description\n    \n    \n        Component to refresh data pub data locations from the related Data Record\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                publish-data-location-refresh\n            \n\n\n\n\n            \n                templateUrl\n                ./field-publish-data-location-refresh.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PublishDataLocationRefreshField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-publish-data-location-refresh.component.ts:73\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\n\ndeclare var jQuery: any;\n/**\n * Published Data Refresher Component Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class PublishDataLocationRefreshField extends FieldBase {\n  isGettingAttachments: boolean;\n  origDisabledExpr: string;\n  recordsService: RecordsService;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n\n    this.value = options['value'];\n    this.recordsService = this.getFromInjector(RecordsService);\n    this.origDisabledExpr = options['disabledExpression'];\n  }\n\n  public getAttachments(event) {\n    event.preventDefault();\n    this.options['disabledExpression'] = \"true\";\n    this.recordsService.getRecordMeta(this.value).then(data => {\n      this.onValueUpdate.emit(data);\n      this.options['disabledExpression'] = this.origDisabledExpr;\n    });\n  }\n\n  getRelatedRecordId() {\n    this.value = this.fieldMap._rootComp.relatedRecordId;\n  }\n}\n\n/**\n* Component to refresh data pub data locations from the related Data Record\n*\n*\n*\n* @author Shilo Banihit\n*/\n@Component({\n  selector: 'publish-data-location-refresh',\n  templateUrl: './field-publish-data-location-refresh.component.html'\n})\nexport class PublishDataLocationRefreshComponent extends SimpleComponent {\n  field: PublishDataLocationRefreshField;\n}\n\n    \n\n    \n        \n  {{ field.label }}\n  \n  {{field.help}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ field.label }}    {{field.help}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublishDataLocationRefreshComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublishDataLocationSelectorComponent.html":{"url":"components/PublishDataLocationSelectorComponent.html","title":"component - PublishDataLocationSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PublishDataLocationSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-publishdatalocationselector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display information from related objects within ReDBox\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                publish-data-location-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./field-publishdatalocationselector.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editingNotes\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editNotes\n                            \n                            \n                                    Public\n                                getAbsUrl\n                            \n                            \n                                    Public\n                                getDatalocations\n                            \n                            \n                                    Public\n                                hideEditNotes\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                saveNotes\n                            \n                            \n                                    Public\n                                selectAllLocations\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            editNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editNotes(dataLocation, i)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:176\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataLocation\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getAbsUrl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAbsUrl(location: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDatalocations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatalocations()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hideEditNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hideEditNotes()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            saveNotes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    saveNotes()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            selectAllLocations\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    selectAllLocations(checked)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    checked\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editingNotes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {notes: '', index:-1}\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:156\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PublishDataLocationSelectorField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:155\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport * as Uppy from 'uppy';\n\ndeclare var jQuery: any;\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class PublishDataLocationSelectorField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  value: any[];\n  accessDeniedObjects: object[];\n  failedObjects: object[];\n  recordsService: RecordsService;\n  columns: object[];\n  newLocation:any = {type:\"url\", location:\"\",notes:\"\"};\n  dataTypes:object[] = [{\n    'label': 'URL',\n    'value': 'url',\n  },\n  {\n    'label': 'Physical location',\n    'value': 'physical',\n  },\n  {\n    'label': 'File path',\n    'value': 'file',\n  },\n  {\n    'label': 'Attachment',\n    'value': 'attachment'\n  }\n];\n\n  dataTypeLookup:any = {\n    'url':\"URL\",\n    'physical':\"Physical location\",\n    'attachment':\"Attachment\",\n    'file':\"File path\"\n  }\n\n  editNotesButtonText: string;\n  editNotesTitle: string;\n  cancelEditNotesButtonText: string;\n  applyEditNotesButtonText: string;\n  editNotesCssClasses: any;\n  typeHeader: string;\n  locationHeader: string;\n  notesHeader: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.accessDeniedObjects = [];\n\n    this.columns = options['columns'] || [];\n\n    this.editNotesButtonText = this.getTranslated(options['editNotesButtonText'], 'Edit');\n    this.editNotesTitle = this.getTranslated(options['editNotesTitle'], 'Edit Notes');\n    this.cancelEditNotesButtonText = this.getTranslated(options['cancelEditNotesButtonText'], 'Cancel');\n    this.applyEditNotesButtonText = this.getTranslated(options['applyEditNotesButtonText'], 'Apply');\n    this.editNotesCssClasses = options['editNotesCssClasses'] || 'form-control';\n    this.typeHeader =  this.getTranslated(options['typeHeader'], 'Type');\n    this.locationHeader =  this.getTranslated(options['locationHeader'], 'Location');\n    this.notesHeader =  this.getTranslated(options['notesHeader'], 'Notes');\n\n    this.value = options['value'] || this.setEmptyValue();\n    this.recordsService = this.getFromInjector(RecordsService);\n  }\n\n  setValue(value:any, emitEvent:boolean = true) {\n    this.formModel.setValue(value, {emitEvent: emitEvent, emitModelToViewChange:true });\n    this.formModel.markAsTouched();\n    this.formModel.markAsDirty();\n  }\n\n  setEmptyValue() {\n    this.value = [];\n    return this.value;\n  }\n\n  addLocation() {\n    this.value.push(this.newLocation);\n    this.setValue(this.value);\n    this.newLocation = {type:\"url\", location:\"\",notes:\"\"};\n  }\n\n  appendLocation(newLoc:any) {\n    this.value.push(newLoc);\n    this.setValue(this.value, true);\n  }\n\n  clearPendingAtt(value) {\n    _.each(value, (val:any) => {\n      if (val.type == 'attachment') {\n       _.unset(val, 'pending');\n      }\n    });\n  }\n\n  public populateDataLocation(oid, config: any) {\n      console.log(oid);\n      this.recordsService.getRecordMeta(oid).then(record => {\n        this.value = record.dataLocations;\n      });\n }\n\n  removeLocation(loc: any) {\n    _.remove(this.value, (val:any) => {\n      return val.type == loc.type && val.name == loc.name && val.location == loc.location;\n    });\n    this.setValue(this.value);\n  }\n}\n/**\n* Component to display information from related objects within ReDBox\n*\n*\n*\n*\n*/\n@Component({\n  selector: 'publish-data-location-selector',\n  templateUrl: './field-publishdatalocationselector.html'\n})\nexport class PublishDataLocationSelectorComponent extends SimpleComponent {\n  field: PublishDataLocationSelectorField;\n  editingNotes: any = {notes: '', index:-1};\n\n  public ngOnInit() {\n\n  }\n\n  public selectAllLocations(checked){\n    _.each(this.field.value, (dataLocation:any) => {\n      dataLocation.selected = checked;\n    });\n  }\n\n  public getDatalocations() {\n    return this.field.value;\n  }\n\n  public getAbsUrl(location:string) {\n    return `${this.field.recordsService.getBrandingAndPortalUrl}/record/${location}`\n  }\n\n  public editNotes(dataLocation, i) {\n    this.editingNotes = {notes: dataLocation.notes, index:i};\n    jQuery(`#${this.field.name}_editnotes`).modal('show');\n  }\n\n  public hideEditNotes() {\n    jQuery(`#${this.field.name}_editnotes`).modal('hide');\n  }\n\n  public saveNotes() {\n    jQuery(`#${this.field.name}_editnotes`).modal('hide');\n    this.field.value[this.editingNotes.index].notes = this.editingNotes.notes;\n  }\n}\n\n    \n\n    \n        \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n    \n    \n      \n        \n          Select\n          {{ field.typeHeader }}\n          {{ field.locationHeader }}\n          {{ field.notesHeader }}\n        \n      \n      \n        \n          \n          {{ field.dataTypeLookup[dataLocation.type] }}\n          \n            \n            {{ dataLocation.location }}\n            \n            \n              \n                {{ dataLocation.name }}\n              \n              \n                {{ dataLocation.name }}\n              \n            \n          \n          \n            {{ dataLocation.notes }}\n            {{ field.editNotesButtonText }}\n          \n\n        \n      \n    \n  \n  Export -->\n\n\n\n\n  \n    \n      \n        &times;\n        \n      \n      \n        \n      \n      \n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}                                        Select          {{ field.typeHeader }}          {{ field.locationHeader }}          {{ field.notesHeader }}                                                {{ field.dataTypeLookup[dataLocation.type] }}                                  {{ dataLocation.location }}                                                      {{ dataLocation.name }}                                            {{ dataLocation.name }}                                                          {{ dataLocation.notes }}            {{ field.editNotesButtonText }}                                Export -->                    ×                                                                    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublishDataLocationSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RbValidator.html":{"url":"classes/RbValidator.html","title":"class - RbValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RbValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/validators.ts\n        \n\n            \n                Description\n            \n            \n                Custom RB-Specific Validators - static methods only\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isEmpty\n                            \n                            \n                                    Static\n                                noEmptyInGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isEmpty\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isEmpty(control: AbstractControl)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/validators.ts:34\n                \n            \n\n\n            \n                \n                    Forces validation on empty / null values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                AbstractControl\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            noEmptyInGroup\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    noEmptyInGroup(field: any, dependentFieldNames: string[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/validators.ts:43\n                \n            \n\n\n            \n                \n                    Makes sure all fields have values otherwise this will return an error object containing the emptyFields\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dependentFieldNames\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ValidatorFn, Validators, AbstractControl, FormGroup } from '@angular/forms';\nimport * as _ from \"lodash\";\n\n/**\n * Custom RB-Specific Validators - static methods only\n *\n * Author: Shilo Banihit\n *\n */\nexport class RbValidator {\n\n  /**\n  * Forces validation on empty / null values\n  */\n  static isEmpty(control: AbstractControl ): boolean {\n    return (control && (_.isEmpty(control.value) || control.value.length == 0));\n  }\n\n  /**\n  *\n  * Makes sure all fields have values otherwise this will return an error object containing the emptyFields\n  *\n  */\n  static noEmptyInGroup(field: any, dependentFieldNames: string[]): ValidatorFn {\n    return (control: AbstractControl ): {[key: string]: any} => {\n      const group = field.formModel;\n      if (group) {\n        const status: {empty: boolean, emptyFields: any[]} = {empty: false, emptyFields: []};\n        _.forEach(dependentFieldNames, (f:any)=> {\n          const isEmpty = RbValidator.isEmpty(group.controls[f]);\n          if (isEmpty) {\n            status.emptyFields.push(f);\n          }\n          status.empty = status.empty || (isEmpty != null);\n        });\n        const retval = status.empty ? status : null;\n        return retval;\n      }\n      console.log(`Group doesn't exist yet: ${field.name}`);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecordActionResult.html":{"url":"classes/RecordActionResult.html","title":"class - RecordActionResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecordActionResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/records.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                oid\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:233\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:232\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:231\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }       from '@angular/core';\nimport { FieldBase }     from './field-base';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport { ConfigService } from '../config-service';\ndeclare var io: any;\n/**\n * Plan Client-side services\n *\n *\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RecordsService extends BaseService {\n\n  constructor (\n    @Inject(Http) http: Http,\n    @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    protected app: ApplicationRef\n  ) {\n    super(http, configService);\n  }\n\n  getForm(oid: string = null, recordType: string = null, editable: boolean = true, formName: string = null) {\n    if (_.isEmpty(oid)) {\n      oid = null;\n    }\n    return this.getFormFieldsMeta(recordType, editable, oid, formName).then((form:any) => {\n      return this.fcmetaService.getLookupData(form.fieldsMeta).flatMap((fields:any) => {\n        form.fieldsMata = fields;\n        return Observable.of(form);\n      });\n    });\n  }\n\n  addRenderCompleteElement(fieldsMeta){\n    var renderCompleteElement = {\n            \"class\" : \"Container\",\n            \"compClass\" : \"TextBlockComponent\",\n            \"definition\" : {\n                \"value\" : \"\",\n                \"type\" : \"span\",\n                \"cssClasses\" : \"form-render-complete\"\n            }\n        };\n\n    fieldsMeta.push(renderCompleteElement);\n\n  }\n\n  getFormFields(recordType:string, oid: string=null, editable:boolean, formName: string = null) {\n    const ts = new Date().getTime();\n    console.log(\"Oid is: \" + oid);\n    const url = oid ? `${this.brandingAndPortalUrl}/record/form/auto/${oid}?edit=${editable}&ts=${ts}&formName=${formName}` : `${this.brandingAndPortalUrl}/record/form/${recordType}?edit=${editable}&ts=${ts}`;\n    console.log(\"URL is: \" + url);\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res:any) => this.extractData(res));\n  }\n\n  getFormFieldsMeta(recordType:string, editable:boolean, oid:string=null, formName: string = null) {\n    return this.getFormFields(recordType, oid, editable, formName).then((form:any) => {\n      if (form && form.fields) {\n        if(!editable){\n          // Add an empty element to the end of the form so a screenshot tool can detect the rendered form reliably\n          this.addRenderCompleteElement(form.fields);\n        }\n        form.fieldsMeta = this.fcmetaService.getFieldsMeta(form.fields);\n      } else {\n        console.error(\"Error loading form:\" + recordType);\n        throw form;\n      }\n      return form;\n    });\n  }\n\n  create(record: any, recordType: string, targetStep: string = '') {\n    return this.http.post(`${this.brandingAndPortalUrl}/recordmeta/${recordType}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  update(oid: string, record: any, targetStep: string = '') {\n    return this.http.put(`${this.brandingAndPortalUrl}/recordmeta/${oid}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n\n  protected getTargetStepParam(targetStep, delim) {\n    return _.isEmpty(targetStep) ? '' : `${delim}targetStep=${targetStep}`;\n  }\n\n  stepTo(oid: string, record: any, targetStep: string) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/workflow/step/${targetStep}/${oid}`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getDashboardUrl(recType:string='rdmp') {\n    return `${this.brandingAndPortalUrl}/dashboard/${recType}`;\n  }\n\n  getAttachments(oid: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/attachments`, this.getOptionsClient()).toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  modifyEditors(records, username, email) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/editors/modify`, {records:records, username:username, email:email}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  updateResponsibilities(records, role, updateData) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/responsibility/update`, {records:records, role:role, updateData:updateData}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getTransferResponsibility(recordType) {\n    return this.http.get(`${this.brandingAndPortalUrl}/transferconfig/${recordType}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Object);\n  }\n\n  search(params: RecordSearchParams) {\n    let refinedSearchStr = '';\n    params.filterActiveRefinersWithNoData();\n    if (_.size(params.activeRefiners) > 0) {\n      let exactSearchNames = '';\n      let exactSearchValues = '';\n      let facetSearchNames = '';\n      let facetSearchValues = '';\n      _.forEach(params.activeRefiners, (refiner: RecordSearchRefiner)=> {\n        switch (refiner.type) {\n          case \"exact\":\n            exactSearchNames = `${_.isEmpty(exactSearchNames) ? `&exactNames=` : `${exactSearchNames},`}${refiner.name}`;\n            exactSearchValues = `${exactSearchValues}&exact_${refiner.name}=${refiner.value}`;\n            break;\n          case \"facet\":\n            facetSearchNames = `${_.isEmpty(facetSearchNames) ? `&facetNames=` : `${facetSearchNames},`}${refiner.name}`;\n            if (!_.isEmpty(refiner.activeValue)) {\n              facetSearchValues = `${facetSearchValues}&facet_${refiner.name}=${refiner.activeValue}`;\n            }\n            break;\n        }\n      });\n      refinedSearchStr = `${exactSearchNames}${exactSearchValues}${facetSearchNames}${facetSearchValues}`;\n    }\n    return this.http.get(`${this.brandingAndPortalUrl}/record/search/${params.recordType}/?searchStr=${params.basicSearch}${refinedSearchStr}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getType(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getAllTypes() {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkflowSteps(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/wfSteps/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getRecordMeta(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/metadata/`+oid, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getPermissions(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/permissions`, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n\n  executeAction(action:string, params:any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/action/${action}`, params, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getAsyncProgress(fq:string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/asynch?fq=${fq}`, this.options)\n    .toPromise()\n    .then((res: any) => this.extractData(res));\n  }\n\n  subscribeToAsyncProgress(oid: string = null, connectCb) {\n    io.socket.get(`${this.brandingAndPortalUrl}/asynch/subscribe/${oid}`, connectCb);\n  }\n\n  delete(oid: string) {\n    return this.http.delete(`${this.brandingAndPortalUrl}/record/delete/${oid}`, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n}\n\nexport class RecordActionResult {\n  success:boolean;\n  oid: string;\n  message: string;\n}\n\nexport class RecordSearchRefiner {\n  name: string;\n  title: string;\n  type: string;\n  value: any;\n  alwaysActive: boolean;\n  typeLabel: string;\n  activeValue: any;\n\n  constructor(opts: any = {}) {\n    this.name = opts.name;\n    this.title = opts.title;\n    this.type = opts.type;\n    this.value = opts.value;\n    this.typeLabel = opts.typeLabel;\n    this.alwaysActive = opts.alwaysActive;\n  }\n\n  setCurrentValue(value: any) {\n    if (this.type == \"facet\") {\n      this.activeValue = value;\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class RecordSearchParams {\n  recordType: string;\n  basicSearch: string;\n  activeRefiners: any[];\n  refinerConfig: RecordSearchRefiner[];\n\n  constructor(recType: string) {\n    this.recordType = recType;\n    this.activeRefiners = [];\n    this.clear();\n  }\n\n  clear() {\n    this.basicSearch = null;\n    _.remove(this.activeRefiners, refiner => {\n      refiner.value = null;\n      refiner.activeValue = null;\n      return !refiner.alwaysActive;\n    });\n  }\n\n  getRefinerConfig(name: string) {\n    return _.find(this.refinerConfig, (config) => {\n      return config.name == name;\n    });\n  }\n\n  setRefinerConfig(config: RecordSearchRefiner[]) {\n    this.refinerConfig = config;\n    // parse through and activate those set as active...\n    _.forEach(this.refinerConfig, (refinerConfig) => {\n      if (refinerConfig.alwaysActive) {\n        this.addActiveRefiner(refinerConfig);\n      }\n    });\n  }\n\n  getHttpQuery(searchUrl: string) {\n    let refinerValues = '';\n    _.forEach(this.activeRefiners, (refiner:RecordSearchRefiner) => {\n      if (refiner.type == \"facet\") {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.activeValue) ? '' : refiner.activeValue}`;\n      } else {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.value) ? '' : refiner.value}`;\n      }\n    });\n    return `${searchUrl}?q=${this.basicSearch}&type=${this.recordType}${refinerValues}`;\n  }\n\n  getRefinerConfigs() {\n    return this.refinerConfig;\n  }\n\n  addActiveRefiner(refiner: RecordSearchRefiner) {\n    const existingRefiner = _.find(this.activeRefiners, (activeRefiner:RecordSearchRefiner) => {\n      return activeRefiner.name == refiner.name;\n    });\n    if (existingRefiner) {\n      existingRefiner.value = refiner.value;\n    } else {\n      this.activeRefiners.push(refiner);\n    }\n  }\n\n  parseQueryStr(queryStr:string) {\n    queryStr = decodeURI(queryStr);\n    let refinerValues = {};\n    _.forEach(queryStr.split('&'), (q)=> {\n      const qObj = q.split('=');\n      if (_.startsWith(qObj[0], \"q\")) {\n        this.basicSearch = qObj[1];\n      }\n      if (_.startsWith(qObj[0], \"refiner|\")) {\n        const refinerName = qObj[0].split('|')[1];\n        refinerValues[refinerName] = qObj[1];\n      }\n    });\n    _.forOwn(refinerValues, (value, name) => {\n      const config = this.getRefinerConfig(name);\n      config.setCurrentValue(value);\n      this.addActiveRefiner(config);\n    });\n  }\n\n  filterActiveRefinersWithNoData() {\n    const removed = _.remove(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      const value = refiner.type == 'exact' ? refiner.value : refiner.activeValue;\n      return  !refiner.alwaysActive && (_.isEmpty(value) || _.isUndefined(value));\n    });\n  }\n\n  hasActiveRefiners() {\n    let hasActive = false;\n    _.forEach(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      if (!hasActive && (!_.isEmpty(refiner.value))) {\n        hasActive = true;\n      }\n    });\n    return hasActive;\n  }\n\n  setFacetValues(facets: any) {\n    _.forEach(facets, (facet: any) => {\n      const refiner = _.find(this.activeRefiners, (refinerConfig: RecordSearchRefiner) => {\n        return refinerConfig.name == facet.name;\n      });\n      if (refiner) {\n        refiner.value = facet.values;\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordMetadataRetrieverComponent.html":{"url":"components/RecordMetadataRetrieverComponent.html","title":"component - RecordMetadataRetrieverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecordMetadataRetrieverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/record-meta.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-metadata-retriever\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RecordMetadataRetrieverField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/record-meta.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { RecordsService } from './records.service';\nimport { SimpleComponent } from './field-simple.component';\n\nexport class RecordMetadataRetrieverField extends FieldBase {\n  parameterName: string;\n  recordsService: RecordsService;\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.recordsService = this.getFromInjector(RecordsService);\n    this.parameterName = options.parameterName || '';\n  }\n\n  public publishMetadata(oid: any, config: any) {\n    this.recordsService.getRecordMeta(oid).then(data => {\n      data.oid = oid;\n      this.onValueUpdate.emit(data);\n    });\n  }\n\n}\n\n@Component({\n  selector: 'record-metadata-retriever',\n  template: `\n  `,\n})\nexport class RecordMetadataRetrieverComponent extends SimpleComponent {\n  field: RecordMetadataRetrieverField;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecordMetadataRetrieverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordPermissionsComponent.html":{"url":"components/RecordPermissionsComponent.html","title":"component - RecordPermissionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecordPermissionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-recordpermissions.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display information from related objects within ReDBox\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-recordpermissions\n            \n\n\n\n\n            \n                templateUrl\n                ./field-recordpermissions.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sanitizeUrl\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-recordpermissions.component.ts:121\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sanitizeUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsanitizeUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-recordpermissions.component.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RecordPermissionsField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-recordpermissions.component.ts:121\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/zip';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n\n\n/**\n * Record Permissions Model\n *\n *\n * @author Andrew Brazzatti\n *\n */\nexport class RecordPermissionsField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  hasInit: boolean;\n  recordsService: RecordsService;\n\n  permissions: any = {edit:[],view:[],editRoles:[],viewRoles:[],editPending:[],viewPending:[]}\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n\n    this.value = options['value'] || this.setEmptyValue();\n    this.recordsService = this.getFromInjector(RecordsService);\n\n  }\n\n/**\n* Loading the metadata for each related object in the array\n*/\n  asyncLoadData() {\n    let oid = this.fieldMap._rootComp.oid;\n    let getRecordMetaObs = [];\n    var that = this;\n\n    if(oid == null || oid == \"\") {\n      return Observable.of(null);\n     } else {\n      return fromPromise(this.recordsService.getPermissions(oid)).flatMap(permissions => {\n        that.permissions = permissions;\n       return Observable.of(permissions);\n      });\n      \n    }\n    \n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n\n    this.formModel = new FormControl(this.value || []);\n\n    if (this.value) {\n      this.setValue(this.value);\n    }\n\n    return this.formModel;\n  }\n\n  setValue(value: any) {\n    this.formModel.patchValue(value, { emitEvent: false });\n    this.formModel.markAsTouched();\n  }\n\n  setEmptyValue() {\n    this.value = [];\n    return this.value;\n  }\n}\n\ndeclare var aotMode\n// Setting the template url to a constant rather than directly in the component as the latter breaks document generation\nlet rbRelatedObjectDataTemplate = './field-recordpermissions.html';\nif (typeof aotMode == 'undefined') {\n  rbRelatedObjectDataTemplate = '../angular/shared/form/field-recordpermissions.html';\n}\n\n/**\n* Component to display information from related objects within ReDBox\n*\n*\n*\n*\n*/\n@Component({\n  selector: 'rb-recordpermissions',\n  templateUrl: './field-recordpermissions.html'\n})\nexport class RecordPermissionsComponent extends SimpleComponent {\n  field: RecordPermissionsField;\n\n  constructor(private sanitizer: DomSanitizer) {\n    super();\n  }\n\n  sanitizeUrl(url:string){\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n\n    \n\n    \n        \n\n  \n  \n    \n    \n      \n          \n             \n          \n      \n      \n        \n          {{permission.username}}{{permission.name}}{{permission.email}}\n        \n        \n      \n    \n\n    \n    \n      \n          \n            \n          \n      \n      \n        \n          {{permission.username}}{{permission.name}}{{permission.email}}\n        \n        \n      \n    \n\n    \n    \n      \n          \n             \n          \n      \n      \n        \n          {{permission}}\n        \n      \n    \n\n    \n    \n      \n          \n             \n          \n      \n\n        \n          \n            {{permission}}\n          \n        \n        \n    \n\n    \n    \n      \n          \n             \n          \n      \n      \n        \n          {{permission}}\n        \n      \n    \n\n    \n    \n      \n          \n             \n          \n      \n      \n        \n          {{permission}}\n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                 {{permission.username}}{{permission.name}}{{permission.email}}                                                                                                      {{permission.username}}{{permission.name}}{{permission.email}}                                                                                                       {{permission}}                                                                                                     {{permission}}                                                                                                           {{permission}}                                                                                               {{permission}}                            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecordPermissionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecordSearchModule.html":{"url":"modules/RecordSearchModule.html","title":"module - RecordSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    RecordSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RecordSearchModule\n\n\n\ncluster_RecordSearchModule_declarations\n\n\n\ncluster_RecordSearchModule_RecordSearchComponent_providers\n\n\n\ncluster_RecordSearchModule_imports\n\n\n\ncluster_RecordSearchModule_bootstrap\n\n\n\n\nRecordSearchComponent\n\nRecordSearchComponent\n\n\n\nRecordSearchModule\n\nRecordSearchModule\n\nRecordSearchModule -->\n\nRecordSearchComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchRefinerComponent\n\nRecordSearchRefinerComponent\n\nRecordSearchModule -->\n\nRecordSearchRefinerComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchComponent \n\nRecordSearchComponent \n\nRecordSearchComponent  -->\n\nRecordSearchModule->RecordSearchComponent \n\n\n\n\n\nLocation\n\nLocation\n\nRecordSearchComponent -->\n\nLocation->RecordSearchComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nRecordSearchComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->RecordSearchComponent\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nRecordSearchModule -->\n\nSharedModule->RecordSearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/record_search/app/record_search.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RecordSearchComponent\n                        \n                        \n                            RecordSearchRefinerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            RecordSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { RecordSearchComponent }  from './';\nimport { RecordSearchRefinerComponent } from './';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule],\n  declarations: [ RecordSearchRefinerComponent, RecordSearchComponent  ],\n  providers:    [ RecordSearchRefinerComponent ],\n  bootstrap:    [ RecordSearchComponent]\n})\nexport class RecordSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecordSearchParams.html":{"url":"classes/RecordSearchParams.html","title":"class - RecordSearchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecordSearchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/records.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeRefiners\n                            \n                            \n                                basicSearch\n                            \n                            \n                                recordType\n                            \n                            \n                                refinerConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActiveRefiner\n                            \n                            \n                                clear\n                            \n                            \n                                filterActiveRefinersWithNoData\n                            \n                            \n                                getHttpQuery\n                            \n                            \n                                getRefinerConfig\n                            \n                            \n                                getRefinerConfigs\n                            \n                            \n                                hasActiveRefiners\n                            \n                            \n                                parseQueryStr\n                            \n                            \n                                setFacetValues\n                            \n                            \n                                setRefinerConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(recType: string)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/records.service.ts:267\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recType\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeRefiners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:266\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            basicSearch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:265\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recordType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:264\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refinerConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RecordSearchRefiner[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:267\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addActiveRefiner\n                        \n                        \n                    \n                \n            \n            \n                \naddActiveRefiner(refiner: RecordSearchRefiner)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:316\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    refiner\n                                    \n                                                RecordSearchRefiner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:275\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            filterActiveRefinersWithNoData\n                        \n                        \n                    \n                \n            \n            \n                \nfilterActiveRefinersWithNoData()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:347\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHttpQuery\n                        \n                        \n                    \n                \n            \n            \n                \ngetHttpQuery(searchUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:300\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRefinerConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetRefinerConfig(name: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:284\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRefinerConfigs\n                        \n                        \n                    \n                \n            \n            \n                \ngetRefinerConfigs()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:312\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasActiveRefiners\n                        \n                        \n                    \n                \n            \n            \n                \nhasActiveRefiners()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:354\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            parseQueryStr\n                        \n                        \n                    \n                \n            \n            \n                \nparseQueryStr(queryStr: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:327\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryStr\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFacetValues\n                        \n                        \n                    \n                \n            \n            \n                \nsetFacetValues(facets: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:364\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    facets\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRefinerConfig\n                        \n                        \n                    \n                \n            \n            \n                \nsetRefinerConfig(config: RecordSearchRefiner[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:290\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                RecordSearchRefiner[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }       from '@angular/core';\nimport { FieldBase }     from './field-base';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport { ConfigService } from '../config-service';\ndeclare var io: any;\n/**\n * Plan Client-side services\n *\n *\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RecordsService extends BaseService {\n\n  constructor (\n    @Inject(Http) http: Http,\n    @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    protected app: ApplicationRef\n  ) {\n    super(http, configService);\n  }\n\n  getForm(oid: string = null, recordType: string = null, editable: boolean = true, formName: string = null) {\n    if (_.isEmpty(oid)) {\n      oid = null;\n    }\n    return this.getFormFieldsMeta(recordType, editable, oid, formName).then((form:any) => {\n      return this.fcmetaService.getLookupData(form.fieldsMeta).flatMap((fields:any) => {\n        form.fieldsMata = fields;\n        return Observable.of(form);\n      });\n    });\n  }\n\n  addRenderCompleteElement(fieldsMeta){\n    var renderCompleteElement = {\n            \"class\" : \"Container\",\n            \"compClass\" : \"TextBlockComponent\",\n            \"definition\" : {\n                \"value\" : \"\",\n                \"type\" : \"span\",\n                \"cssClasses\" : \"form-render-complete\"\n            }\n        };\n\n    fieldsMeta.push(renderCompleteElement);\n\n  }\n\n  getFormFields(recordType:string, oid: string=null, editable:boolean, formName: string = null) {\n    const ts = new Date().getTime();\n    console.log(\"Oid is: \" + oid);\n    const url = oid ? `${this.brandingAndPortalUrl}/record/form/auto/${oid}?edit=${editable}&ts=${ts}&formName=${formName}` : `${this.brandingAndPortalUrl}/record/form/${recordType}?edit=${editable}&ts=${ts}`;\n    console.log(\"URL is: \" + url);\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res:any) => this.extractData(res));\n  }\n\n  getFormFieldsMeta(recordType:string, editable:boolean, oid:string=null, formName: string = null) {\n    return this.getFormFields(recordType, oid, editable, formName).then((form:any) => {\n      if (form && form.fields) {\n        if(!editable){\n          // Add an empty element to the end of the form so a screenshot tool can detect the rendered form reliably\n          this.addRenderCompleteElement(form.fields);\n        }\n        form.fieldsMeta = this.fcmetaService.getFieldsMeta(form.fields);\n      } else {\n        console.error(\"Error loading form:\" + recordType);\n        throw form;\n      }\n      return form;\n    });\n  }\n\n  create(record: any, recordType: string, targetStep: string = '') {\n    return this.http.post(`${this.brandingAndPortalUrl}/recordmeta/${recordType}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  update(oid: string, record: any, targetStep: string = '') {\n    return this.http.put(`${this.brandingAndPortalUrl}/recordmeta/${oid}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n\n  protected getTargetStepParam(targetStep, delim) {\n    return _.isEmpty(targetStep) ? '' : `${delim}targetStep=${targetStep}`;\n  }\n\n  stepTo(oid: string, record: any, targetStep: string) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/workflow/step/${targetStep}/${oid}`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getDashboardUrl(recType:string='rdmp') {\n    return `${this.brandingAndPortalUrl}/dashboard/${recType}`;\n  }\n\n  getAttachments(oid: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/attachments`, this.getOptionsClient()).toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  modifyEditors(records, username, email) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/editors/modify`, {records:records, username:username, email:email}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  updateResponsibilities(records, role, updateData) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/responsibility/update`, {records:records, role:role, updateData:updateData}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getTransferResponsibility(recordType) {\n    return this.http.get(`${this.brandingAndPortalUrl}/transferconfig/${recordType}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Object);\n  }\n\n  search(params: RecordSearchParams) {\n    let refinedSearchStr = '';\n    params.filterActiveRefinersWithNoData();\n    if (_.size(params.activeRefiners) > 0) {\n      let exactSearchNames = '';\n      let exactSearchValues = '';\n      let facetSearchNames = '';\n      let facetSearchValues = '';\n      _.forEach(params.activeRefiners, (refiner: RecordSearchRefiner)=> {\n        switch (refiner.type) {\n          case \"exact\":\n            exactSearchNames = `${_.isEmpty(exactSearchNames) ? `&exactNames=` : `${exactSearchNames},`}${refiner.name}`;\n            exactSearchValues = `${exactSearchValues}&exact_${refiner.name}=${refiner.value}`;\n            break;\n          case \"facet\":\n            facetSearchNames = `${_.isEmpty(facetSearchNames) ? `&facetNames=` : `${facetSearchNames},`}${refiner.name}`;\n            if (!_.isEmpty(refiner.activeValue)) {\n              facetSearchValues = `${facetSearchValues}&facet_${refiner.name}=${refiner.activeValue}`;\n            }\n            break;\n        }\n      });\n      refinedSearchStr = `${exactSearchNames}${exactSearchValues}${facetSearchNames}${facetSearchValues}`;\n    }\n    return this.http.get(`${this.brandingAndPortalUrl}/record/search/${params.recordType}/?searchStr=${params.basicSearch}${refinedSearchStr}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getType(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getAllTypes() {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkflowSteps(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/wfSteps/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getRecordMeta(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/metadata/`+oid, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getPermissions(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/permissions`, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n\n  executeAction(action:string, params:any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/action/${action}`, params, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getAsyncProgress(fq:string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/asynch?fq=${fq}`, this.options)\n    .toPromise()\n    .then((res: any) => this.extractData(res));\n  }\n\n  subscribeToAsyncProgress(oid: string = null, connectCb) {\n    io.socket.get(`${this.brandingAndPortalUrl}/asynch/subscribe/${oid}`, connectCb);\n  }\n\n  delete(oid: string) {\n    return this.http.delete(`${this.brandingAndPortalUrl}/record/delete/${oid}`, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n}\n\nexport class RecordActionResult {\n  success:boolean;\n  oid: string;\n  message: string;\n}\n\nexport class RecordSearchRefiner {\n  name: string;\n  title: string;\n  type: string;\n  value: any;\n  alwaysActive: boolean;\n  typeLabel: string;\n  activeValue: any;\n\n  constructor(opts: any = {}) {\n    this.name = opts.name;\n    this.title = opts.title;\n    this.type = opts.type;\n    this.value = opts.value;\n    this.typeLabel = opts.typeLabel;\n    this.alwaysActive = opts.alwaysActive;\n  }\n\n  setCurrentValue(value: any) {\n    if (this.type == \"facet\") {\n      this.activeValue = value;\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class RecordSearchParams {\n  recordType: string;\n  basicSearch: string;\n  activeRefiners: any[];\n  refinerConfig: RecordSearchRefiner[];\n\n  constructor(recType: string) {\n    this.recordType = recType;\n    this.activeRefiners = [];\n    this.clear();\n  }\n\n  clear() {\n    this.basicSearch = null;\n    _.remove(this.activeRefiners, refiner => {\n      refiner.value = null;\n      refiner.activeValue = null;\n      return !refiner.alwaysActive;\n    });\n  }\n\n  getRefinerConfig(name: string) {\n    return _.find(this.refinerConfig, (config) => {\n      return config.name == name;\n    });\n  }\n\n  setRefinerConfig(config: RecordSearchRefiner[]) {\n    this.refinerConfig = config;\n    // parse through and activate those set as active...\n    _.forEach(this.refinerConfig, (refinerConfig) => {\n      if (refinerConfig.alwaysActive) {\n        this.addActiveRefiner(refinerConfig);\n      }\n    });\n  }\n\n  getHttpQuery(searchUrl: string) {\n    let refinerValues = '';\n    _.forEach(this.activeRefiners, (refiner:RecordSearchRefiner) => {\n      if (refiner.type == \"facet\") {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.activeValue) ? '' : refiner.activeValue}`;\n      } else {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.value) ? '' : refiner.value}`;\n      }\n    });\n    return `${searchUrl}?q=${this.basicSearch}&type=${this.recordType}${refinerValues}`;\n  }\n\n  getRefinerConfigs() {\n    return this.refinerConfig;\n  }\n\n  addActiveRefiner(refiner: RecordSearchRefiner) {\n    const existingRefiner = _.find(this.activeRefiners, (activeRefiner:RecordSearchRefiner) => {\n      return activeRefiner.name == refiner.name;\n    });\n    if (existingRefiner) {\n      existingRefiner.value = refiner.value;\n    } else {\n      this.activeRefiners.push(refiner);\n    }\n  }\n\n  parseQueryStr(queryStr:string) {\n    queryStr = decodeURI(queryStr);\n    let refinerValues = {};\n    _.forEach(queryStr.split('&'), (q)=> {\n      const qObj = q.split('=');\n      if (_.startsWith(qObj[0], \"q\")) {\n        this.basicSearch = qObj[1];\n      }\n      if (_.startsWith(qObj[0], \"refiner|\")) {\n        const refinerName = qObj[0].split('|')[1];\n        refinerValues[refinerName] = qObj[1];\n      }\n    });\n    _.forOwn(refinerValues, (value, name) => {\n      const config = this.getRefinerConfig(name);\n      config.setCurrentValue(value);\n      this.addActiveRefiner(config);\n    });\n  }\n\n  filterActiveRefinersWithNoData() {\n    const removed = _.remove(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      const value = refiner.type == 'exact' ? refiner.value : refiner.activeValue;\n      return  !refiner.alwaysActive && (_.isEmpty(value) || _.isUndefined(value));\n    });\n  }\n\n  hasActiveRefiners() {\n    let hasActive = false;\n    _.forEach(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      if (!hasActive && (!_.isEmpty(refiner.value))) {\n        hasActive = true;\n      }\n    });\n    return hasActive;\n  }\n\n  setFacetValues(facets: any) {\n    _.forEach(facets, (facet: any) => {\n      const refiner = _.find(this.activeRefiners, (refinerConfig: RecordSearchRefiner) => {\n        return refinerConfig.name == facet.name;\n      });\n      if (refiner) {\n        refiner.value = facet.values;\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecordSearchRefiner.html":{"url":"classes/RecordSearchRefiner.html","title":"class - RecordSearchRefiner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecordSearchRefiner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/records.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeValue\n                            \n                            \n                                alwaysActive\n                            \n                            \n                                name\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                typeLabel\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setCurrentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/records.service.ts:243\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:243\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alwaysActive\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:241\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:237\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:238\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:239\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:242\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:240\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCurrentValue\n                        \n                        \n                    \n                \n            \n            \n                \nsetCurrentValue(value: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/records.service.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }       from '@angular/core';\nimport { FieldBase }     from './field-base';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport { ConfigService } from '../config-service';\ndeclare var io: any;\n/**\n * Plan Client-side services\n *\n *\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RecordsService extends BaseService {\n\n  constructor (\n    @Inject(Http) http: Http,\n    @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    protected app: ApplicationRef\n  ) {\n    super(http, configService);\n  }\n\n  getForm(oid: string = null, recordType: string = null, editable: boolean = true, formName: string = null) {\n    if (_.isEmpty(oid)) {\n      oid = null;\n    }\n    return this.getFormFieldsMeta(recordType, editable, oid, formName).then((form:any) => {\n      return this.fcmetaService.getLookupData(form.fieldsMeta).flatMap((fields:any) => {\n        form.fieldsMata = fields;\n        return Observable.of(form);\n      });\n    });\n  }\n\n  addRenderCompleteElement(fieldsMeta){\n    var renderCompleteElement = {\n            \"class\" : \"Container\",\n            \"compClass\" : \"TextBlockComponent\",\n            \"definition\" : {\n                \"value\" : \"\",\n                \"type\" : \"span\",\n                \"cssClasses\" : \"form-render-complete\"\n            }\n        };\n\n    fieldsMeta.push(renderCompleteElement);\n\n  }\n\n  getFormFields(recordType:string, oid: string=null, editable:boolean, formName: string = null) {\n    const ts = new Date().getTime();\n    console.log(\"Oid is: \" + oid);\n    const url = oid ? `${this.brandingAndPortalUrl}/record/form/auto/${oid}?edit=${editable}&ts=${ts}&formName=${formName}` : `${this.brandingAndPortalUrl}/record/form/${recordType}?edit=${editable}&ts=${ts}`;\n    console.log(\"URL is: \" + url);\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res:any) => this.extractData(res));\n  }\n\n  getFormFieldsMeta(recordType:string, editable:boolean, oid:string=null, formName: string = null) {\n    return this.getFormFields(recordType, oid, editable, formName).then((form:any) => {\n      if (form && form.fields) {\n        if(!editable){\n          // Add an empty element to the end of the form so a screenshot tool can detect the rendered form reliably\n          this.addRenderCompleteElement(form.fields);\n        }\n        form.fieldsMeta = this.fcmetaService.getFieldsMeta(form.fields);\n      } else {\n        console.error(\"Error loading form:\" + recordType);\n        throw form;\n      }\n      return form;\n    });\n  }\n\n  create(record: any, recordType: string, targetStep: string = '') {\n    return this.http.post(`${this.brandingAndPortalUrl}/recordmeta/${recordType}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  update(oid: string, record: any, targetStep: string = '') {\n    return this.http.put(`${this.brandingAndPortalUrl}/recordmeta/${oid}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n\n  protected getTargetStepParam(targetStep, delim) {\n    return _.isEmpty(targetStep) ? '' : `${delim}targetStep=${targetStep}`;\n  }\n\n  stepTo(oid: string, record: any, targetStep: string) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/workflow/step/${targetStep}/${oid}`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getDashboardUrl(recType:string='rdmp') {\n    return `${this.brandingAndPortalUrl}/dashboard/${recType}`;\n  }\n\n  getAttachments(oid: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/attachments`, this.getOptionsClient()).toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  modifyEditors(records, username, email) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/editors/modify`, {records:records, username:username, email:email}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  updateResponsibilities(records, role, updateData) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/responsibility/update`, {records:records, role:role, updateData:updateData}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getTransferResponsibility(recordType) {\n    return this.http.get(`${this.brandingAndPortalUrl}/transferconfig/${recordType}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Object);\n  }\n\n  search(params: RecordSearchParams) {\n    let refinedSearchStr = '';\n    params.filterActiveRefinersWithNoData();\n    if (_.size(params.activeRefiners) > 0) {\n      let exactSearchNames = '';\n      let exactSearchValues = '';\n      let facetSearchNames = '';\n      let facetSearchValues = '';\n      _.forEach(params.activeRefiners, (refiner: RecordSearchRefiner)=> {\n        switch (refiner.type) {\n          case \"exact\":\n            exactSearchNames = `${_.isEmpty(exactSearchNames) ? `&exactNames=` : `${exactSearchNames},`}${refiner.name}`;\n            exactSearchValues = `${exactSearchValues}&exact_${refiner.name}=${refiner.value}`;\n            break;\n          case \"facet\":\n            facetSearchNames = `${_.isEmpty(facetSearchNames) ? `&facetNames=` : `${facetSearchNames},`}${refiner.name}`;\n            if (!_.isEmpty(refiner.activeValue)) {\n              facetSearchValues = `${facetSearchValues}&facet_${refiner.name}=${refiner.activeValue}`;\n            }\n            break;\n        }\n      });\n      refinedSearchStr = `${exactSearchNames}${exactSearchValues}${facetSearchNames}${facetSearchValues}`;\n    }\n    return this.http.get(`${this.brandingAndPortalUrl}/record/search/${params.recordType}/?searchStr=${params.basicSearch}${refinedSearchStr}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getType(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getAllTypes() {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkflowSteps(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/wfSteps/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getRecordMeta(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/metadata/`+oid, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getPermissions(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/permissions`, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n\n  executeAction(action:string, params:any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/action/${action}`, params, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getAsyncProgress(fq:string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/asynch?fq=${fq}`, this.options)\n    .toPromise()\n    .then((res: any) => this.extractData(res));\n  }\n\n  subscribeToAsyncProgress(oid: string = null, connectCb) {\n    io.socket.get(`${this.brandingAndPortalUrl}/asynch/subscribe/${oid}`, connectCb);\n  }\n\n  delete(oid: string) {\n    return this.http.delete(`${this.brandingAndPortalUrl}/record/delete/${oid}`, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n}\n\nexport class RecordActionResult {\n  success:boolean;\n  oid: string;\n  message: string;\n}\n\nexport class RecordSearchRefiner {\n  name: string;\n  title: string;\n  type: string;\n  value: any;\n  alwaysActive: boolean;\n  typeLabel: string;\n  activeValue: any;\n\n  constructor(opts: any = {}) {\n    this.name = opts.name;\n    this.title = opts.title;\n    this.type = opts.type;\n    this.value = opts.value;\n    this.typeLabel = opts.typeLabel;\n    this.alwaysActive = opts.alwaysActive;\n  }\n\n  setCurrentValue(value: any) {\n    if (this.type == \"facet\") {\n      this.activeValue = value;\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class RecordSearchParams {\n  recordType: string;\n  basicSearch: string;\n  activeRefiners: any[];\n  refinerConfig: RecordSearchRefiner[];\n\n  constructor(recType: string) {\n    this.recordType = recType;\n    this.activeRefiners = [];\n    this.clear();\n  }\n\n  clear() {\n    this.basicSearch = null;\n    _.remove(this.activeRefiners, refiner => {\n      refiner.value = null;\n      refiner.activeValue = null;\n      return !refiner.alwaysActive;\n    });\n  }\n\n  getRefinerConfig(name: string) {\n    return _.find(this.refinerConfig, (config) => {\n      return config.name == name;\n    });\n  }\n\n  setRefinerConfig(config: RecordSearchRefiner[]) {\n    this.refinerConfig = config;\n    // parse through and activate those set as active...\n    _.forEach(this.refinerConfig, (refinerConfig) => {\n      if (refinerConfig.alwaysActive) {\n        this.addActiveRefiner(refinerConfig);\n      }\n    });\n  }\n\n  getHttpQuery(searchUrl: string) {\n    let refinerValues = '';\n    _.forEach(this.activeRefiners, (refiner:RecordSearchRefiner) => {\n      if (refiner.type == \"facet\") {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.activeValue) ? '' : refiner.activeValue}`;\n      } else {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.value) ? '' : refiner.value}`;\n      }\n    });\n    return `${searchUrl}?q=${this.basicSearch}&type=${this.recordType}${refinerValues}`;\n  }\n\n  getRefinerConfigs() {\n    return this.refinerConfig;\n  }\n\n  addActiveRefiner(refiner: RecordSearchRefiner) {\n    const existingRefiner = _.find(this.activeRefiners, (activeRefiner:RecordSearchRefiner) => {\n      return activeRefiner.name == refiner.name;\n    });\n    if (existingRefiner) {\n      existingRefiner.value = refiner.value;\n    } else {\n      this.activeRefiners.push(refiner);\n    }\n  }\n\n  parseQueryStr(queryStr:string) {\n    queryStr = decodeURI(queryStr);\n    let refinerValues = {};\n    _.forEach(queryStr.split('&'), (q)=> {\n      const qObj = q.split('=');\n      if (_.startsWith(qObj[0], \"q\")) {\n        this.basicSearch = qObj[1];\n      }\n      if (_.startsWith(qObj[0], \"refiner|\")) {\n        const refinerName = qObj[0].split('|')[1];\n        refinerValues[refinerName] = qObj[1];\n      }\n    });\n    _.forOwn(refinerValues, (value, name) => {\n      const config = this.getRefinerConfig(name);\n      config.setCurrentValue(value);\n      this.addActiveRefiner(config);\n    });\n  }\n\n  filterActiveRefinersWithNoData() {\n    const removed = _.remove(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      const value = refiner.type == 'exact' ? refiner.value : refiner.activeValue;\n      return  !refiner.alwaysActive && (_.isEmpty(value) || _.isUndefined(value));\n    });\n  }\n\n  hasActiveRefiners() {\n    let hasActive = false;\n    _.forEach(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      if (!hasActive && (!_.isEmpty(refiner.value))) {\n        hasActive = true;\n      }\n    });\n    return hasActive;\n  }\n\n  setFacetValues(facets: any) {\n    _.forEach(facets, (facet: any) => {\n      const refiner = _.find(this.activeRefiners, (refinerConfig: RecordSearchRefiner) => {\n        return refinerConfig.name == facet.name;\n      });\n      if (refiner) {\n        refiner.value = facet.values;\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordSearchRefinerComponent.html":{"url":"components/RecordSearchRefinerComponent.html","title":"component - RecordSearchRefinerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecordSearchRefinerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/record_search/app/record-search-refiner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-search-refiner\n            \n\n\n\n\n            \n                templateUrl\n                ./record_search_refiner.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                hasValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSearching\n                            \n                            \n                                refinerConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onApplyFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isSearching\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        refinerConfig\n                    \n                \n                \n                    \n                        Type :         RecordSearchRefiner\n\n                    \n                \n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onApplyFilter\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyFilter\n                        \n                        \n                    \n                \n            \n            \n                \napplyFilter(event: any, refinerValue: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/record_search/app/record-search-refiner.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    refinerValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \nhasValue()\n                \n            \n\n\n            \n                \n                    Defined in angular/record_search/app/record-search-refiner.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Input, Output, ElementRef, EventEmitter } from '@angular/core';\nimport { RecordSearchRefiner} from './shared/form/records.service';\nimport * as _ from \"lodash\";\n\n@Component({\n  selector: 'record-search-refiner',\n  templateUrl: './record_search_refiner.html'\n})\nexport class RecordSearchRefinerComponent {\n  @Input() refinerConfig: RecordSearchRefiner;\n  @Input() isSearching: boolean;\n  @Output() onApplyFilter: EventEmitter = new EventEmitter();\n\n  applyFilter(event:any, refinerValue:any = null) {\n    event.preventDefault();\n    if (this.hasValue()) {\n      this.refinerConfig.activeValue = refinerValue;\n      this.onApplyFilter.emit(this.refinerConfig);\n    }\n  }\n\n  hasValue() {\n    return !_.isEmpty(this.refinerConfig.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ refinerConfig.title | translate }}\n    \n  \n  \n     {{ refinerConfig.typeLabel | translate }} \n    \n      \n      \n        {{ 'search-refine-apply-filter' | translate }}\n      \n    \n    \n      \n         0 && facetValue.value\">\n           {{ facetValue.value }} ({{ facetValue.count }})\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ refinerConfig.title | translate }}             {{ refinerConfig.typeLabel | translate }}                         {{ \\'search-refine-apply-filter\\' | translate }}                             0 && facetValue.value\">           {{ facetValue.value }} ({{ facetValue.count }})                    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecordSearchRefinerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RelatedObjectDataComponent.html":{"url":"components/RelatedObjectDataComponent.html","title":"component - RelatedObjectDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RelatedObjectDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-relatedobjectdata.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display information from related objects within ReDBox\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-relatedobjectdata\n            \n\n\n\n\n            \n                templateUrl\n                ./field-relatedobjectdata.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sanitizeUrl\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-relatedobjectdata.component.ts:135\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sanitizeUrl\n                        \n                        \n                    \n                \n            \n            \n                \nsanitizeUrl(url: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-relatedobjectdata.component.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RelatedObjectDataField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-relatedobjectdata.component.ts:135\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/zip';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n\n\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class RelatedObjectDataField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  relatedObjects: object[];\n  accessDeniedObjects: object[];\n  failedObjects: object[];\n  hasInit: boolean;\n  recordsService: RecordsService;\n  columns: object[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.relatedObjects = [];\n    this.accessDeniedObjects = [];\n    this.failedObjects = [];\n    this.columns = options['columns'] || [];\n\n    var relatedObjects = this.relatedObjects;\n    this.value = options['value'] || this.setEmptyValue();\n    this.recordsService = this.getFromInjector(RecordsService);\n\n  }\n\n/**\n* Loading the metadata for each related object in the array\n*/\n  asyncLoadData() {\n    let getRecordMetaObs = [];\n    var that = this;\n    _.forEach(this.value, (item: any) => {\n      getRecordMetaObs.push(fromPromise(this.recordsService.getRecordMeta(item.id)).flatMap(meta => {\n        if (!meta) {\n          that.failedObjects.push(meta);\n        } else if (meta['status'] == \"Access Denied\") {\n          that.accessDeniedObjects.push(meta);\n        } else if (meta['title']) {\n          that.relatedObjects.push(meta);\n        } else {\n          that.failedObjects.push(meta);\n        }\n        return Observable.of(null);\n      }));\n    });\n    if ( getRecordMetaObs.length > 0 ) {\n      return Observable.zip(...getRecordMetaObs);\n    } else {\n      return Observable.of(null);\n    }\n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n\n    this.formModel = new FormControl(this.value || []);\n\n    if (this.value) {\n      this.setValue(this.value);\n    }\n\n    return this.formModel;\n  }\n\n  setValue(value: any) {\n    this.formModel.patchValue(value, { emitEvent: false });\n    this.formModel.markAsTouched();\n  }\n\n  setEmptyValue() {\n    this.value = [];\n    return this.value;\n  }\n}\n\ndeclare var aotMode\n// Setting the template url to a constant rather than directly in the component as the latter breaks document generation\nlet rbRelatedObjectDataTemplate = './field-relatedobjectdata.html';\nif (typeof aotMode == 'undefined') {\n  rbRelatedObjectDataTemplate = '../angular/shared/form/field-relatedobjectdata.html';\n}\n\n/**\n* Component to display information from related objects within ReDBox\n*\n*\n*\n*\n*/\n@Component({\n  selector: 'rb-relatedobjectdata',\n  templateUrl: './field-relatedobjectdata.html'\n})\nexport class RelatedObjectDataComponent extends SimpleComponent {\n  field: RelatedObjectDataField;\n\n  constructor(private sanitizer: DomSanitizer) {\n    super();\n  }\n\n  sanitizeUrl(url:string){\n    return this.sanitizer.bypassSecurityTrustUrl(url);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n          \n              {{ header.label }}\n          \n      \n      \n        \n          \n            \n              \n              \n              \n              {{ column.link.pattern | stringTemplate:item }}\n              \n                \n                  \n                    {{ item[column.property]['label'] }}\n                  \n                  \n                    \n                      {{ item[column.property]['label'] }}\n                    \n                  \n                \n                \n                  {{item[column.property]}}\n                \n              \n              {{ item[column.property] }}\n            \n          \n        \n      \n    \n     0\">There were {{ field.failedObjects.length }} records that failed to load\n     0\">There were {{ field.accessDeniedObjects.length }} records that you do not have access to\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{ header.label }}                                                                                                            {{ column.link.pattern | stringTemplate:item }}                                                                    {{ item[column.property][\\'label\\'] }}                                                                              {{ item[column.property][\\'label\\'] }}                                                                                        {{item[column.property]}}                                            {{ item[column.property] }}                                             0\">There were {{ field.failedObjects.length }} records that failed to load     0\">There were {{ field.accessDeniedObjects.length }} records that you do not have access to  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RelatedObjectDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RelatedObjectSelectorComponent.html":{"url":"components/RelatedObjectSelectorComponent.html","title":"component - RelatedObjectSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RelatedObjectSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-relatedobjectselector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display information from related objects within ReDBox\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-RelatedObjectSelector\n            \n\n\n\n\n            \n                templateUrl\n                ./field-relatedobjectselector.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasFilteredResults\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         RelatedObjectSelectorField\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-relatedobjectselector.component.ts:143\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasFilteredResults\n                        \n                        \n                    \n                \n            \n            \n                \nhasFilteredResults()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-relatedobjectselector.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector, EventEmitter} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { DashboardService } from '../dashboard-service';\nimport { PlanTable, Plan } from '../dashboard-models';\n\n\n\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class RelatedObjectSelectorField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  hasInit: boolean;\n  dashboardService: DashboardService;\n  plans: PlanTable;\n  searchFilterName: any;\n  filteredPlans: Plan[];\n  recordType:string;\n  columnTitle:string;\n\n  relatedObjectSelected:EventEmitter = new EventEmitter();\n  resetSelectorEvent: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RelatedObjectDataField';\n\n    this.columnTitle = options['columnTitle'] || \"Record title\";\n    this.value = options['value'] || this.setEmptyValue();\n    this.recordType = options['recordType'];\n    this.dashboardService = this.getFromInjector(DashboardService);\n    var that = this;\n    this.dashboardService.getAllRecordsCanEdit(this.recordType,'').then((draftPlans: PlanTable) => {\n      this.plans = draftPlans;\n    });\n  }\n\n  recordSelected(record: any, config: any) {\n    this.setValue({oid: record.oid, title:record.title});\n    if(this.fieldMap) {\n      this.fieldMap._rootComp.setRelatedRecordId(record.oid);\n    }\n  }\n\n  recordSelectedEmit(record, event) {\n    this.setValue({oid: record.oid, title:record.title});\n    if(this.fieldMap) {\n      this.fieldMap._rootComp.setRelatedRecordId(record.oid);\n    }\n    this.relatedObjectSelected.emit(record.oid);\n  }\n\n  resetSelector() {\n    this.setEmptyValue();\n    if(this.fieldMap) {\n      this.fieldMap._rootComp.setRelatedRecordId(null);\n    }\n    this.resetSelectorEvent.emit();\n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n\n      this.formModel = new FormControl(this.value || []);\n\n      if (this.value) {\n        this.setValue(this.value);\n        if(this.fieldMap) {\n          this.fieldMap._rootComp.setRelatedRecordId(this.value.oid);\n        }\n      }\n\n    return this.formModel;\n  }\n\n  setValue(value:any) {\n    this.value=value;\n    this.formModel.patchValue(value, {emitEvent: false });\n    this.formModel.markAsTouched();\n  }\n\n  setEmptyValue() {\n    this.value = {};\n    return this.value;\n  }\n\n  onFilterChange() {\n    this.filteredPlans = _.filter(this.plans.items, (plan: any) => {\n      plan.selected = false;\n      const title = _.isArray(plan.title) ? plan.title[0] : plan.title;\n      return _.toLower(title).includes(_.toLower(this.searchFilterName));\n    });\n  }\n\n  resetFilter() {\n    this.searchFilterName = null;\n    this.onFilterChange();\n  }\n\n}\n\n/**\n* Component to display information from related objects within ReDBox\n*\n*\n*\n*/\n@Component({\n  selector: 'rb-RelatedObjectSelector',\n  templateUrl: './field-relatedobjectselector.html'\n})\nexport class RelatedObjectSelectorComponent extends SimpleComponent {\n  @Input() field: RelatedObjectSelectorField;\n\n  hasFilteredResults() {\n    return this.field.searchFilterName && !_.isEmpty(_.trim(this.field.searchFilterName)) && this.field.filteredPlans && this.field.filteredPlans.length > 0;\n  }\n}\n\n    \n\n    \n        \n   {{field.label}}\n   {{ field.value.title }}\n\n\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n       {{ field.value.title }} {{ 'change-text' | translate }}\n    \n    \n      \n        {{ 'search-by-name' | translate }}\n        \n        {{ 'transfer-ownership-reset' | translate }}\n      \n      \n      \n        \n          \n            \n              {{ field.columnTitle }}\n            \n          \n          \n            \n              {{ plan.title }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{field.label}}   {{ field.value.title }}            {{field.label}} {{ getRequiredLabelStr()}}                         {{ field.value.title }} {{ \\'change-text\\' | translate }}                      {{ \\'search-by-name\\' | translate }}                {{ \\'transfer-ownership-reset\\' | translate }}                                                              {{ field.columnTitle }}                                                          {{ plan.title }}                                          '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RelatedObjectSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RepeatableComponent.html":{"url":"classes/RepeatableComponent.html","title":"class - RepeatableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RepeatableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-repeatable.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SimpleComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepeatableContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:242\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addElem\n                        \n                        \n                    \n                \n            \n            \n                \naddElem(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-repeatable.component.ts:244\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \nhasRequiredError()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-repeatable.component.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeElem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveElem(event: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-repeatable.component.ts:248\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { VocabField } from './field-vocab.component';\nimport { Container } from './field-simple';\nimport { FormControl, FormArray, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ContributorField } from './field-contributor.component';\n/**\n * Repeatable Field Container\n *\n * Author: Shilo Banihit\n *\n */\nexport class RepeatableContainer extends Container {\n  addButtonText: string;\n  removeButtonText: string;\n  skipClone: string[];\n  forceClone: any[];\n  addButtonTextClass: any;\n  removeButtonTextClass: any;\n  addButtonClass: any;\n  removeButtonClass: any;\n  moveUpButtonClass: any;\n  moveDownButtonClass: any;\n  delegateErrorHandling: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.hasGroup = true;\n    this.addButtonText = options['addButtonText'] || '';\n    this.removeButtonText = options['removeButtonText'] || null;\n    this.skipClone = options['skipClone'] || [];\n    this.forceClone = options['forceClone'] || [];\n    this.addButtonTextClass = options['addButtonTextClass'] || 'btn btn-success pull-right';\n    this.addButtonClass = options['addButtonClass'] || 'fa fa-plus-circle btn text-20 pull-right btn-success';\n    this.removeButtonTextClass = options['removeButtonTextClass'] || 'btn btn-danger pull-right';\n    this.removeButtonClass = options['removeButtonClass'] || 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n    this.moveUpButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-up btn text-20 pull-left btn-primary';\n    this.moveDownButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-down btn text-20 pull-left btn-primary';\n    this.delegateErrorHandling = !_.isUndefined(options['delegateErrorHandling']) ? options['delegateErrorHandling'] : true;\n  }\n\n  getInitArrayEntry() {\n    if (this.fields[0].isGroup) {\n      const grp = {};\n      const fm = {};\n      const fg = this.fields[0].getGroup(grp, fm);\n      return [fg];\n    }\n    return [this.fields[0].createFormModel()];\n  }\n\n  getGroup(group: any, fieldMap: any) {\n    this.fieldMap = fieldMap;\n    fieldMap[this.name] = {field:this};\n    if (!this.value || this.value.length == 0) {\n      this.formModel = this.required ? new FormArray(this.getInitArrayEntry(), Validators.required) : new FormArray(this.getInitArrayEntry());\n    } else {\n      let fieldCtr = 0;\n      const baseField = this.fields[0];\n      const elems = [];\n      this.fields = _.map(this.value, (valueElem:any) => {\n        let fieldClone = null;\n        if (fieldCtr == 0) {\n          fieldClone = baseField;\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        } else {\n          fieldClone = this.createNewElem(baseField, _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem);\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        }\n        fieldCtr++;\n        elems.push(fieldClone.createFormModel());\n        return fieldClone;\n      });\n      this.formModel = this.required ? new FormArray(elems, Validators.required) : new FormArray(elems);\n      _.each(this.fields, f => {\n        f.setupEventHandlers();\n      });\n    }\n    fieldMap[this.name].control = this.formModel;\n    if (this.groupName) {\n      if (group[this.groupName]) {\n        group[this.groupName].addControl(this.name, this.formModel);\n      } else {\n        const fg = {};\n        fg[this.name] = this.formModel;\n        group[this.groupName] = fg;\n      }\n    } else {\n      group[this.name] = this.formModel;\n    }\n  }\n\n  createNewElem(baseFieldInst: any, value:any = null) {\n    const newOpts = _.cloneDeep(baseFieldInst.options);\n    newOpts.value = value;\n    const newInst = new baseFieldInst.constructor(newOpts, this.injector);\n    _.forEach(this.skipClone, (f: any)=> {\n      newInst[f] = null;\n    });\n\n    _.forEach(this.forceClone, (f: any) => {\n      if (_.isString(f)) {\n        newInst[f] = _.cloneDeepWith(baseFieldInst[f], this.getCloneCustomizer(\n          {\n            skipClone: ['fields', 'fieldMap', 'formModel', 'injector', 'onValueUpdate', 'onValueLoaded', 'translationService', 'utilityService', 'componentReactors'],\n            copy: ['fieldMap', 'injector', 'translationService', 'utilityService']\n          }\n        ));\n      } else {\n        newInst[f.field] = _.cloneDeepWith(baseFieldInst[f.field], this.getCloneCustomizer(f));\n      }\n    });\n\n    if (_.isFunction(newInst.postInit)) {\n      newInst.postInit(value);\n    }\n    return newInst;\n  }\n\n  getCloneCustomizer(cloneOpts:any) {\n    const that = this;\n    return function(value: any, key: any) {\n      if (_.includes(cloneOpts.skipClone, key) ) {\n        if (_.includes(cloneOpts.copy, key)) {\n          return that[key];\n        }\n        return false;\n      }\n    };\n  }\n\n  addElem(val:any = null) {\n    const newElem = this.createNewElem(this.fields[0], val);\n    if (val == null && _.isFunction(newElem.setEmptyValue)) {\n      newElem.setEmptyValue();\n    }\n    this.fields.push(newElem);\n    const newFormModel = newElem.createFormModel();\n    this.formModel.push(newFormModel);\n    return newElem;\n  }\n\n  removeElem(index: number) {\n    _.remove(this.fields, (val:any, idx: number) => { return idx == index });\n    this.formModel.removeAt(index);\n  }\n\n  swap(fromIdx, toIdx) {\n    let temp = this.fields[toIdx];\n    this.fields[toIdx] = this.fields[fromIdx];\n    this.fields[fromIdx] = temp;\n    temp = this.formModel.at(toIdx);\n    this.formModel.setControl(toIdx, this.formModel.at(fromIdx));\n    this.formModel.setControl(fromIdx, temp);\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].setValue(value, true);\n  }\n\n  public triggerValidation() {\n    _.forEach(this.fields, (f:any) => {\n      f.triggerValidation();\n    });\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any) {\n    console.log(`Repeatable container field reacting: ${eventName}`);\n    console.log(eventData);\n    // delete first...\n    for (let toDelIdx = 1; toDelIdx  {\n      if (idx >= this.formModel.controls.length) {\n        this.addElem(entry);\n      } else {\n        this.setValueAtElem(idx, entry);\n      }\n    });\n  }\n\n  public removeAllElems() {\n    _.each(this.fields, (f, idx) => {\n      this.removeElem(idx);\n    });\n  }\n\n  public reset(data=null, eventConfig=null) {\n    this.fields[0].setValue(null);\n    if (this.fields.length > 1) {\n      for (var i=1; i = new EventEmitter();\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  public getGroupClass(fldName:string=null): string {\n    let baseClass = 'form-group';\n    if (this.isEmbedded) {\n      baseClass = '';\n    }\n    return `${baseClass} ${this.hasRequiredError() ? 'has-error' : '' } ${this.field.groupClasses}`;\n  }\n}\n\nexport class RepeatableComponent extends SimpleComponent {\n  field: RepeatableContainer;\n\n  addElem(event: any) {\n    this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n\n  hasRequiredError() {\n    let hasError = false;\n    _.each(this.field.formModel.controls, (c) => {\n      if (c.hasError('required')) {\n        hasError = true;\n        return false;\n      }\n    });\n    return hasError;\n  }\n}\n\nexport class RepeatableVocab extends RepeatableContainer {\n  fields: VocabField[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RepeatableVocab';\n  }\n\n  setValueAtElem(index, value:any) {\n    console.log(`Repeatable vocab setting value at: ${index}`);\n    console.log(value);\n    let selected = {};\n    selected['originalObject'] = value;\n    this.fields[index].component.onSelect(selected, false, true);\n  }\n}\n\n@Component({\n  selector: 'repeatable-vocab',\n  template: `\n  \n    \n      \n      {{field.label}}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableVocabComponent extends RepeatableComponent {\n  field: RepeatableVocab;\n  static clName = 'RepeatableVocabComponent';\n\n}\n\nexport class RepeatableContributor extends RepeatableContainer {\n  fields: ContributorField[];\n  canSort: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.canSort = _.isUndefined(options['canSort']) ? false : options['canSort'];\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].component.onSelect(value, false, true);\n  }\n\n  addElem(val:any = null) {\n    this.fields[0].setMissingFields(val);\n    return super.addElem(val);\n  }\n}\n\n@Component({\n  selector: 'repeatable-contributor',\n  template: `\n  \n    \n      \n        \n          {{field.fields[0].label}} {{getRequiredLabelStr()}}\n          \n        \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      \n         1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n         1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n         1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n         1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    \n      \n        {{field.fields[0].label}}\n      \n      \n        {{field.fields[0].titleColHdr}}\n        {{field.fields[0].nameColHdr}}\n        {{field.fields[0].emailColHdr}}\n        {{field.fields[0].roleColHdr}}\n        {{field.fields[0].orcidColHdr}}\n      \n      \n        {{fieldElem.value.honorific}}\n        {{fieldElem.value.text_full_name}}\n        {{fieldElem.value.email}}\n        {{fieldElem.value.role}}\n        {{fieldElem.value.orcid}}\n      \n    \n  \n  `,\n})\nexport class RepeatableContributorComponent extends RepeatableComponent implements OnInit {\n  field: RepeatableContributor;\n\n  ngOnInit() {\n    this.field.fields[0]['showHeader'] = false;\n    this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    this.field.fields[0].componentReactors.push(this);\n  }\n\n  addElem(event: any) {\n    const newElem:any = this.field.addElem();\n    newElem.marginTop = '0px';\n    newElem.vocabField.initialValue = null;\n    newElem.setupEventHandlers();\n    newElem.showHeader = false;\n    newElem.componentReactors.push(this);\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n    if (i == 0) {\n      this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    }\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any, elem:any) {\n    if (this.field.fields.length > 0) {\n      elem.marginTop = '0px';\n      elem.vocabField.initialValue = eventData;\n      elem.setupEventHandlers();\n      elem.componentReactors.push(this);\n    }\n  }\n\n  public moveUp(event: any, i:number) {\n    const newIdx = i - 1;\n    if (newIdx >= 0) {\n      this.field.swap(i, newIdx);\n      if (newIdx == 0) {\n        this.field.fields[i].marginTop = '';\n        this.field.fields[newIdx].marginTop = this.field.fields[newIdx].baseMarginTop;\n      }\n    }\n  }\n\n  public moveDown(event: any, i:number) {\n    const newIdx = i + 1;\n    if (newIdx \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepeatableGroupComponent.html":{"url":"components/RepeatableGroupComponent.html","title":"component - RepeatableGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepeatableGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-group.component.ts\n\n\n    \n        Description\n    \n    \n        Repeatable Generic Component\n* {\n   class: 'RepeatableContainer',\n   compClass: 'RepeatableGroupComponent',\n   definition: {\n     name: \"related_websites\",\n     label: \"@dmpt-related-website\",\n     help: \"@dmpt-related-website-help\",\n     forceClone: ['fields', 'fieldMap'],\n     fields: [\n       {\n         class: 'Container',\n         compClass: 'GenericGroupComponent',\n         definition: {\n           name: \"related_website\",\n           cssClasses: \"form-inline\",\n           fields: [\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_url',\n                 label: '@dmpt-related-website-url',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_title',\n                 label: '@dmpt-related-website-title',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_notes',\n                 label: '@dmpt-related-website-notes',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             }\n           ]\n         }\n       }\n     ]\n   }\n }\n\n    \n\n    \n        Extends\n    \n    \n                RepeatableComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                repeatable-group\n            \n\n\n\n            \n                template\n                \n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n  \n  \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n    \n  \n  \n    &nbsp;\n    \n    \n      {{field.addButtonText}}\n      \n    \n  \n\n\n  {{field.label}}\n  \n    \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addElem\n                        \n                        \n                    \n                \n            \n            \n                \naddElem(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:244\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \nhasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:252\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeElem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveElem(event: any, i: number)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:248\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'RepeatableGroupComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-group.component.ts:232\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepeatableContainer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         RepeatableComponent:242\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\nimport * as _ from \"lodash\";\n/**\n#### Generic Group Component\n\nGeneric component for grouping components together. The resulting JSON will have the field names as keys.\n\n```\n{\n   class: 'Container',\n   compClass: 'GenericGroupComponent',\n   definition: {\n     name: \"related_website\",\n     cssClasses: \"form-inline\",\n     fields: [\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_url',\n           label: '@dmpt-related-website-url',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_title',\n           label: '@dmpt-related-website-title',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_notes',\n           label: '@dmpt-related-website-notes',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       }\n     ]\n   }\n }\n```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'generic-group-field',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n          \n            \n          \n          \n            {{removeBtnText}}\n            \n          \n        \n      \n    \n    \n      \n        \n      \n    \n  \n  \n    \n      \n    \n  \n  `,\n})\nexport class GenericGroupComponent extends EmbeddableComponent {\n  static clName = 'GenericGroupComponent';\n\n}\n\n/**\n * ### Repeatable Generic Component\n *\n *\n * ```\n * {\n   class: 'RepeatableContainer',\n   compClass: 'RepeatableGroupComponent',\n   definition: {\n     name: \"related_websites\",\n     label: \"@dmpt-related-website\",\n     help: \"@dmpt-related-website-help\",\n     forceClone: ['fields', 'fieldMap'],\n     fields: [\n       {\n         class: 'Container',\n         compClass: 'GenericGroupComponent',\n         definition: {\n           name: \"related_website\",\n           cssClasses: \"form-inline\",\n           fields: [\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_url',\n                 label: '@dmpt-related-website-url',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_title',\n                 label: '@dmpt-related-website-title',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_notes',\n                 label: '@dmpt-related-website-notes',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             }\n           ]\n         }\n       }\n     ]\n   }\n }\n ```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'repeatable-group',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n           1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n        \n      \n      \n        &nbsp;\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableGroupComponent extends RepeatableComponent {\n  static clName = 'RepeatableGroupComponent';\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{field.label}} {{getRequiredLabelStr()}}              {{field.help}}                       1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">                                                {{field.addButtonText}}              {{field.label}}                  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepeatableGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepeatableTextfieldComponent.html":{"url":"components/RepeatableTextfieldComponent.html","title":"component - RepeatableTextfieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepeatableTextfieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n\n    \n        Extends\n    \n    \n                RepeatableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                repeatable-textfield\n            \n\n\n\n            \n                template\n                \n  \n    \n    \n      {{field.label}} {{ getRequiredLabelStr() }}\n      \n    \n    \n    \n  \n  \n    \n       1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n    \n  \n  \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    \n      {{field.addButtonText}}\n      \n    \n  \n\n\n  {{field.label}}\n  \n    \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeElem\n                            \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addElem\n                        \n                        \n                    \n                \n            \n            \n                \naddElem(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-textfield.component.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-textfield.component.ts:172\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeElem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveElem(event: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-textfield.component.ts:179\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addElem\n                        \n                        \n                    \n                \n            \n            \n                \naddElem(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:244\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \nhasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:252\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeElem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveElem(event: any, i: number)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:248\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'RepeatableTextfieldComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:169\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepeatableContainer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         RepeatableComponent:242\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n        \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{field.label}} {{ getRequiredLabelStr() }}                                 1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">                  {{field.label}} is required      {{field.validationMessages.required}}                  {{field.addButtonText}}              {{field.label}}                  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepeatableTextfieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepeatableVocabComponent.html":{"url":"components/RepeatableVocabComponent.html","title":"component - RepeatableVocabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepeatableVocabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-repeatable.component.ts\n\n\n\n    \n        Extends\n    \n    \n                RepeatableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                repeatable-vocab\n            \n\n\n\n            \n                template\n                \n  \n    \n    {{field.label}}\n      \n    \n    \n    \n  \n  \n    \n       1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n    \n  \n  \n    &nbsp;\n    \n    \n      {{field.addButtonText}}\n      \n    \n  \n\n\n  {{field.label}}\n  \n    \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addElem\n                        \n                        \n                    \n                \n            \n            \n                \naddElem(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:244\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \nhasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:252\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeElem\n                        \n                        \n                    \n                \n            \n            \n                \nremoveElem(event: any, i: number)\n                \n            \n\n\n            \n                \n                    Inherited from         RepeatableComponent\n\n                \n            \n            \n                \n                        Defined in         RepeatableComponent:248\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'RepeatableVocabComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:319\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepeatableVocab\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:318\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RepeatableContainer\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         RepeatableComponent:242\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { VocabField } from './field-vocab.component';\nimport { Container } from './field-simple';\nimport { FormControl, FormArray, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ContributorField } from './field-contributor.component';\n/**\n * Repeatable Field Container\n *\n * Author: Shilo Banihit\n *\n */\nexport class RepeatableContainer extends Container {\n  addButtonText: string;\n  removeButtonText: string;\n  skipClone: string[];\n  forceClone: any[];\n  addButtonTextClass: any;\n  removeButtonTextClass: any;\n  addButtonClass: any;\n  removeButtonClass: any;\n  moveUpButtonClass: any;\n  moveDownButtonClass: any;\n  delegateErrorHandling: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.hasGroup = true;\n    this.addButtonText = options['addButtonText'] || '';\n    this.removeButtonText = options['removeButtonText'] || null;\n    this.skipClone = options['skipClone'] || [];\n    this.forceClone = options['forceClone'] || [];\n    this.addButtonTextClass = options['addButtonTextClass'] || 'btn btn-success pull-right';\n    this.addButtonClass = options['addButtonClass'] || 'fa fa-plus-circle btn text-20 pull-right btn-success';\n    this.removeButtonTextClass = options['removeButtonTextClass'] || 'btn btn-danger pull-right';\n    this.removeButtonClass = options['removeButtonClass'] || 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n    this.moveUpButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-up btn text-20 pull-left btn-primary';\n    this.moveDownButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-down btn text-20 pull-left btn-primary';\n    this.delegateErrorHandling = !_.isUndefined(options['delegateErrorHandling']) ? options['delegateErrorHandling'] : true;\n  }\n\n  getInitArrayEntry() {\n    if (this.fields[0].isGroup) {\n      const grp = {};\n      const fm = {};\n      const fg = this.fields[0].getGroup(grp, fm);\n      return [fg];\n    }\n    return [this.fields[0].createFormModel()];\n  }\n\n  getGroup(group: any, fieldMap: any) {\n    this.fieldMap = fieldMap;\n    fieldMap[this.name] = {field:this};\n    if (!this.value || this.value.length == 0) {\n      this.formModel = this.required ? new FormArray(this.getInitArrayEntry(), Validators.required) : new FormArray(this.getInitArrayEntry());\n    } else {\n      let fieldCtr = 0;\n      const baseField = this.fields[0];\n      const elems = [];\n      this.fields = _.map(this.value, (valueElem:any) => {\n        let fieldClone = null;\n        if (fieldCtr == 0) {\n          fieldClone = baseField;\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        } else {\n          fieldClone = this.createNewElem(baseField, _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem);\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        }\n        fieldCtr++;\n        elems.push(fieldClone.createFormModel());\n        return fieldClone;\n      });\n      this.formModel = this.required ? new FormArray(elems, Validators.required) : new FormArray(elems);\n      _.each(this.fields, f => {\n        f.setupEventHandlers();\n      });\n    }\n    fieldMap[this.name].control = this.formModel;\n    if (this.groupName) {\n      if (group[this.groupName]) {\n        group[this.groupName].addControl(this.name, this.formModel);\n      } else {\n        const fg = {};\n        fg[this.name] = this.formModel;\n        group[this.groupName] = fg;\n      }\n    } else {\n      group[this.name] = this.formModel;\n    }\n  }\n\n  createNewElem(baseFieldInst: any, value:any = null) {\n    const newOpts = _.cloneDeep(baseFieldInst.options);\n    newOpts.value = value;\n    const newInst = new baseFieldInst.constructor(newOpts, this.injector);\n    _.forEach(this.skipClone, (f: any)=> {\n      newInst[f] = null;\n    });\n\n    _.forEach(this.forceClone, (f: any) => {\n      if (_.isString(f)) {\n        newInst[f] = _.cloneDeepWith(baseFieldInst[f], this.getCloneCustomizer(\n          {\n            skipClone: ['fields', 'fieldMap', 'formModel', 'injector', 'onValueUpdate', 'onValueLoaded', 'translationService', 'utilityService', 'componentReactors'],\n            copy: ['fieldMap', 'injector', 'translationService', 'utilityService']\n          }\n        ));\n      } else {\n        newInst[f.field] = _.cloneDeepWith(baseFieldInst[f.field], this.getCloneCustomizer(f));\n      }\n    });\n\n    if (_.isFunction(newInst.postInit)) {\n      newInst.postInit(value);\n    }\n    return newInst;\n  }\n\n  getCloneCustomizer(cloneOpts:any) {\n    const that = this;\n    return function(value: any, key: any) {\n      if (_.includes(cloneOpts.skipClone, key) ) {\n        if (_.includes(cloneOpts.copy, key)) {\n          return that[key];\n        }\n        return false;\n      }\n    };\n  }\n\n  addElem(val:any = null) {\n    const newElem = this.createNewElem(this.fields[0], val);\n    if (val == null && _.isFunction(newElem.setEmptyValue)) {\n      newElem.setEmptyValue();\n    }\n    this.fields.push(newElem);\n    const newFormModel = newElem.createFormModel();\n    this.formModel.push(newFormModel);\n    return newElem;\n  }\n\n  removeElem(index: number) {\n    _.remove(this.fields, (val:any, idx: number) => { return idx == index });\n    this.formModel.removeAt(index);\n  }\n\n  swap(fromIdx, toIdx) {\n    let temp = this.fields[toIdx];\n    this.fields[toIdx] = this.fields[fromIdx];\n    this.fields[fromIdx] = temp;\n    temp = this.formModel.at(toIdx);\n    this.formModel.setControl(toIdx, this.formModel.at(fromIdx));\n    this.formModel.setControl(fromIdx, temp);\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].setValue(value, true);\n  }\n\n  public triggerValidation() {\n    _.forEach(this.fields, (f:any) => {\n      f.triggerValidation();\n    });\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any) {\n    console.log(`Repeatable container field reacting: ${eventName}`);\n    console.log(eventData);\n    // delete first...\n    for (let toDelIdx = 1; toDelIdx  {\n      if (idx >= this.formModel.controls.length) {\n        this.addElem(entry);\n      } else {\n        this.setValueAtElem(idx, entry);\n      }\n    });\n  }\n\n  public removeAllElems() {\n    _.each(this.fields, (f, idx) => {\n      this.removeElem(idx);\n    });\n  }\n\n  public reset(data=null, eventConfig=null) {\n    this.fields[0].setValue(null);\n    if (this.fields.length > 1) {\n      for (var i=1; i = new EventEmitter();\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  public getGroupClass(fldName:string=null): string {\n    let baseClass = 'form-group';\n    if (this.isEmbedded) {\n      baseClass = '';\n    }\n    return `${baseClass} ${this.hasRequiredError() ? 'has-error' : '' } ${this.field.groupClasses}`;\n  }\n}\n\nexport class RepeatableComponent extends SimpleComponent {\n  field: RepeatableContainer;\n\n  addElem(event: any) {\n    this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n\n  hasRequiredError() {\n    let hasError = false;\n    _.each(this.field.formModel.controls, (c) => {\n      if (c.hasError('required')) {\n        hasError = true;\n        return false;\n      }\n    });\n    return hasError;\n  }\n}\n\nexport class RepeatableVocab extends RepeatableContainer {\n  fields: VocabField[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RepeatableVocab';\n  }\n\n  setValueAtElem(index, value:any) {\n    console.log(`Repeatable vocab setting value at: ${index}`);\n    console.log(value);\n    let selected = {};\n    selected['originalObject'] = value;\n    this.fields[index].component.onSelect(selected, false, true);\n  }\n}\n\n@Component({\n  selector: 'repeatable-vocab',\n  template: `\n  \n    \n      \n      {{field.label}}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableVocabComponent extends RepeatableComponent {\n  field: RepeatableVocab;\n  static clName = 'RepeatableVocabComponent';\n\n}\n\nexport class RepeatableContributor extends RepeatableContainer {\n  fields: ContributorField[];\n  canSort: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.canSort = _.isUndefined(options['canSort']) ? false : options['canSort'];\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].component.onSelect(value, false, true);\n  }\n\n  addElem(val:any = null) {\n    this.fields[0].setMissingFields(val);\n    return super.addElem(val);\n  }\n}\n\n@Component({\n  selector: 'repeatable-contributor',\n  template: `\n  \n    \n      \n        \n          {{field.fields[0].label}} {{getRequiredLabelStr()}}\n          \n        \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      \n         1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n         1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n         1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n         1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    \n      \n        {{field.fields[0].label}}\n      \n      \n        {{field.fields[0].titleColHdr}}\n        {{field.fields[0].nameColHdr}}\n        {{field.fields[0].emailColHdr}}\n        {{field.fields[0].roleColHdr}}\n        {{field.fields[0].orcidColHdr}}\n      \n      \n        {{fieldElem.value.honorific}}\n        {{fieldElem.value.text_full_name}}\n        {{fieldElem.value.email}}\n        {{fieldElem.value.role}}\n        {{fieldElem.value.orcid}}\n      \n    \n  \n  `,\n})\nexport class RepeatableContributorComponent extends RepeatableComponent implements OnInit {\n  field: RepeatableContributor;\n\n  ngOnInit() {\n    this.field.fields[0]['showHeader'] = false;\n    this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    this.field.fields[0].componentReactors.push(this);\n  }\n\n  addElem(event: any) {\n    const newElem:any = this.field.addElem();\n    newElem.marginTop = '0px';\n    newElem.vocabField.initialValue = null;\n    newElem.setupEventHandlers();\n    newElem.showHeader = false;\n    newElem.componentReactors.push(this);\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n    if (i == 0) {\n      this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    }\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any, elem:any) {\n    if (this.field.fields.length > 0) {\n      elem.marginTop = '0px';\n      elem.vocabField.initialValue = eventData;\n      elem.setupEventHandlers();\n      elem.componentReactors.push(this);\n    }\n  }\n\n  public moveUp(event: any, i:number) {\n    const newIdx = i - 1;\n    if (newIdx >= 0) {\n      this.field.swap(i, newIdx);\n      if (newIdx == 0) {\n        this.field.fields[i].marginTop = '';\n        this.field.fields[newIdx].marginTop = this.field.fields[newIdx].baseMarginTop;\n      }\n    }\n  }\n\n  public moveDown(event: any, i:number) {\n    const newIdx = i + 1;\n    if (newIdx \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{field.label}}                                 1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">                           {{field.addButtonText}}              {{field.label}}                  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepeatableVocabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Report.html":{"url":"classes/Report.html","title":"class - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/report-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                filter\n                            \n                            \n                                name\n                            \n                            \n                                solrQuery\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            solrQuery\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Report {\n\n  title: string\n  name: string\n  solrQuery: string\n  filter: object\n  columns: object[]\n}\n\nexport class ReportResults {\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: object[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReportModule.html":{"url":"modules/ReportModule.html","title":"module - ReportModule","body":"\n                   \n\n\n\n\n    Modules\n    ReportModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_declarations\n\n\n\ncluster_ReportModule_imports\n\n\n\ncluster_ReportModule_bootstrap\n\n\n\ncluster_ReportModule_providers\n\n\n\n\nMultivalueFieldPipe\n\nMultivalueFieldPipe\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nMultivalueFieldPipe->ReportModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nReportModule -->\n\nReportComponent->ReportModule\n\n\n\n\n\nReportComponent \n\nReportComponent \n\nReportComponent  -->\n\nReportModule->ReportComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nReportModule -->\n\nSharedModule->ReportModule\n\n\n\n\n\nReportService\n\nReportService\n\nReportModule -->\n\nReportService->ReportModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/report/app/report.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MultivalueFieldPipe\n                        \n                        \n                            ReportComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ReportService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            ReportComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ReportComponent }  from './report.component';\nimport { MultivalueFieldPipe }  from './MultivalueFieldPipe';\nimport { PaginationModule,TooltipModule } from 'ngx-bootstrap';\nimport { SharedModule } from './shared/shared.module';\nimport { ReportService } from './shared/report-service';\nimport { NKDatetimeModule } from 'ng2-datetime/ng2-datetime';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, PaginationModule.forRoot(), TooltipModule.forRoot(), SharedModule, NKDatetimeModule],\n  declarations: [ ReportComponent, MultivalueFieldPipe ],\n  providers:    [  ReportService ],\n  bootstrap:    [ ReportComponent ]\n})\nexport class ReportModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportResults.html":{"url":"classes/ReportResults.html","title":"class - ReportResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/report-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                items\n                            \n                            \n                                noItems\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Report {\n\n  title: string\n  name: string\n  solrQuery: string\n  filter: object\n  columns: object[]\n}\n\nexport class ReportResults {\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: object[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportService.html":{"url":"injectables/ReportService.html","title":"injectable - ReportService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/report-service.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDates\n                            \n                            \n                                getReport\n                            \n                            \n                                getReportResults\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService, translator: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/report-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                        TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            formatDates\n                        \n                        \n                    \n                \n            \n            \n                \nformatDates(response: object)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/report-service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         object\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReport\n                        \n                        \n                    \n                \n            \n            \n                \ngetReport(name: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/report-service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getReportResults\n                        \n                        \n                    \n                \n            \n            \n                \ngetReportResults(name: string, pageNumber: number, params: object)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/report-service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport moment from 'moment-es6';\nimport { BaseService } from '../shared/base-service'\nimport { Report, ReportResults } from './report-models'\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class ReportService extends BaseService {\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translator:TranslationService) {\n    super(http, configService);\n  }\n\n  getReport(name:string): Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/admin/getReport?name=`+name, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res) as Report);\n  }\n\n  getReportResults(name:string, pageNumber:number, params:object): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    var url = `${this.brandingAndPortalUrl}/admin/getReportResults?name=`+name+`&start=`+start+`&rows=`+rows;\n    for(var key in params) {\n      url=url+'&'+key+\"=\"+params[key];\n    }\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res) as ReportResults);\n  }\n\n  formatDates(response:object){\n    var items = response[\"items\"];\n    for (var i=0;i\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/roles-service.ts\n        \n\n            \n                Description\n            \n            \n                Role related service\nAuthor: Shilo Banihit\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrandRoles\n                            \n                            \n                                updateUserRoles\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/roles-service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrandRoles\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrandRoles()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/roles-service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserRoles\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserRoles(userid: any, roleIds: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/roles-service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    roleIds\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { SaveResult, Role, User, LoginResult } from './user-models'\nimport { ConfigService } from './config-service';\n\n/**\n * Role related service\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RolesService extends BaseService {\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getBrandRoles() :Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/admin/roles/get`, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Role[]);\n  }\n\n  updateUserRoles(userid: any, roleIds: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/roles/user`, {userid: userid, roles:roleIds}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SaveButtonComponent.html":{"url":"components/SaveButtonComponent.html","title":"component - SaveButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SaveButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        Save Button Component.\nCalls the form framework's save function to create or update the record.\nUsage\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n*\n| Property Name       | Description                                                    | Required | Default |\n|---------------------|----------------------------------------------------------------|----------|---------|\n| label               | The text to display on the button                              | Yes      |         |\n| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                save-button\n            \n\n\n\n            \n                template\n                {{field.label}}\n\n  \n    \n      \n        &times;\n        \n      \n      \n      \n        \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                doAction\n                            \n                            \n                                hideConfirmDlg\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                showConfirmDlg\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            doAction\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    doAction()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:497\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            hideConfirmDlg\n                        \n                        \n                    \n                \n            \n            \n                \nhideConfirmDlg()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:493\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClick\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClick(event: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:481\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showConfirmDlg\n                        \n                        \n                    \n                \n            \n            \n                \nshowConfirmDlg()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:489\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SaveButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:479\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.label}}                    ×                                                      '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SaveButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveResult.html":{"url":"classes/SaveResult.html","title":"class - SaveResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectionComponent.html":{"url":"classes/SelectionComponent.html","title":"class - SelectionComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-simple.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                        SimpleComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SelectionField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:147\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(val: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nANDSVocabComponent\n\nANDSVocabComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nANDSVocabComponent->SharedModule\n\n\n\n\n\nActionButtonComponent\n\nActionButtonComponent\n\nSharedModule -->\n\nActionButtonComponent->SharedModule\n\n\n\n\n\nAnchorOrButtonComponent\n\nAnchorOrButtonComponent\n\nSharedModule -->\n\nAnchorOrButtonComponent->SharedModule\n\n\n\n\n\nAsynchComponent\n\nAsynchComponent\n\nSharedModule -->\n\nAsynchComponent->SharedModule\n\n\n\n\n\nButtonBarContainerComponent\n\nButtonBarContainerComponent\n\nSharedModule -->\n\nButtonBarContainerComponent->SharedModule\n\n\n\n\n\nCancelButtonComponent\n\nCancelButtonComponent\n\nSharedModule -->\n\nCancelButtonComponent->SharedModule\n\n\n\n\n\nContributorComponent\n\nContributorComponent\n\nSharedModule -->\n\nContributorComponent->SharedModule\n\n\n\n\n\nDataLocationComponent\n\nDataLocationComponent\n\nSharedModule -->\n\nDataLocationComponent->SharedModule\n\n\n\n\n\nDateTimeComponent\n\nDateTimeComponent\n\nSharedModule -->\n\nDateTimeComponent->SharedModule\n\n\n\n\n\nDmpFieldComponent\n\nDmpFieldComponent\n\nSharedModule -->\n\nDmpFieldComponent->SharedModule\n\n\n\n\n\nDropdownFieldComponent\n\nDropdownFieldComponent\n\nSharedModule -->\n\nDropdownFieldComponent->SharedModule\n\n\n\n\n\nGenericGroupComponent\n\nGenericGroupComponent\n\nSharedModule -->\n\nGenericGroupComponent->SharedModule\n\n\n\n\n\nHiddenValueComponent\n\nHiddenValueComponent\n\nSharedModule -->\n\nHiddenValueComponent->SharedModule\n\n\n\n\n\nHtmlRawComponent\n\nHtmlRawComponent\n\nSharedModule -->\n\nHtmlRawComponent->SharedModule\n\n\n\n\n\nLinkValueComponent\n\nLinkValueComponent\n\nSharedModule -->\n\nLinkValueComponent->SharedModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nSharedModule -->\n\nMapComponent->SharedModule\n\n\n\n\n\nMarkdownTextAreaComponent\n\nMarkdownTextAreaComponent\n\nSharedModule -->\n\nMarkdownTextAreaComponent->SharedModule\n\n\n\n\n\nPDFListComponent\n\nPDFListComponent\n\nSharedModule -->\n\nPDFListComponent->SharedModule\n\n\n\n\n\nParameterRetrieverComponent\n\nParameterRetrieverComponent\n\nSharedModule -->\n\nParameterRetrieverComponent->SharedModule\n\n\n\n\n\nPublishDataLocationRefreshComponent\n\nPublishDataLocationRefreshComponent\n\nSharedModule -->\n\nPublishDataLocationRefreshComponent->SharedModule\n\n\n\n\n\nPublishDataLocationSelectorComponent\n\nPublishDataLocationSelectorComponent\n\nSharedModule -->\n\nPublishDataLocationSelectorComponent->SharedModule\n\n\n\n\n\nRecordMetadataRetrieverComponent\n\nRecordMetadataRetrieverComponent\n\nSharedModule -->\n\nRecordMetadataRetrieverComponent->SharedModule\n\n\n\n\n\nRecordPermissionsComponent\n\nRecordPermissionsComponent\n\nSharedModule -->\n\nRecordPermissionsComponent->SharedModule\n\n\n\n\n\nRelatedObjectDataComponent\n\nRelatedObjectDataComponent\n\nSharedModule -->\n\nRelatedObjectDataComponent->SharedModule\n\n\n\n\n\nRelatedObjectSelectorComponent\n\nRelatedObjectSelectorComponent\n\nSharedModule -->\n\nRelatedObjectSelectorComponent->SharedModule\n\n\n\n\n\nRepeatableContributorComponent\n\nRepeatableContributorComponent\n\nSharedModule -->\n\nRepeatableContributorComponent->SharedModule\n\n\n\n\n\nRepeatableGroupComponent\n\nRepeatableGroupComponent\n\nSharedModule -->\n\nRepeatableGroupComponent->SharedModule\n\n\n\n\n\nRepeatableTextfieldComponent\n\nRepeatableTextfieldComponent\n\nSharedModule -->\n\nRepeatableTextfieldComponent->SharedModule\n\n\n\n\n\nRepeatableVocabComponent\n\nRepeatableVocabComponent\n\nSharedModule -->\n\nRepeatableVocabComponent->SharedModule\n\n\n\n\n\nSaveButtonComponent\n\nSaveButtonComponent\n\nSharedModule -->\n\nSaveButtonComponent->SharedModule\n\n\n\n\n\nSelectionFieldComponent\n\nSelectionFieldComponent\n\nSharedModule -->\n\nSelectionFieldComponent->SharedModule\n\n\n\n\n\nSpacerComponent\n\nSpacerComponent\n\nSharedModule -->\n\nSpacerComponent->SharedModule\n\n\n\n\n\nStringTemplatePipe\n\nStringTemplatePipe\n\nSharedModule -->\n\nStringTemplatePipe->SharedModule\n\n\n\n\n\nTabNavButtonComponent\n\nTabNavButtonComponent\n\nSharedModule -->\n\nTabNavButtonComponent->SharedModule\n\n\n\n\n\nTabOrAccordionContainerComponent\n\nTabOrAccordionContainerComponent\n\nSharedModule -->\n\nTabOrAccordionContainerComponent->SharedModule\n\n\n\n\n\nTextAreaComponent\n\nTextAreaComponent\n\nSharedModule -->\n\nTextAreaComponent->SharedModule\n\n\n\n\n\nTextBlockComponent\n\nTextBlockComponent\n\nSharedModule -->\n\nTextBlockComponent->SharedModule\n\n\n\n\n\nTextFieldComponent\n\nTextFieldComponent\n\nSharedModule -->\n\nTextFieldComponent->SharedModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedModule -->\n\nToggleComponent->SharedModule\n\n\n\n\n\nTreeNodeCheckboxComponent\n\nTreeNodeCheckboxComponent\n\nSharedModule -->\n\nTreeNodeCheckboxComponent->SharedModule\n\n\n\n\n\nVocabFieldComponent\n\nVocabFieldComponent\n\nSharedModule -->\n\nVocabFieldComponent->SharedModule\n\n\n\n\n\nWorkflowStepButtonComponent\n\nWorkflowStepButtonComponent\n\nSharedModule -->\n\nWorkflowStepButtonComponent->SharedModule\n\n\n\n\n\nWorkspaceFieldComponent\n\nWorkspaceFieldComponent\n\nSharedModule -->\n\nWorkspaceFieldComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorComponent\n\nWorkspaceSelectorComponent\n\nSharedModule -->\n\nWorkspaceSelectorComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorFieldComponent\n\nWorkspaceSelectorFieldComponent\n\nSharedModule -->\n\nWorkspaceSelectorFieldComponent->SharedModule\n\n\n\n\n\nANDSVocabComponent \n\nANDSVocabComponent \n\nANDSVocabComponent  -->\n\nSharedModule->ANDSVocabComponent \n\n\n\n\n\nActionButtonComponent \n\nActionButtonComponent \n\nActionButtonComponent  -->\n\nSharedModule->ActionButtonComponent \n\n\n\n\n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent  -->\n\nSharedModule->AnchorOrButtonComponent \n\n\n\n\n\nAsynchComponent \n\nAsynchComponent \n\nAsynchComponent  -->\n\nSharedModule->AsynchComponent \n\n\n\n\n\nButtonBarContainerComponent \n\nButtonBarContainerComponent \n\nButtonBarContainerComponent  -->\n\nSharedModule->ButtonBarContainerComponent \n\n\n\n\n\nContributorComponent \n\nContributorComponent \n\nContributorComponent  -->\n\nSharedModule->ContributorComponent \n\n\n\n\n\nDataLocationComponent \n\nDataLocationComponent \n\nDataLocationComponent  -->\n\nSharedModule->DataLocationComponent \n\n\n\n\n\nDateTimeComponent \n\nDateTimeComponent \n\nDateTimeComponent  -->\n\nSharedModule->DateTimeComponent \n\n\n\n\n\nDmpFieldComponent \n\nDmpFieldComponent \n\nDmpFieldComponent  -->\n\nSharedModule->DmpFieldComponent \n\n\n\n\n\nDropdownFieldComponent \n\nDropdownFieldComponent \n\nDropdownFieldComponent  -->\n\nSharedModule->DropdownFieldComponent \n\n\n\n\n\nGenericGroupComponent \n\nGenericGroupComponent \n\nGenericGroupComponent  -->\n\nSharedModule->GenericGroupComponent \n\n\n\n\n\nHiddenValueComponent \n\nHiddenValueComponent \n\nHiddenValueComponent  -->\n\nSharedModule->HiddenValueComponent \n\n\n\n\n\nHtmlRawComponent \n\nHtmlRawComponent \n\nHtmlRawComponent  -->\n\nSharedModule->HtmlRawComponent \n\n\n\n\n\nLinkValueComponent \n\nLinkValueComponent \n\nLinkValueComponent  -->\n\nSharedModule->LinkValueComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nSharedModule->MapComponent \n\n\n\n\n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent  -->\n\nSharedModule->MarkdownTextAreaComponent \n\n\n\n\n\nPDFListComponent \n\nPDFListComponent \n\nPDFListComponent  -->\n\nSharedModule->PDFListComponent \n\n\n\n\n\nParameterRetrieverComponent \n\nParameterRetrieverComponent \n\nParameterRetrieverComponent  -->\n\nSharedModule->ParameterRetrieverComponent \n\n\n\n\n\nPublishDataLocationRefreshComponent \n\nPublishDataLocationRefreshComponent \n\nPublishDataLocationRefreshComponent  -->\n\nSharedModule->PublishDataLocationRefreshComponent \n\n\n\n\n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent  -->\n\nSharedModule->PublishDataLocationSelectorComponent \n\n\n\n\n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent  -->\n\nSharedModule->RecordMetadataRetrieverComponent \n\n\n\n\n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent  -->\n\nSharedModule->RelatedObjectSelectorComponent \n\n\n\n\n\nRepeatableContributorComponent \n\nRepeatableContributorComponent \n\nRepeatableContributorComponent  -->\n\nSharedModule->RepeatableContributorComponent \n\n\n\n\n\nRepeatableGroupComponent \n\nRepeatableGroupComponent \n\nRepeatableGroupComponent  -->\n\nSharedModule->RepeatableGroupComponent \n\n\n\n\n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent  -->\n\nSharedModule->RepeatableTextfieldComponent \n\n\n\n\n\nRepeatableVocabComponent \n\nRepeatableVocabComponent \n\nRepeatableVocabComponent  -->\n\nSharedModule->RepeatableVocabComponent \n\n\n\n\n\nSelectionFieldComponent \n\nSelectionFieldComponent \n\nSelectionFieldComponent  -->\n\nSharedModule->SelectionFieldComponent \n\n\n\n\n\nSpacerComponent \n\nSpacerComponent \n\nSpacerComponent  -->\n\nSharedModule->SpacerComponent \n\n\n\n\n\nStringTemplatePipe \n\nStringTemplatePipe \n\nStringTemplatePipe  -->\n\nSharedModule->StringTemplatePipe \n\n\n\n\n\nTabNavButtonComponent \n\nTabNavButtonComponent \n\nTabNavButtonComponent  -->\n\nSharedModule->TabNavButtonComponent \n\n\n\n\n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent  -->\n\nSharedModule->TabOrAccordionContainerComponent \n\n\n\n\n\nTextAreaComponent \n\nTextAreaComponent \n\nTextAreaComponent  -->\n\nSharedModule->TextAreaComponent \n\n\n\n\n\nTextBlockComponent \n\nTextBlockComponent \n\nTextBlockComponent  -->\n\nSharedModule->TextBlockComponent \n\n\n\n\n\nTextFieldComponent \n\nTextFieldComponent \n\nTextFieldComponent  -->\n\nSharedModule->TextFieldComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedModule->ToggleComponent \n\n\n\n\n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent  -->\n\nSharedModule->TreeNodeCheckboxComponent \n\n\n\n\n\nVocabFieldComponent \n\nVocabFieldComponent \n\nVocabFieldComponent  -->\n\nSharedModule->VocabFieldComponent \n\n\n\n\n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent  -->\n\nSharedModule->WorkflowStepButtonComponent \n\n\n\n\n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent  -->\n\nSharedModule->WorkspaceFieldComponent \n\n\n\n\n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent  -->\n\nSharedModule->WorkspaceSelectorComponent \n\n\n\n\n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent  -->\n\nSharedModule->WorkspaceSelectorFieldComponent \n\n\n\n\n\nANDSService\n\nANDSService\n\nSharedModule -->\n\nANDSService->SharedModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nSharedModule -->\n\nConfigService->SharedModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nSharedModule -->\n\nDashboardService->SharedModule\n\n\n\n\n\nEmailNotificationService\n\nEmailNotificationService\n\nSharedModule -->\n\nEmailNotificationService->SharedModule\n\n\n\n\n\nFieldControlMetaService\n\nFieldControlMetaService\n\nSharedModule -->\n\nFieldControlMetaService->SharedModule\n\n\n\n\n\nFieldControlService\n\nFieldControlService\n\nSharedModule -->\n\nFieldControlService->SharedModule\n\n\n\n\n\nRecordsService\n\nRecordsService\n\nSharedModule -->\n\nRecordsService->SharedModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSharedModule -->\n\nRolesService->SharedModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nSharedModule -->\n\nTranslationService->SharedModule\n\n\n\n\n\nUserSimpleService\n\nUserSimpleService\n\nSharedModule -->\n\nUserSimpleService->SharedModule\n\n\n\n\n\nUtilityService\n\nUtilityService\n\nSharedModule -->\n\nUtilityService->SharedModule\n\n\n\n\n\nVocabFieldLookupService\n\nVocabFieldLookupService\n\nSharedModule -->\n\nVocabFieldLookupService->SharedModule\n\n\n\n\n\nWorkspaceTypeService\n\nWorkspaceTypeService\n\nSharedModule -->\n\nWorkspaceTypeService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/shared/shared.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ANDSVocabComponent\n                        \n                        \n                            ActionButtonComponent\n                        \n                        \n                            AnchorOrButtonComponent\n                        \n                        \n                            AsynchComponent\n                        \n                        \n                            ButtonBarContainerComponent\n                        \n                        \n                            CancelButtonComponent\n                        \n                        \n                            ContributorComponent\n                        \n                        \n                            DataLocationComponent\n                        \n                        \n                            DateTimeComponent\n                        \n                        \n                            DmpFieldComponent\n                        \n                        \n                            DropdownFieldComponent\n                        \n                        \n                            GenericGroupComponent\n                        \n                        \n                            HiddenValueComponent\n                        \n                        \n                            HtmlRawComponent\n                        \n                        \n                            LinkValueComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MarkdownTextAreaComponent\n                        \n                        \n                            PDFListComponent\n                        \n                        \n                            ParameterRetrieverComponent\n                        \n                        \n                            PublishDataLocationRefreshComponent\n                        \n                        \n                            PublishDataLocationSelectorComponent\n                        \n                        \n                            RecordMetadataRetrieverComponent\n                        \n                        \n                            RecordPermissionsComponent\n                        \n                        \n                            RelatedObjectDataComponent\n                        \n                        \n                            RelatedObjectSelectorComponent\n                        \n                        \n                            RepeatableContributorComponent\n                        \n                        \n                            RepeatableGroupComponent\n                        \n                        \n                            RepeatableTextfieldComponent\n                        \n                        \n                            RepeatableVocabComponent\n                        \n                        \n                            SaveButtonComponent\n                        \n                        \n                            SelectionFieldComponent\n                        \n                        \n                            SpacerComponent\n                        \n                        \n                            StringTemplatePipe\n                        \n                        \n                            TabNavButtonComponent\n                        \n                        \n                            TabOrAccordionContainerComponent\n                        \n                        \n                            TextAreaComponent\n                        \n                        \n                            TextBlockComponent\n                        \n                        \n                            TextFieldComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            TreeNodeCheckboxComponent\n                        \n                        \n                            VocabFieldComponent\n                        \n                        \n                            WorkflowStepButtonComponent\n                        \n                        \n                            WorkspaceFieldComponent\n                        \n                        \n                            WorkspaceSelectorComponent\n                        \n                        \n                            WorkspaceSelectorFieldComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ANDSVocabComponent\n                        \n                        \n                            ActionButtonComponent\n                        \n                        \n                            AnchorOrButtonComponent\n                        \n                        \n                            AsynchComponent\n                        \n                        \n                            ButtonBarContainerComponent\n                        \n                        \n                            CancelButtonComponent\n                        \n                        \n                            ContributorComponent\n                        \n                        \n                            DataLocationComponent\n                        \n                        \n                            DateTimeComponent\n                        \n                        \n                            DmpFieldComponent\n                        \n                        \n                            DropdownFieldComponent\n                        \n                        \n                            GenericGroupComponent\n                        \n                        \n                            HiddenValueComponent\n                        \n                        \n                            HtmlRawComponent\n                        \n                        \n                            LinkValueComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MarkdownTextAreaComponent\n                        \n                        \n                            PDFListComponent\n                        \n                        \n                            ParameterRetrieverComponent\n                        \n                        \n                            PublishDataLocationRefreshComponent\n                        \n                        \n                            PublishDataLocationSelectorComponent\n                        \n                        \n                            RecordMetadataRetrieverComponent\n                        \n                        \n                            RecordPermissionsComponent\n                        \n                        \n                            RelatedObjectDataComponent\n                        \n                        \n                            RelatedObjectSelectorComponent\n                        \n                        \n                            RepeatableContributorComponent\n                        \n                        \n                            RepeatableGroupComponent\n                        \n                        \n                            RepeatableTextfieldComponent\n                        \n                        \n                            RepeatableVocabComponent\n                        \n                        \n                            SaveButtonComponent\n                        \n                        \n                            SelectionFieldComponent\n                        \n                        \n                            SpacerComponent\n                        \n                        \n                            TabNavButtonComponent\n                        \n                        \n                            TabOrAccordionContainerComponent\n                        \n                        \n                            TextAreaComponent\n                        \n                        \n                            TextBlockComponent\n                        \n                        \n                            TextFieldComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            TreeNodeCheckboxComponent\n                        \n                        \n                            VocabFieldComponent\n                        \n                        \n                            WorkflowStepButtonComponent\n                        \n                        \n                            WorkspaceFieldComponent\n                        \n                        \n                            WorkspaceSelectorComponent\n                        \n                        \n                            WorkspaceSelectorFieldComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ANDSService\n                        \n                        \n                            ConfigService\n                        \n                        \n                            DashboardService\n                        \n                        \n                            EmailNotificationService\n                        \n                        \n                            FieldControlMetaService\n                        \n                        \n                            FieldControlService\n                        \n                        \n                            RecordsService\n                        \n                        \n                            RolesService\n                        \n                        \n                            TranslationService\n                        \n                        \n                            UserSimpleService\n                        \n                        \n                            UtilityService\n                        \n                        \n                            VocabFieldLookupService\n                        \n                        \n                            WorkspaceTypeService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ANDSVocabComponent\n                        \n                        \n                            ActionButtonComponent\n                        \n                        \n                            AnchorOrButtonComponent\n                        \n                        \n                            AsynchComponent\n                        \n                        \n                            ButtonBarContainerComponent\n                        \n                        \n                            ContributorComponent\n                        \n                        \n                            DataLocationComponent\n                        \n                        \n                            DateTimeComponent\n                        \n                        \n                            DmpFieldComponent\n                        \n                        \n                            DropdownFieldComponent\n                        \n                        \n                            GenericGroupComponent\n                        \n                        \n                            HiddenValueComponent\n                        \n                        \n                            HtmlRawComponent\n                        \n                        \n                            LinkValueComponent\n                        \n                        \n                            MapComponent\n                        \n                        \n                            MarkdownTextAreaComponent\n                        \n                        \n                            PDFListComponent\n                        \n                        \n                            ParameterRetrieverComponent\n                        \n                        \n                            PublishDataLocationRefreshComponent\n                        \n                        \n                            PublishDataLocationSelectorComponent\n                        \n                        \n                            RecordMetadataRetrieverComponent\n                        \n                        \n                            RelatedObjectSelectorComponent\n                        \n                        \n                            RepeatableContributorComponent\n                        \n                        \n                            RepeatableGroupComponent\n                        \n                        \n                            RepeatableTextfieldComponent\n                        \n                        \n                            RepeatableVocabComponent\n                        \n                        \n                            SelectionFieldComponent\n                        \n                        \n                            SpacerComponent\n                        \n                        \n                            StringTemplatePipe\n                        \n                        \n                            TabNavButtonComponent\n                        \n                        \n                            TabOrAccordionContainerComponent\n                        \n                        \n                            TextAreaComponent\n                        \n                        \n                            TextBlockComponent\n                        \n                        \n                            TextFieldComponent\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            TreeNodeCheckboxComponent\n                        \n                        \n                            VocabFieldComponent\n                        \n                        \n                            WorkflowStepButtonComponent\n                        \n                        \n                            WorkspaceFieldComponent\n                        \n                        \n                            WorkspaceSelectorComponent\n                        \n                        \n                            WorkspaceSelectorFieldComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  NgModule\n} from '@angular/core';\nimport {\n  MarkdownModule,\n  MarkdownService\n} from 'angular2-markdown';\nimport {\n  ReactiveFormsModule,\n  FormsModule\n} from \"@angular/forms\";\nimport {\n  BrowserModule\n} from '@angular/platform-browser';\nimport {\n  RecordsService\n} from './form/records.service';\nimport {\n  FieldControlService\n} from './form/field-control.service';\nimport {\n  TextFieldComponent,\n  RepeatableTextfieldComponent,\n  MarkdownTextAreaComponent,\n  TextAreaComponent\n} from './form/field-textfield.component';\nimport {\n  DropdownFieldComponent,\n  TabOrAccordionContainerComponent,\n  ButtonBarContainerComponent,\n  TextBlockComponent,\n  DateTimeComponent,\n  AnchorOrButtonComponent,\n  SaveButtonComponent,\n  CancelButtonComponent,\n  HtmlRawComponent,\n  HiddenValueComponent,\n  LinkValueComponent,\n  SelectionFieldComponent,\n  ParameterRetrieverComponent,\n  TabNavButtonComponent,\n  SpacerComponent,\n  ToggleComponent\n} from './form/field-simple.component';\nimport {\n  RecordMetadataRetrieverComponent\n} from './form/record-meta.component';\nimport {\n  VocabField,\n  VocabFieldComponent,\n  VocabFieldLookupService\n} from './form/field-vocab.component';\nimport {\n  RepeatableVocabComponent,\n  RepeatableContributorComponent\n} from './form/field-repeatable.component';\nimport {\n  ContributorComponent\n} from './form/field-contributor.component';\nimport {\n  PDFListComponent\n} from './form/field-pdflist.component';\nimport {\n  RelatedObjectDataComponent\n} from './form/field-relatedobjectdata.component';\nimport {\n  RelatedObjectSelectorComponent\n} from './form/field-relatedobjectselector.component';\nimport {\n  RecordPermissionsComponent\n} from './form/field-recordpermissions.component';\n\nimport {\n  DataLocationComponent\n} from './form/field-datalocation.component';\nimport {\n  PublishDataLocationSelectorComponent\n} from './form/field-publishdatalocationselector.component';\nimport {\n  ANDSVocabComponent\n} from './form/field-andsvocab.component';\nimport {\n  MapComponent\n} from './form/field-map.component';\nimport {\n  WorkflowStepButtonComponent\n} from './form/workflow-button.component';\nimport {\n  ActionButtonComponent\n} from './form/action-button.component';\nimport {\n  ConfigService\n} from './config-service';\nimport {\n  TranslationService\n} from './translation-service';\nimport {\n  NKDatetimeModule\n} from 'ng2-datetime/ng2-datetime';\nimport {\n  Ng2CompleterModule\n} from \"ng2-completer\";\nimport {\n  TranslateI18NextModule\n} from 'ngx-i18next';\nimport {\n  LeafletModule\n} from '@asymmetrik/ngx-leaflet';\nimport {\n  LeafletDrawModule\n} from '@asymmetrik/ngx-leaflet-draw';\nimport {\n  DmpFieldComponent\n} from './form/dmp-field.component';\nimport {\n  UserSimpleService\n} from './user.service-simple';\nimport {\n  DashboardService\n} from './dashboard-service';\nimport {\n  ANDSService\n} from './ands-service';\nimport {\n  StringTemplatePipe\n} from './StringTemplatePipe';\nimport {\n  RolesService\n} from './roles-service';\nimport {\n  UtilityService\n} from './util-service';\nimport {\n  EmailNotificationService\n} from './email-service';\nimport {\n  GenericGroupComponent,\n  RepeatableGroupComponent\n} from './form/field-group.component';\nimport {\n  WorkspaceSelectorFieldComponent\n} from './form/workspace-selector.component';\nimport {\n  WorkspaceTypeService\n} from './workspace-service';\nimport {\n  WorkspaceFieldComponent\n} from './form/workspace-field.component';\nimport {\n  WorkspaceSelectorComponent\n} from './form/workspace-selector.component';\nimport {\n  FieldControlMetaService\n} from './form/field-control-meta.service';\nimport {\n  TreeModule\n} from 'angular-tree-component';\nimport {\n  AsynchComponent\n} from './form/field-asynch.component';\nimport {\n  TreeNodeCheckboxComponent\n} from './form/tree-node-checkbox.component';\nimport {\n  PublishDataLocationRefreshComponent\n} from './form/field-publish-data-location-refresh.component'\nimport {\n  MobxAngularModule\n} from 'mobx-angular';\n\n@NgModule({\n  imports: [BrowserModule, FormsModule, ReactiveFormsModule, NKDatetimeModule, Ng2CompleterModule, TranslateI18NextModule, LeafletModule.forRoot(), LeafletDrawModule.forRoot(), MarkdownModule.forRoot(), TreeModule, MobxAngularModule],\n  exports: [NKDatetimeModule, Ng2CompleterModule, TranslateI18NextModule, DmpFieldComponent, TextFieldComponent, DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent, MarkdownTextAreaComponent, TextAreaComponent, DateTimeComponent, AnchorOrButtonComponent, VocabFieldComponent, RepeatableVocabComponent, ContributorComponent, RepeatableContributorComponent, HtmlRawComponent, HiddenValueComponent, WorkflowStepButtonComponent, ActionButtonComponent, LinkValueComponent, SelectionFieldComponent, RepeatableTextfieldComponent, StringTemplatePipe, GenericGroupComponent, RepeatableGroupComponent, MapComponent, ParameterRetrieverComponent, RecordMetadataRetrieverComponent, RelatedObjectSelectorComponent, DataLocationComponent, PublishDataLocationSelectorComponent, WorkspaceSelectorFieldComponent, TabNavButtonComponent, SpacerComponent, WorkspaceFieldComponent, WorkspaceSelectorComponent, ANDSVocabComponent, PDFListComponent, TreeModule, AsynchComponent, ToggleComponent, TreeNodeCheckboxComponent, PublishDataLocationRefreshComponent],\n  declarations: [DmpFieldComponent, TextFieldComponent, DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent, MarkdownTextAreaComponent, TextAreaComponent, DateTimeComponent, AnchorOrButtonComponent, SaveButtonComponent, CancelButtonComponent, VocabFieldComponent, RepeatableVocabComponent, ContributorComponent, RepeatableContributorComponent, HtmlRawComponent, HiddenValueComponent, WorkflowStepButtonComponent, ActionButtonComponent, LinkValueComponent, SelectionFieldComponent, RepeatableTextfieldComponent, RelatedObjectDataComponent, StringTemplatePipe, GenericGroupComponent, RepeatableGroupComponent, MapComponent, ParameterRetrieverComponent, RecordMetadataRetrieverComponent, RelatedObjectSelectorComponent, DataLocationComponent, PublishDataLocationSelectorComponent, WorkspaceSelectorFieldComponent, TabNavButtonComponent, SpacerComponent, WorkspaceFieldComponent, WorkspaceSelectorComponent, ANDSVocabComponent, PDFListComponent, AsynchComponent, ToggleComponent, TreeNodeCheckboxComponent, PublishDataLocationRefreshComponent, RecordPermissionsComponent],\n  providers: [FieldControlService, RecordsService, VocabFieldLookupService, ConfigService, TranslationService, UserSimpleService, DashboardService, RolesService, EmailNotificationService, UtilityService, WorkspaceTypeService, FieldControlMetaService, ANDSService],\n  bootstrap: [],\n  entryComponents: [DmpFieldComponent, TextFieldComponent, DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent, MarkdownTextAreaComponent, TextAreaComponent, DateTimeComponent, AnchorOrButtonComponent, SaveButtonComponent, CancelButtonComponent, VocabFieldComponent, RepeatableVocabComponent, ContributorComponent, RepeatableContributorComponent, HtmlRawComponent, HiddenValueComponent, WorkflowStepButtonComponent, ActionButtonComponent, LinkValueComponent, SelectionFieldComponent, RepeatableTextfieldComponent, RelatedObjectDataComponent, GenericGroupComponent, RepeatableGroupComponent, MapComponent, ParameterRetrieverComponent, RecordMetadataRetrieverComponent, RelatedObjectSelectorComponent, DataLocationComponent, PublishDataLocationSelectorComponent, WorkspaceSelectorFieldComponent, TabNavButtonComponent, SpacerComponent, WorkspaceFieldComponent, WorkspaceSelectorComponent, ANDSVocabComponent, PDFListComponent, AsynchComponent, ToggleComponent, TreeNodeCheckboxComponent, PublishDataLocationRefreshComponent, RecordPermissionsComponent]\n\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimpleComponent.html":{"url":"classes/SimpleComponent.html","title":"class - SimpleComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-simple.component.ts\n        \n\n            \n                Description\n            \n            \n                A component base class\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:81\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:141\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:111\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:133\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:119\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:126\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:38\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:46\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:42\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:50\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:54\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SortComponent.html":{"url":"components/SortComponent.html","title":"component - SortComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SortComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/dashboard/app/sort.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sort\n            \n\n\n\n\n            \n                templateUrl\n                ./sort.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sortClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sort\n                            \n                            \n                                step\n                            \n                            \n                                title\n                            \n                            \n                                variable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sortChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sort\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variable\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sortChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            sortClicked\n                        \n                        \n                    \n                \n            \n            \n                \nsortClicked()\n                \n            \n\n\n            \n                \n                    Defined in angular/dashboard/app/sort.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Injectable, Inject, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { UserSimpleService } from './shared/user.service-simple';\nimport { DashboardService } from './shared/dashboard-service';\nimport { PlanTable, Plan } from './shared/dashboard-models';\nimport * as _ from \"lodash\";\nimport { LoadableComponent } from './shared/loadable.component';\nimport { OnInit } from '@angular/core';\nimport { PaginationModule, TooltipModule } from 'ngx-bootstrap';\nimport { TranslationService } from './shared/translation-service';\nimport { RecordsService } from './shared/form/records.service';\n\ndeclare var pageData: any;\n@Component({\n  selector: 'sort',\n  templateUrl: './sort.html'\n})\n\n@Injectable()\nexport class SortComponent  {\n\n  @Input() sort: string = null;\n  @Input() title: string = null;\n  @Input() step: string = null;\n  @Input() variable: string = null;\n  @Output() sortChanged = new EventEmitter();\n\n\n\n  sortClicked() {\n    if (this.sort != null) {\n      if (this.sort == \"asc\") {\n        this.sort = \"desc\";\n      } else {\n        this.sort = \"asc\";\n      }\n    } else {\n      this.sort = \"asc\";\n    }\n    this.sortChanged.emit({title:this.title, variable:this.variable, sort:this.sort, step:this.step});\n    return false;\n  }\n\n\n\n}\n\n    \n\n    \n        {{title}} \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}} '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SortComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpacerComponent.html":{"url":"components/SpacerComponent.html","title":"component - SpacerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpacerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spacer\n            \n\n\n\n            \n                template\n                &nbsp;\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Spacer\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:758\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpacerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StringTemplatePipe.html":{"url":"pipes/StringTemplatePipe.html","title":"pipe - StringTemplatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StringTemplatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/shared/StringTemplatePipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        stringTemplate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(templateString: string, args?: any[])\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/StringTemplatePipe.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    templateString\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            generateTemplateString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (function(){\n    var cache = {};\n\n    function generateTemplate(template){\n\n    var fn = cache[template];\n\n    if (!fn){\n\n    // Replace ${expressions} (etc) with ${map.expressions}.\n\n    var sanitized = template\n        .replace(/\\$\\{([\\s]*[^;\\s\\{]+[\\s]*)\\}/g, function(_, match){\n            return `\\$\\{map.${match.trim()}\\}`;\n            })\n        // Afterwards, replace anything that's not ${map.expressions}' (etc) with a blank string.\n        .replace(/(\\$\\{(?!map\\.)[^}]+\\})/g, '');\n\n    fn = Function('map', `return \\`${sanitized}\\``);\n\n    }\n\n    return fn;\n};\n\nreturn generateTemplate;\n})()\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/StringTemplatePipe.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n    Inject,\n    Pipe,\n    PipeTransform\n} from '@angular/core';\n\n\n@Pipe({\n    name: 'stringTemplate'\n})\nexport class StringTemplatePipe implements PipeTransform {\n\n\n    public transform(templateString:string, args?:any[]):string {\n      if(args != null) {\n        var template = this.generateTemplateString(templateString);\n        return template(args);\n      }\n        return templateString;\n    }\n\n    public generateTemplateString = (function(){\n    var cache = {};\n\n    function generateTemplate(template){\n\n    var fn = cache[template];\n\n    if (!fn){\n\n    // Replace ${expressions} (etc) with ${map.expressions}.\n\n    var sanitized = template\n        .replace(/\\$\\{([\\s]*[^;\\s\\{]+[\\s]*)\\}/g, function(_, match){\n            return `\\$\\{map.${match.trim()}\\}`;\n            })\n        // Afterwards, replace anything that's not ${map.expressions}' (etc) with a blank string.\n        .replace(/(\\$\\{(?!map\\.)[^}]+\\})/g, '');\n\n    fn = Function('map', `return \\`${sanitized}\\``);\n\n    }\n\n    return fn;\n};\n\nreturn generateTemplate;\n})();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabNavButtonComponent.html":{"url":"components/TabNavButtonComponent.html","title":"component - TabNavButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabNavButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tab-nav-button\n            \n\n\n\n            \n                template\n                \n{{field.prevLabel}}\n{{field.nextLabel}}\n\n\n{{field.prevLabel}}\n{{field.nextLabel}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUrlParameter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                stepToTab\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-simple.component.ts:576\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUrlParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetUrlParameter(param: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:607\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:591\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:582\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stepToTab\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stepToTab(step: number)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:598\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    step\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TabNavButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:576\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.prevLabel}}{{field.nextLabel}}{{field.prevLabel}}{{field.nextLabel}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabNavButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabOrAccordionContainerComponent.html":{"url":"components/TabOrAccordionContainerComponent.html","title":"component - TabOrAccordionContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabOrAccordionContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer components\n\n\n    \n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tabcontainer\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        {{tab.label}}\n      \n    \n    \n      \n    \n        \n          \n        \n      \n    \n  \n\n\n  \n    Expand/Collapse all\n    \n      \n        \n          \n            {{ tab.expandedChar }} {{ tab.label }}\n          \n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandCollapseAll\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-simple.component.ts:339\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            expandCollapseAll\n                        \n                        \n                    \n                \n            \n            \n                \nexpandCollapseAll()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngAfterViewInit\n                        \n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-simple.component.ts:345\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TabOrAccordionContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:339\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}                                                                    Expand/Collapse all                                        {{ tab.expandedChar }} {{ tab.label }}                                                                                          '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabOrAccordionContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextAreaComponent.html":{"url":"components/TextAreaComponent.html","title":"component - TextAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n    \n        Description\n    \n    \n        Component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n                EmbeddableComponent\n    \n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                text-area\n            \n\n\n\n            \n                template\n                \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n    \n      \n      \n    \n    {{field.value}}\n  \n  \n  \n    {{field.value}}\n  \n  \n  \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n\n\n  {{field.label}}\n  \n    {{line}}\n    \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:222\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:225\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:224\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:223\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:226\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/field-textfield.component.ts:227\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:232\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TextArea\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:225\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n        \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}                                  {{field.value}}          {{field.value}}          {{field.label}} is required    {{field.validationMessages.required}}    {{field.label}}      {{line}}      '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextBlockComponent.html":{"url":"components/TextBlockComponent.html","title":"component - TextBlockComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextBlockComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                text-block\n            \n\n\n\n            \n                template\n                \n  {{field.value == null? '' : field.value}}\n  {{field.value == null? '' : field.value}}\n  {{field.value == null? '' : field.value}}\n  {{field.value == null? '' : field.value}}\n  {{field.value == null? '' : field.value}}\n  {{field.value == null? '' : field.value}}\n  \n  {{field.value == null? '' : field.value}}\n  \n  \n\n\n    \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TextBlockComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:430\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Container\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:429\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{field.value == null? \\'\\' : field.value}}  {{field.value == null? \\'\\' : field.value}}  {{field.value == null? \\'\\' : field.value}}  {{field.value == null? \\'\\' : field.value}}  {{field.value == null? \\'\\' : field.value}}  {{field.value == null? \\'\\' : field.value}}    {{field.value == null? \\'\\' : field.value}}        '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextBlockComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextFieldComponent.html":{"url":"components/TextFieldComponent.html","title":"component - TextFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n\n    \n        Extends\n    \n    \n                EmbeddableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                textfield\n            \n\n\n\n            \n                template\n                \n  \n    \n      {{field.label}} {{ getRequiredLabelStr() }}\n      \n    \n      \n    \n  \n  \n    \n    \n      {{removeBtnText}}\n      \n    \n  \n  \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n\n\n  {{field.label}}\n  {{field.value}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:222\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:225\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:224\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:223\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from         EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         EmbeddableComponent:226\n\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:232\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onRemove\n                        \n                        \n                    \n                \n            \n            \n                \nonRemove(event: any)\n                \n            \n\n\n            \n                \n                    Inherited from         EmbeddableComponent\n\n                \n            \n            \n                \n                        Defined in         EmbeddableComponent:228\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n        \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{field.label}} {{ getRequiredLabelStr() }}                                      {{removeBtnText}}                  {{field.label}} is required    {{field.validationMessages.required}}    {{field.label}}  {{field.value}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toggle\n            \n\n\n\n            \n                template\n                \n  \n  {{ field.label }} \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Toggle\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:773\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isEmpty(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        \n          {{opt.label}}\n        \n        \n          {{opt.label}}\n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    {{getLabel(field.value)}}\n    \n    \n    {{getLabel(field.value.value)}}\n    \n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n  compare = this.compareFn.bind(this);\n\n  compareFn(a,b) {\n    if(this.field.storeValueAndLabel) {\n      if(b == null || b == \"\") {\n        return a.value == b;\n      }\n      return a.value == b.value;\n    }\n    return a == b;\n  }\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value) || this.field.controlType == 'checkbox';\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    {{field.value == null? '' : field.value}}\n    \n    {{field.value == null? '' : field.value}}\n    \n    \n  \n  \n      \n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ field.label }}   '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransferOwnerModule.html":{"url":"modules/TransferOwnerModule.html","title":"module - TransferOwnerModule","body":"\n                   \n\n\n\n\n    Modules\n    TransferOwnerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransferOwnerModule\n\n\n\ncluster_TransferOwnerModule_declarations\n\n\n\ncluster_TransferOwnerModule_imports\n\n\n\ncluster_TransferOwnerModule_bootstrap\n\n\n\n\nTransferOwnerComponent\n\nTransferOwnerComponent\n\n\n\nTransferOwnerModule\n\nTransferOwnerModule\n\nTransferOwnerModule -->\n\nTransferOwnerComponent->TransferOwnerModule\n\n\n\n\n\nTransferOwnerComponent \n\nTransferOwnerComponent \n\nTransferOwnerComponent  -->\n\nTransferOwnerModule->TransferOwnerComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTransferOwnerModule -->\n\nSharedModule->TransferOwnerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/transfer_owner/app/transfer_owner.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TransferOwnerComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            TransferOwnerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { TransferOwnerComponent }  from './transfer_owner.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule ],\n  declarations: [ TransferOwnerComponent ],\n  providers:    [ ],\n  bootstrap:    [ TransferOwnerComponent ]\n})\nexport class TransferOwnerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/translation-service.ts\n        \n\n            \n                Description\n            \n            \n                Translation service...\nAuthor: Shilo Banihit\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                subjects\n                            \n                            \n                                    Protected\n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTranslator\n                            \n                            \n                                isReady\n                            \n                            \n                                t\n                            \n                            \n                                translatorLoaded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateI18Next: TranslateI18Next, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/translation-service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateI18Next\n                                                  \n                                                        \n                                                                    TranslateI18Next\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initTranslator\n                        \n                        \n                    \n                \n            \n            \n                \ninitTranslator()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/translation-service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isReady\n                        \n                        \n                    \n                \n            \n            \n                \nisReady(handler: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/translation-service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            t\n                        \n                        \n                    \n                \n            \n            \n                \nt(key: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/translation-service.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            translatorLoaded\n                        \n                        \n                    \n                \n            \n            \n                \ntranslatorLoaded()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/translation-service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subjects\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            translatorReady\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { TranslateI18Next } from 'ngx-i18next';\nimport { Subject } from 'rxjs/Subject';\nimport { ConfigService } from './config-service';\n/**\n * Translation service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class TranslationService {\n  protected subjects: any;\n  protected translatorReady: boolean;\n  protected config: any;\n\n  constructor (protected translateI18Next: TranslateI18Next, protected configService: ConfigService) {\n    this.subjects = {};\n    this.initTranslator();\n  }\n\n  initTranslator() {\n    this.subjects['init'] = new Subject();\n    const ts = new Date().getTime();\n    this.translateI18Next.init({\n        debug: true,                                                        // optional\n        returnNull: false,\n        returnEmptyString: true,                                           // optional\t- but.. it's important, please see http://i18next.com/docs/options/!\n        // mapping: {\"specific_backend_message\": \"message_for_translate\"},     // optional\n        // browserLanguageDetector: injectableCustomLanguageDetectorService,   // optional - the specific application language detector (allows you to return the language of the user.\n        //                                                                     //            If it is absent, the service uses default \"angular2 locale detector\" behaviour using LOCALE_ID.\n        // // supportedLanguages: ['en', 'pt'],                                //            Therefore you can pass the optional supportedLanguages parameter which indicates your supported languages.\n        //                                                                     //            For example, LOCALE_ID = 'en-AU' or 'en-US' or 'en', you can pass only ['en'] -> locales/en/translation.json\n        //                                                                     //                         LOCALE_ID = 'pt-BR' or 'pt', you can pass only ['pt'] -> locales/pt/translation.json\n        // backend: injectableBackendConfigFactory                             // optional - allows to change \"loadPath\" i18next parameter\n        lng: 'en',\n        fallbackLng: 'en',\n        backend: { loadPath: `/locales/{{lng}}/{{ns}}.json?ts=${ts}` }\n    }).then(() => {\n      console.log(`Translator loaded...`);\n      this.translatorReady = true;\n      this.translatorLoaded();\n    });\n  }\n\n  translatorLoaded() {\n    if (this.translatorReady) {\n      this.subjects['init'].next(this);\n    }\n  }\n\n  isReady(handler: any) {\n    const subs = this.subjects['init'].subscribe(handler);\n    this.translatorLoaded();\n    return subs;\n  }\n\n  t(key: string) {\n    return this.translateI18Next.translate(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeCheckboxComponent.html":{"url":"components/TreeNodeCheckboxComponent.html","title":"component - TreeNodeCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/tree-node-checkbox.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-tree-node-checkbox\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                node\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/tree-node-checkbox.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                \n                \n                    \n                        Type :     TreeNode\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/tree-node-checkbox.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { TreeNode } from 'angular-tree-component';\n\n@Component({\n  selector: 'rb-tree-node-checkbox',\n  encapsulation: ViewEncapsulation.None,\n  styles: [],\n  template: `\n    \n      \n    \n  `\n})\nexport class TreeNodeCheckboxComponent {\n  @Input() node: TreeNode;\n  @Input() ariaLabel: string;\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                token\n                            \n                            \n                                type\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Role[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForm.html":{"url":"interfaces/UserForm.html","title":"interface - UserForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/manageUsers/app/forms.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        passwords\n                                \n                                \n                                        roles\n                                \n                                \n                                        userid\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwords\n                                    \n                                \n                                \n                                    \n                                        passwords:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userid\n                                    \n                                \n                                \n                                    \n                                        userid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from './shared/user-models';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport * as owasp from 'owasp-password-strength-test';\nimport * as _ from 'lodash';\n\nexport interface UserForm {\n    userid: string\n    username: string\n    name: string\n    email: string\n    passwords: { password: string, confirmPassword: string }\n    roles: any[]\n}\n\nexport function matchingValuesValidator(control1: string, control2: string) {\n    return (group: FormGroup): {[key: string]: any} => {\n        let val1 = group.controls[control1];\n        let val2 = group.controls[control2];\n\n        if (val1.value !== val2.value) {\n        return {\n            mismatched: true\n        };\n        }\n    }\n}\n\n// needed as Validators.email returns validation error when value is null\n// (i.e combines Validators.required functionality)\nexport function optionalEmailValidator(control: FormControl): {[key: string]: any} {\n    var emailRegexp = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    if (control.value && !emailRegexp.test(control.value)) {\n        return { invalidEmail: true };\n    }\n}\n\nexport function passwordStrengthValidator(control1: string) {\n  return (group: FormGroup): {[key: string]: any} => {\n    let password = group.controls[control1].value;\n    if (!_.isEmpty(password)) {\n      const result = owasp.test(password);\n      return result.errors.length == 0 ? undefined : { passwordStrength: true, passwordStrengthDetails: result };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForm-1.html":{"url":"interfaces/UserForm-1.html","title":"interface - UserForm-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/userProfile/app/forms.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        passwords\n                                \n                                \n                                        roles\n                                \n                                \n                                        userid\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwords\n                                    \n                                \n                                \n                                    \n                                        passwords:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userid\n                                    \n                                \n                                \n                                    \n                                        userid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from './shared/user-models';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nexport interface UserForm {\n    userid: string\n    username: string\n    name: string\n    email: string\n    passwords: { password: string, confirmPassword: string }\n    roles: any[]\n}\n\nexport function matchingValuesValidator(control1: string, control2: string) {\n    return (group: FormGroup): {[key: string]: any} => {\n        let val1 = group.controls[control1];\n        let val2 = group.controls[control2];\n\n        if (val1.value !== val2.value) {\n        return {\n            mismatched: true\n        };\n        }\n    }\n}\n\n// needed as Validators.email returns validation error when value is null\n// (i.e combines Validators.required functionality)\nexport function optionalEmailValidator(control: FormControl): {[key: string]: any} {\n    var emailRegexp = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    if (control.value && !emailRegexp.test(control.value)) {\n        return { invalidEmail: true };\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserProfileModule.html":{"url":"modules/UserProfileModule.html","title":"module - UserProfileModule","body":"\n                   \n\n\n\n\n    Modules\n    UserProfileModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_declarations\n\n\n\ncluster_UserProfileModule_imports\n\n\n\ncluster_UserProfileModule_bootstrap\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nUserProfileComponent->UserProfileModule\n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nUserProfileModule->UserProfileComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUserProfileModule -->\n\nSharedModule->UserProfileModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/userProfile/app/user_profile.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserProfileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            UserProfileComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ModalModule } from 'ngx-bootstrap';\n\nimport { UserProfileComponent }  from './user_profile.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule, ModalModule.forRoot() ],\n  declarations: [ UserProfileComponent ],\n  providers:    [ ],\n  bootstrap:    [ UserProfileComponent ]\n})\nexport class UserProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserSimpleService.html":{"url":"injectables/UserSimpleService.html","title":"injectable - UserSimpleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserSimpleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user.service-simple.ts\n        \n\n            \n                Description\n            \n            \n                User related service...\nAuthor: Shilo Banihit\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                headers\n                            \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLocalUser\n                            \n                            \n                                genKey\n                            \n                            \n                                genUserKey\n                            \n                            \n                                getInfo\n                            \n                            \n                                getUsers\n                            \n                            \n                                loginLocal\n                            \n                            \n                                revokeKey\n                            \n                            \n                                revokeUserKey\n                            \n                            \n                                updateUserDetails\n                            \n                            \n                                updateUserProfile\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/user.service-simple.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addLocalUser\n                        \n                        \n                    \n                \n            \n            \n                \naddLocalUser(username: any, details: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    details\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genKey\n                        \n                        \n                    \n                \n            \n            \n                \ngenKey(userid: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            genUserKey\n                        \n                        \n                    \n                \n            \n            \n                \ngenUserKey()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getInfo\n                        \n                        \n                    \n                \n            \n            \n                \ngetInfo()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginLocal\n                        \n                        \n                    \n                \n            \n            \n                \nloginLocal(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeKey\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeKey(userid: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            revokeUserKey\n                        \n                        \n                    \n                \n            \n            \n                \nrevokeUserKey()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserDetails\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserDetails(userid: any, details: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userid\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    details\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateUserProfile\n                        \n                        \n                    \n                \n            \n            \n                \nupdateUserProfile(details: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/user.service-simple.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    details\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            headers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { User, LoginResult, SaveResult } from './user-models'\nimport { ConfigService } from '../shared/config-service';\n/**\n * User related service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class UserSimpleService extends BaseService {\n  protected baseUrl: any;\n  protected config: any;\n  protected headers: any;\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getInfo(): Promise {\n    return this.http.get(`${this.baseUrl}/user/info`)\n    .toPromise()\n    .then((res:any) => this.extractData(res, 'user') as User);\n  }\n\n  loginLocal(username: string, password: string): Promise {\n    console.log(`Loggin in locally using brand: ${this.config.branding}, portal: ${this.config.portal}`);\n    return this.http.post(`${this.baseUrl}/user/login_local`, {username: username, password:password, branding:this.config.branding, portal: this.config.portal}, this.getOptionsClient())\n    .toPromise()\n    .then(this.extractData);\n  }\n\n  getUsers() :Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/admin/users/get`, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as User[]);\n  }\n\n  updateUserDetails(userid: any, details: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/update`, {userid: userid, details:details}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  addLocalUser(username: any, details: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/newUser`, {username: username, details:details}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  genKey(userid: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/genKey`, {userid: userid}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  revokeKey(userid: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/revokeKey`, {userid: userid}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  updateUserProfile(details: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/user/update`, {details:details}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  genUserKey() {\n    return this.http.post(`${this.brandingAndPortalUrl}/user/genKey`, {},this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  revokeUserKey() {\n    return this.http.post(`${this.brandingAndPortalUrl}/user/revokeKey`, {},this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilityService.html":{"url":"injectables/UtilityService.html","title":"injectable - UtilityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UtilityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/util-service.ts\n        \n\n            \n                Description\n            \n            \n                Utility service...\nAuthor: Shilo Banihit\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                concatenate\n                            \n                            \n                                    Public\n                                getFirstofArray\n                            \n                            \n                                    Public\n                                getPropertyAsArrayFromObject\n                            \n                            \n                                    Public\n                                getPropertyFromObject\n                            \n                            \n                                    Public\n                                getPropertyFromObjectConcat\n                            \n                            \n                                    Public\n                                getPropertyFromObjectMapping\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                joinArray\n                            \n                            \n                                    Public\n                                runTemplate\n                            \n                            \n                                    Public\n                                splitArrayStringsToArray\n                            \n                            \n                                    Public\n                                splitStringToArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            concatenate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    concatenate(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:40\n                \n            \n\n\n            \n                \n                    returns concatenated string\nAuthor: Shilo Banihit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFirstofArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFirstofArray(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:189\n                \n            \n\n\n            \n                \n                    Splits a string of arrays into an array by it's delimiter\nAuthor: Moises Sacal Bonequi\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe delimiter\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPropertyAsArrayFromObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPropertyAsArrayFromObject(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:83\n                \n            \n\n\n            \n                \n                    returns a property as Array of 1 item from the provided object.\nAuthor: Matt Mulholland\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPropertyFromObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPropertyFromObject(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:71\n                \n            \n\n\n            \n                \n                    returns a property from the provided object.\nAuthor: Andrew Brazzatti\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPropertyFromObjectConcat\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPropertyFromObjectConcat(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:124\n                \n            \n\n\n            \n                \n                    returns an array of concatenated values\nAuthor: Shilo Banihit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndict of field: array of field paths to concat\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPropertyFromObjectMapping\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPropertyFromObjectMapping(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:95\n                \n            \n\n\n            \n                \n                    returns value based on mapping\nAuthor: Shilo Banihit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ndict of field: field path of data, mapping - array of dict with 'key', the value and the actual mapping value 'val', 'default' - the value if there's no match\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasValue\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasValue(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:112\n                \n            \n\n\n            \n                \n                    returns true if value is not null, undefined, empty\nAuthor: Shilo Banihit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            joinArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    joinArray(data: any, config: any, fieldName: string, fieldSeparator: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:199\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    fieldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    fieldSeparator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            runTemplate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    runTemplate(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            splitArrayStringsToArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitArrayStringsToArray(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:159\n                \n            \n\n\n            \n                \n                    Splits a string of arrays into an array by it's delimiter\nAuthor: Moises Sacal Bonequi\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe delimiter\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            splitStringToArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    splitStringToArray(data: any, config: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/util-service.ts:141\n                \n            \n\n\n            \n                \n                    Splits a string into an array by it's delimiter\nAuthor: Andrew Brazzatti\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    config\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nThe delimiter\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\nimport * as numeral from 'numeral';\n/**\n * Utility service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class UtilityService {\n\n  /**\n   * returns concatenated string\n   *\n   * Author: Shilo Banihit\n   * @param  {any} config\n   * @return {string}\n   */\n  public concatenate(data: any, config: any) {\n    let result: any = '';\n    _.each(config.fields, (f: any) => {\n      if (_.isArray(data)) {\n        result = [];\n        let itemResult = '';\n        _.each(data, (d: any) => {\n          const fldData = _.get(d, f);\n          // checking if field has data, otherwise will be skipping concat\n          if (fldData) {\n            itemResult = `${itemResult}${_.isEmpty(itemResult) ? '' : config.delim}${fldData}`;\n          }\n        });\n        result.push(itemResult);\n      } else {\n        const fldData = _.get(data, f);\n        if (fldData) {\n          result = `${result}${_.isEmpty(result) ? '' : config.delim}${fldData}`;\n        }\n      }\n    });\n    return result;\n  }\n\n  /**\n   * returns a property from the provided object.\n   *\n   * Author: Andrew Brazzatti\n   * @param  {any} config\n   * @return {string}\n   */\n  public getPropertyFromObject(data: any, config: any) {\n    const fieldPath = config.field;\n    return _.get(data, fieldPath);\n  }\n\n  /**\n   * returns a property as Array of 1 item from the provided object.\n   *\n   * Author: Matt Mulholland\n   * @param data\n   * @param config\n   */\n  public getPropertyAsArrayFromObject(data: any, config: any) {\n    return [this.getPropertyFromObject(data, config)];\n  }\n\n  /**\n   * returns value based on mapping\n   *\n   * Author: Shilo Banihit\n   * @param {any} data\n   * @param  {any} config - dict of field: field path of data, mapping - array of dict with 'key', the value and the actual mapping value 'val', 'default' - the value if there's no match\n   * @return {any}\n   */\n  public getPropertyFromObjectMapping(data: any, config: any) {\n    const fieldPath = config.field;\n    const val = _.isUndefined(fieldPath) ? data : _.get(data, fieldPath);\n    const foundMapping = _.find(config.mapping, (mapEntry) => {\n      return `${mapEntry.key}` == `${val}`;\n    });\n    return foundMapping ? foundMapping.value : config.default;\n  }\n\n  /**\n   * returns true if value is not null, undefined, empty\n   *\n   * Author: Shilo Banihit\n   * @param {any} data\n   * @param  {any} config\n   * @return {string}\n   */\n  public hasValue(data: any, config: any = null) {\n    return !_.isEmpty(data) && !_.isUndefined(data) && !_.isNull(data);\n  }\n\n  /**\n   * returns an array of concatenated values\n   *\n   * Author: Shilo Banihit\n   * @param {any} data\n   * @param  {any} config - dict of field: array of field paths to concat\n   * @return {string}\n   */\n  public getPropertyFromObjectConcat(data: any, config: any) {\n    let values = [];\n    _.each(config.field, (f) => {\n      values.push(_.get(data, f));\n    });\n    return _.concat([], ...values);\n  }\n\n\n  /**\n   * Splits a string into an array by it's delimiter\n   *\n   * Author: Andrew Brazzatti\n   * @param {any} data\n   * @param  {any} config - The delimiter\n   * @return {string}\n   */\n  public splitStringToArray(data: any, config: any) {\n    let delim = config.delim;\n    let field = config.field;\n    let value = data;\n    if (field) {\n      value = _.get(data, field);\n    }\n    return value.split(delim);\n  }\n\n  /**\n   * Splits a string of arrays into an array by it's delimiter\n   *\n   * Author: Moises Sacal Bonequi\n   * @param {any} data\n   * @param  {any} config - The delimiter\n   * @return {array}\n   */\n  public splitArrayStringsToArray(data: any, config: any) {\n    let regex = config.regex || ',';\n    let flags = config.flags || 'g';\n    const reg = new RegExp(regex, flags);\n    let regexTrail = config.regexTrail || '(^,)|(,$)';\n    let flagsTrail = config.flagsTrail || 'g';\n    const regTrail = new RegExp(regexTrail, flagsTrail);\n    let field = config.field;\n    let value = data;\n    if (field) {\n      value = _.get(data, field);\n    }\n    const values = [];\n    _.each(value, (v) => {\n      if (v) {\n        v = v.replace(regTrail, '');\n      }\n      values.push(v.split(reg).map(item => item.trim()));\n    });\n    return _.concat([], ...values);\n  }\n\n  /**\n   * Splits a string of arrays into an array by it's delimiter\n   *\n   * Author: Moises Sacal Bonequi\n   * @param {any} data\n   * @param  {any} config - The delimiter\n   * @return {array}\n   */\n  public getFirstofArray(data: any, config: any) {\n    let delim = config.delim;\n    let field = config.field;\n    let value = data;\n    if (field) {\n      value = _.get(data, field);\n    }\n    return _.first(value);\n  }\n\n  public joinArray(data: any, config: any, fieldName: string = null, fieldSeparator: string = null) {\n    return _.join(_.get(data, fieldName ? fieldName : config.field), fieldSeparator ? fieldSeparator : config.separator);\n  }\n\n  public runTemplate(data: any, config: any) {\n    const imports = _.extend({data: data, config: config, moment: moment, numeral:numeral}, this);\n    const templateData = {imports: imports};\n    const template = _.template(config.template, templateData);\n    return template();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspaceFieldComponent.html":{"url":"components/WorkspaceFieldComponent.html","title":"component - WorkspaceFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkspaceFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/workspace-field.component.ts\n\n\n    \n        Description\n    \n    \n        Base component for a Workspace field.\nAuthor: moisbo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ws-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                disabledElements\n                            \n                            \n                                disabledExpression\n                            \n                            \n                                fieldAnchor\n                            \n                            \n                                fieldElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDisabled\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                parentId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/workspace-field.component.ts:59\n                            \n                        \n\n                \n                    \n                            For DI'ing...\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                        ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:25\n                            \n                        \n                \n                    \n                        The model for this field.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:38\n                            \n                        \n                \n                    \n                        Field map\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:30\n                            \n                        \n                \n                    \n                        Form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:47\n                            \n                        \n                \n                    \n                        The parentId of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:34\n                            \n                        \n                \n                    \n                        The value of this field.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isDisabled\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isDisabled()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/workspace-field.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/workspace-field.component.ts:111\n                \n            \n\n\n            \n                \n                    Change handler, instantiates the field component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            disabledElements\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:59\n                            \n                        \n\n                \n                    \n                        Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledExpression\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldAnchor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:42\n                            \n                        \n\n                \n                    \n                        The DOM node for this field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldElement\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/form/workspace-field.component.ts:70\n                                \n                            \n                    \n                        \n                                If the form is valid.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Inject, ViewChild, ViewContainerRef, ComponentFactoryResolver, ComponentRef, ApplicationRef, ElementRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { FormControl, FormGroup, FormArray } from '@angular/forms';\nimport { SimpleComponent } from './field-simple.component';\nimport * as _ from \"lodash\";\nimport { WorkspaceTypeService } from '../workspace-service';\n\ndeclare var jQuery: any;\ndeclare var $: any;\n\n/**\n * Base component for a Workspace field.\n *\n * Author: moisbo\n *\n */\n@Component({\n  selector: 'ws-field',\n  template: ''\n})\nexport class WorkspaceFieldComponent {\n  /**\n   * The model for this field.\n   */\n  @Input() field: FieldBase;\n\n  /**\n   * Form group\n   */\n  @Input() form: FormGroup;\n  /**\n   * The value of this field.\n   */\n  @Input() value: any;\n  /**\n   * Field map\n   */\n  @Input() fieldMap: any;\n  /**\n   * The DOM node for this field.\n   */\n  @ViewChild('field', {read: ViewContainerRef}) fieldAnchor: ViewContainerRef;\n\n  /**\n   * The parentId of this field\n   */\n  @Input() parentId: string;\n\n  disabledExpression: string;\n\n  @ViewChild('field') fieldElement;\n\n\n\n\n  /**\n  * Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n  */\n  private disabledElements: any;\n\n  /**\n   * For DI'ing...\n   */\n  constructor(@Inject(ComponentFactoryResolver) private componentFactoryResolver: ComponentFactoryResolver, protected app: ApplicationRef){\n    this.disabledElements = [];\n  }\n  /**\n   * If the form is valid.\n   */\n  get isValid() {\n    if (this.form && this.form.controls) {\n      return this.form.controls[this.field.name].valid;\n    }\n    return false;\n  }\n\n  /**\n   *\n   */\n  public isDisabled() {\n\n    var disabledExpression = this.field.options['disabledExpression'];\n    if(disabledExpression != null) {\n\n      var imports = this.fieldAnchor;\n      var variables= {};\n      variables['imports'] = this.fieldMap._rootComp;\n      var compiled = _.template(disabledExpression, variables);\n      var parentElement = jQuery(this.fieldElement.nativeElement.parentElement);\n      if(compiled() == \"true\") {\n        //take note of which elements where already disabled as we dont want to enable them if whole component becomes enabled again\n        this.disabledElements = parentElement.find('*:disabled');\n        parentElement.find('input').prop( \"disabled\", true );\n        return 'disabled';\n      } else {\n        if(jQuery(this.fieldElement.nativeElement).prop('disabled') == 'disabled') {\n          //previously disabled so lets re-enable\n          parentElement.find('input').prop( \"disabled\", false );\n          _.each(this.disabledElements, disabledElement => disabledElement.prop(\"disabled\",true));\n        }\n        return null;\n      }\n\n    }\n    return null;\n  }\n\n  /**\n   * Change handler, instantiates the field component.\n   */\n  ngOnChanges() {\n    if (!this.field || !this.componentFactoryResolver) {\n      return;\n    }\n    this.fieldAnchor.clear();\n\n    let compFactory = this.componentFactoryResolver.resolveComponentFactory(this.field.compClass);\n    let fieldCompRef:ComponentRef = > this.fieldAnchor.createComponent(compFactory, undefined, this.app['_injector']);\n    fieldCompRef.instance.injector = this.app['_injector'];\n    fieldCompRef.instance.field = this.field;\n    fieldCompRef.instance.form = this.form;\n    fieldCompRef.instance.fieldMap = this.fieldMap;\n    fieldCompRef.instance.parentId = this.parentId;\n    this.fieldMap[this.field.name].instance = fieldCompRef.instance;\n  }\n}\n\nexport class WorkspaceSelectorField extends FieldBase  {\n  workspaceApps: any[] = [];\n  open: string;\n  saveFirst: string;\n  rdmp: string;\n  workspaceTypeService: WorkspaceTypeService;\n  workspaceApp: any;\n  appLink: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.workspaceTypeService = this.getFromInjector(WorkspaceTypeService);\n    this.open = this.getTranslated(options['open'], options['open']);\n    this.saveFirst = this.getTranslated(options['saveFirst'], options['saveFirst']);\n    this.rdmp = undefined;\n    // this.options = options['options'] || [];\n    this.workspaceApps = _.map(options['defaultSelection'] || [], (option) => {\n      option['label'] = this.getTranslated(option['label'], option['label']);\n      option['name'] = '';\n      return option;\n    });\n    this.appLink = this.workspaceTypeService.getBrand() + '/record/';\n    this.workspaceTypeService.getWorkspaceTypes().then(response => {\n      if(response['status']) {\n        //append results from database into workspaceApps\n        this.workspaceApps = _.concat(this.workspaceApps, response['workspaceTypes']);\n      } else {\n        throw new Error('cannot get workspaces');\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  init() {\n    this.rdmp = this.fieldMap._rootComp.oid || undefined;\n  }\n\n  registerEvents() {\n    this.fieldMap._rootComp.recordCreated.subscribe(this.setOid.bind(this));\n    this.fieldMap._rootComp.recordSaved.subscribe(this.setOid.bind(this));\n  }\n\n  setOid(o) {\n    this.rdmp = o.oid;\n  }\n\n\n  loadWorkspaceDetails(value: string) {\n    //GET me the value from the database\n    if(!value){\n      this.workspaceApp = null\n    }else {\n      this.workspaceApp = _.find(this.workspaceApps,\n        function(w) {\n          return w['name'] == value;\n        }\n      );\n    }\n  }\n\n  createFormModel() {\n    if (this.controlType == 'checkbox') {\n      const fgDef = [];\n\n      _.map(this.options, (opt:any)=>{\n        const hasValue = _.find(this.value, (val:any) => {\n          return val == opt.value;\n        });\n        if (hasValue) {\n          fgDef.push(new FormControl(opt.value));\n        }\n      });\n      // const fg = new FormArray(fgDef);\n      // return fg;\n      return new FormArray(fgDef);\n    } else {\n      // const model = super.createFormModel();\n      // console.log(`Created form model:`);\n      // console.log(model);\n      // return model;\n      return super.createFormModel();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkspaceFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkspaceListModule.html":{"url":"modules/WorkspaceListModule.html","title":"module - WorkspaceListModule","body":"\n                   \n\n\n\n\n    Modules\n    WorkspaceListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WorkspaceListModule\n\n\n\ncluster_WorkspaceListModule_declarations\n\n\n\ncluster_WorkspaceListModule_imports\n\n\n\ncluster_WorkspaceListModule_bootstrap\n\n\n\n\nWorkspaceListComponent\n\nWorkspaceListComponent\n\n\n\nWorkspaceListModule\n\nWorkspaceListModule\n\nWorkspaceListModule -->\n\nWorkspaceListComponent->WorkspaceListModule\n\n\n\n\n\nWorkspaceListComponent \n\nWorkspaceListComponent \n\nWorkspaceListComponent  -->\n\nWorkspaceListModule->WorkspaceListComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWorkspaceListModule -->\n\nSharedModule->WorkspaceListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/workspace_list/app/workspace_list.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Workspace List Module\nAuthor: Shilo Banihit\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            WorkspaceListComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            WorkspaceListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { WorkspaceListComponent }  from './workspace.component';\nimport { PaginationModule,TooltipModule } from 'ngx-bootstrap';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n/**\n * Workspace List Module\n *\n * Author: Shilo Banihit\n * @param  {[   BrowserModule}           {imports\n * @param  {[type]} HttpModule\n * @param  {[type]} ReactiveFormsModule\n * @param  {[type]} FormsModule\n * @param  {[type]} PaginationModule.forRoot(\n * @return {[type]}\n */\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, PaginationModule.forRoot(), TooltipModule.forRoot(), SharedModule ],\n  declarations: [ WorkspaceListComponent ],\n  providers:    [],\n  bootstrap:    [ WorkspaceListComponent ],\n  entryComponents: [ ]\n})\nexport class WorkspaceListModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspaceSelectorComponent.html":{"url":"components/WorkspaceSelectorComponent.html","title":"component - WorkspaceSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkspaceSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/workspace-selector.component.ts\n\n\n\n    \n        Extends\n    \n    \n                SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                workspace-selector-parent\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :         FieldBase\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:38\n\n                            \n                        \n                \n                    \n                        Field model\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:46\n\n                            \n                        \n                \n                    \n                        The field mapping\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:42\n\n                            \n                        \n                \n                    \n                        The form group\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:50\n\n                            \n                        \n                \n                    \n                        The index of this field\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:56\n\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:54\n\n                            \n                        \n                \n                    \n                        The name of this field\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLabel\n                        \n                        \n                    \n                \n            \n            \n                \ngetLabel(val: any)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/form/workspace-selector.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    val\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getFormControl\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormControl(name: string, ctrlIndex: number)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:81\n\n                \n            \n\n\n            \n                \n                    Return the NG2 FormControl or subclass thereof\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                                \n                                    ctrlIndex\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControl\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getFromInjector\n                        \n                        \n                    \n                \n            \n            \n                \ngetFromInjector(token: any)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:141\n\n                \n            \n\n\n            \n                \n                    Returns the NG2 root injector\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGroupClass\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGroupClass(fldName: string)\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:111\n\n                \n            \n\n\n            \n                \n                    Returns the CSS class\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    fldName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequiredLabelStr\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequiredLabelStr()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:133\n\n                \n            \n\n\n            \n                \n                    Returns label\n\n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasRequiredError\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasRequiredError()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:119\n\n                \n            \n\n\n            \n                \n                    If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            toggleHelp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleHelp()\n                \n            \n\n\n            \n                \n                    Inherited from         SimpleComponent\n\n                \n            \n            \n                \n                        Defined in         SimpleComponent:126\n\n                \n            \n\n\n            \n                \n                    Convenience method to toggle help mode.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'WorkspaceSelectorComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-selector.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:64\n\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:60\n\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:74\n\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in         SimpleComponent:69\n\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { WorkspaceSelectorField } from './workspace-field.component';\n\nimport * as _ from \"lodash\";\n@Component({\n  selector: 'workspace-selector-parent',\n  template: ''\n})\nexport class WorkspaceSelectorComponent extends SimpleComponent {\n  static clName = 'WorkspaceSelectorComponent';\n\n  getLabel(val: any): string {\n    const opt = _.find(this.field.options, (opt) => {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n}\n\n@Component({\n  selector: 'workspace-selector',\n  template: `\n  \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  \n    {{opt.label}}\n    \n  \n  \n  \n    \n      \n        {{ field.workspaceApp.name | uppercase }}\n      \n      \n        \n          \n            {{ field.workspaceApp.subtitle }}\n            \n              {{ field.workspaceApp.description }}\n              {{ field.open }}\n            \n            \n              \n                {{ field.saveFirst }}\n              \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n  `,\n})\nexport class WorkspaceSelectorFieldComponent extends WorkspaceSelectorComponent {\n  field: WorkspaceSelectorField\n  static clName = 'WorkspaceSelectorFieldComponent';\n\n  ngOnInit() {\n    this.field.init();\n    this.field.registerEvents();\n  }\n\n  saveAndOpenWorkspace(){\n    this.fieldMap._rootComp.onSubmit().subscribe(response => {\n      window.location.href = `${this.field.appLink}${this.field.workspaceApp.name}/edit?rdmp=${this.field.rdmp}`;\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationRefreshComponent', 'selector': 'publish-data-location-refresh'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordPermissionsComponent', 'selector': 'rb-recordpermissions'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkspaceSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceTypeService.html":{"url":"injectables/WorkspaceTypeService.html","title":"injectable - WorkspaceTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/workspace-service.ts\n        \n\n            \n                Description\n            \n            \n                Role related service\nAuthor: moisbo\n\n            \n\n            \n                Extends\n            \n            \n                        BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrand\n                            \n                            \n                                getWorkspaceType\n                            \n                            \n                                getWorkspaceTypes\n                            \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/workspace-service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                        ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getBrand\n                        \n                        \n                    \n                \n            \n            \n                \ngetBrand()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/workspace-service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkspaceType\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkspaceType(name: string)\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/workspace-service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWorkspaceTypes\n                        \n                        \n                    \n                \n            \n            \n                \ngetWorkspaceTypes()\n                \n            \n\n\n            \n                \n                    Defined in angular/shared/workspace-service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            emitInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    emitInit()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:74\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            extractData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    extractData(res: Response, parentField: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:84\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parentField\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        null\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfig()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getInitSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getInitSubject()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:70\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptions\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:93\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getOptionsClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptionsClient(headersObj: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:98\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    headersObj\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            waitForInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    waitForInit(handler: any)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseService\n\n                \n            \n            \n                \n                        Defined in         BaseService:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:40\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:37\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:38\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:35\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:36\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:34\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:41\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                            \n                                \n                                    Inherited from         BaseService\n\n                                \n                            \n                        \n                            \n                                    Defined in         BaseService:39\n\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { ConfigService } from './config-service';\n\n/**\n * Role related service\n *\n * Author: moisbo\n */\n@Injectable()\nexport class WorkspaceTypeService extends BaseService {\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getBrand() {\n    return this.brandingAndPortalUrl;\n  }\n\n  getWorkspaceTypes() : Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/workspaces/types`, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkspaceType(name: string) : Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/workspaces/types/` + name, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @sailshq/upgrade : ^1.0.9\n        \n            @uppy/core : ^0.29.0\n        \n            @uppy/dashboard : ^0.29.0\n        \n            @uppy/tus : ^0.29.0\n        \n            async : 2.6.3\n        \n            axios : ^0.19.0\n        \n            bcrypt : 3.0.6\n        \n            bootstrap-sass : ^3.3.7\n        \n            calcyte : ^1.0.2\n        \n            chokidar : ~3.1.1\n        \n            connect-mongo : 2.0.3\n        \n            core-js : ^3.0.1\n        \n            datacrate : ^1.0.4\n        \n            dotenv : ^7.0.0\n        \n            ejs : 2.6.1\n        \n            font-awesome-sass : 4.7.0\n        \n            fs-extra : ^7.0.0\n        \n            grunt-ts : ^6.0.0-beta.19\n        \n            har-validator : 5.1.3\n        \n            i18next : 17.0.14\n        \n            i18next-node-fs-backend : ^2.1.1\n        \n            include-all : ^4.0.3\n        \n            leaflet : ^1.3.1\n        \n            leaflet-draw : ^1.0.2\n        \n            lodash : ^4.17.5\n        \n            lodash-es : ^4.17.5\n        \n            lucene-escape-query : ^1.0.1\n        \n            moment : ^2.20.1\n        \n            moment-es6 : github:shilob/moment-es6\n        \n            ng2-completer : 2.0.8\n        \n            ng2-datetime : ^1.3.2\n        \n            ngx-bootstrap : ^4.0.0\n        \n            node-cache : ^4.1.1\n        \n            node-schedule : ^1.3.0\n        \n            numeral : ^2.0.6\n        \n            passport : ^0.4.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            passport-jwt : github:itayadler/passport-jwt\n        \n            passport-local : ^1.0.0\n        \n            passport-openidconnect : 0.0.2\n        \n            rc : 1.2.8\n        \n            redbox2ckan : github:redbox-mint-contrib/redbox2ckan#dev_build\n        \n            redux : 4.0.1\n        \n            request-promise : ^4.2.0\n        \n            rxjs : 6.5.3\n        \n            rxjs-compat : 6.5.3\n        \n            sails : 1.1.0\n        \n            sails-hook-autoreload : ^1.1.0\n        \n            sails-hook-grunt : ^3.1.0\n        \n            sails-hook-orm : ^2.0.0\n        \n            sails-hook-sockets : ^1.5.2\n        \n            sails-mongo : ^1.0.0\n        \n            skipper-gridfs : https://github.com/marcelomedina10/skipper-gridfs.git\n        \n            systemjs : 6.0.0\n        \n            ts-node : ^8.0.1\n        \n            ts-smart-logger : 0.1.0\n        \n            tus-node-server : ^0.3.2\n        \n            typescript : 2.9\n        \n            typescript-require : ~0.2.9-1\n        \n            url-pattern : ^1.0.3\n        \n            zone.js : ^0.9.0\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            matchingValuesValidator   (angular/.../forms.ts)\n                        \n                        \n                            matchingValuesValidator   (angular/.../forms.ts)\n                        \n                        \n                            optionalEmailValidator   (angular/.../forms.ts)\n                        \n                        \n                            optionalEmailValidator   (angular/.../forms.ts)\n                        \n                        \n                            passwordStrengthValidator   (angular/.../forms.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    angular/manageUsers/app/forms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            matchingValuesValidator\n                        \n                        \n                    \n                \n            \n            \n                \nmatchingValuesValidator(control1, control2)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    control2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionalEmailValidator\n                        \n                        \n                    \n                \n            \n            \n                \noptionalEmailValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            passwordStrengthValidator\n                        \n                        \n                    \n                \n            \n            \n                \npasswordStrengthValidator(control1)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    angular/userProfile/app/forms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            matchingValuesValidator\n                        \n                        \n                    \n                \n            \n            \n                \nmatchingValuesValidator(control1, control2)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    control2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            optionalEmailValidator\n                        \n                        \n                    \n                \n            \n            \n                \noptionalEmailValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\nReDBox is an open source Research Data Management platform that assists researchers and institutions to plan, create and publish their research data assets.\nReDBox is one of the most popular research data management tools in Australia. It is currently in use across 12 Australian universities. ReDBox supports the Australian research community to describe and share information about research data collections. It assists data custodians in meeting institutional data management policies, applying the requirements of the Australian Code for the Responsible Conduct of Research, and publishing to Research Data Australia (RDA), the national research data discovery system maintained by the Australian Research Data Commons (ARDC).\nThe Queensland Cyber Infrastructure Foundation (QCIF) leads the ReDBox development initiative and provides several services including a support subscription service to institutions.\nDevelopment\nRequirements:\n\nNode 8.11.0\n\nDevelopment requires Docker. Run ./runForDev.sh install jit at least once.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n{one line to give the program's name and a brief idea of what it does.}\nCopyright (C) {year}  {name of author}\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n{project}  Copyright (C) {year}  {fullname}\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' andshow c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttp://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttp://www.gnu.org/philosophy/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DmpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocalAuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManageRolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManageUsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecordSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransferOwnerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkspaceListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_bootstrap\n\n\n\ncluster_DmpModule\n\n\n\ncluster_DmpModule_declarations\n\n\n\ncluster_DmpModule_DmpFormComponent_providers\n\n\n\ncluster_DmpModule_bootstrap\n\n\n\ncluster_ExportModule\n\n\n\ncluster_ExportModule_declarations\n\n\n\ncluster_ExportModule_bootstrap\n\n\n\ncluster_LocalAuthModule\n\n\n\ncluster_LocalAuthModule_declarations\n\n\n\ncluster_LocalAuthModule_bootstrap\n\n\n\ncluster_ManageRolesModule\n\n\n\ncluster_ManageRolesModule_declarations\n\n\n\ncluster_ManageRolesModule_bootstrap\n\n\n\ncluster_ManageUsersModule\n\n\n\ncluster_ManageUsersModule_declarations\n\n\n\ncluster_ManageUsersModule_bootstrap\n\n\n\ncluster_RecordSearchModule\n\n\n\ncluster_RecordSearchModule_declarations\n\n\n\ncluster_RecordSearchModule_bootstrap\n\n\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_declarations\n\n\n\ncluster_ReportModule_bootstrap\n\n\n\ncluster_ReportModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_TransferOwnerModule\n\n\n\ncluster_TransferOwnerModule_declarations\n\n\n\ncluster_TransferOwnerModule_bootstrap\n\n\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_declarations\n\n\n\ncluster_UserProfileModule_bootstrap\n\n\n\ncluster_WorkspaceListModule\n\n\n\ncluster_WorkspaceListModule_declarations\n\n\n\ncluster_WorkspaceListModule_bootstrap\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSortComponent\n\nSortComponent\n\nDashboardModule -->\n\nSortComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nDmpModule\n\nDmpModule\n\nDmpModule -->\n\nSharedModule->DmpModule\n\n\n\n\n\nExportModule\n\nExportModule\n\nExportModule -->\n\nSharedModule->ExportModule\n\n\n\n\n\nLocalAuthModule\n\nLocalAuthModule\n\nLocalAuthModule -->\n\nSharedModule->LocalAuthModule\n\n\n\n\n\nManageRolesModule\n\nManageRolesModule\n\nManageRolesModule -->\n\nSharedModule->ManageRolesModule\n\n\n\n\n\nManageUsersModule\n\nManageUsersModule\n\nManageUsersModule -->\n\nSharedModule->ManageUsersModule\n\n\n\n\n\nRecordSearchModule\n\nRecordSearchModule\n\nRecordSearchModule -->\n\nSharedModule->RecordSearchModule\n\n\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nSharedModule->ReportModule\n\n\n\n\n\nANDSVocabComponent \n\nANDSVocabComponent \n\nANDSVocabComponent  -->\n\nSharedModule->ANDSVocabComponent \n\n\n\n\n\nActionButtonComponent \n\nActionButtonComponent \n\nActionButtonComponent  -->\n\nSharedModule->ActionButtonComponent \n\n\n\n\n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent  -->\n\nSharedModule->AnchorOrButtonComponent \n\n\n\n\n\nAsynchComponent \n\nAsynchComponent \n\nAsynchComponent  -->\n\nSharedModule->AsynchComponent \n\n\n\n\n\nButtonBarContainerComponent \n\nButtonBarContainerComponent \n\nButtonBarContainerComponent  -->\n\nSharedModule->ButtonBarContainerComponent \n\n\n\n\n\nContributorComponent \n\nContributorComponent \n\nContributorComponent  -->\n\nSharedModule->ContributorComponent \n\n\n\n\n\nDataLocationComponent \n\nDataLocationComponent \n\nDataLocationComponent  -->\n\nSharedModule->DataLocationComponent \n\n\n\n\n\nDateTimeComponent \n\nDateTimeComponent \n\nDateTimeComponent  -->\n\nSharedModule->DateTimeComponent \n\n\n\n\n\nDmpFieldComponent \n\nDmpFieldComponent \n\nDmpFieldComponent  -->\n\nSharedModule->DmpFieldComponent \n\n\n\n\n\nDropdownFieldComponent \n\nDropdownFieldComponent \n\nDropdownFieldComponent  -->\n\nSharedModule->DropdownFieldComponent \n\n\n\n\n\nGenericGroupComponent \n\nGenericGroupComponent \n\nGenericGroupComponent  -->\n\nSharedModule->GenericGroupComponent \n\n\n\n\n\nHiddenValueComponent \n\nHiddenValueComponent \n\nHiddenValueComponent  -->\n\nSharedModule->HiddenValueComponent \n\n\n\n\n\nHtmlRawComponent \n\nHtmlRawComponent \n\nHtmlRawComponent  -->\n\nSharedModule->HtmlRawComponent \n\n\n\n\n\nLinkValueComponent \n\nLinkValueComponent \n\nLinkValueComponent  -->\n\nSharedModule->LinkValueComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nSharedModule->MapComponent \n\n\n\n\n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent  -->\n\nSharedModule->MarkdownTextAreaComponent \n\n\n\n\n\nPDFListComponent \n\nPDFListComponent \n\nPDFListComponent  -->\n\nSharedModule->PDFListComponent \n\n\n\n\n\nParameterRetrieverComponent \n\nParameterRetrieverComponent \n\nParameterRetrieverComponent  -->\n\nSharedModule->ParameterRetrieverComponent \n\n\n\n\n\nPublishDataLocationRefreshComponent \n\nPublishDataLocationRefreshComponent \n\nPublishDataLocationRefreshComponent  -->\n\nSharedModule->PublishDataLocationRefreshComponent \n\n\n\n\n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent  -->\n\nSharedModule->PublishDataLocationSelectorComponent \n\n\n\n\n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent  -->\n\nSharedModule->RecordMetadataRetrieverComponent \n\n\n\n\n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent  -->\n\nSharedModule->RelatedObjectSelectorComponent \n\n\n\n\n\nRepeatableContributorComponent \n\nRepeatableContributorComponent \n\nRepeatableContributorComponent  -->\n\nSharedModule->RepeatableContributorComponent \n\n\n\n\n\nRepeatableGroupComponent \n\nRepeatableGroupComponent \n\nRepeatableGroupComponent  -->\n\nSharedModule->RepeatableGroupComponent \n\n\n\n\n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent  -->\n\nSharedModule->RepeatableTextfieldComponent \n\n\n\n\n\nRepeatableVocabComponent \n\nRepeatableVocabComponent \n\nRepeatableVocabComponent  -->\n\nSharedModule->RepeatableVocabComponent \n\n\n\n\n\nSelectionFieldComponent \n\nSelectionFieldComponent \n\nSelectionFieldComponent  -->\n\nSharedModule->SelectionFieldComponent \n\n\n\n\n\nSpacerComponent \n\nSpacerComponent \n\nSpacerComponent  -->\n\nSharedModule->SpacerComponent \n\n\n\n\n\nStringTemplatePipe \n\nStringTemplatePipe \n\nStringTemplatePipe  -->\n\nSharedModule->StringTemplatePipe \n\n\n\n\n\nTabNavButtonComponent \n\nTabNavButtonComponent \n\nTabNavButtonComponent  -->\n\nSharedModule->TabNavButtonComponent \n\n\n\n\n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent  -->\n\nSharedModule->TabOrAccordionContainerComponent \n\n\n\n\n\nTextAreaComponent \n\nTextAreaComponent \n\nTextAreaComponent  -->\n\nSharedModule->TextAreaComponent \n\n\n\n\n\nTextBlockComponent \n\nTextBlockComponent \n\nTextBlockComponent  -->\n\nSharedModule->TextBlockComponent \n\n\n\n\n\nTextFieldComponent \n\nTextFieldComponent \n\nTextFieldComponent  -->\n\nSharedModule->TextFieldComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedModule->ToggleComponent \n\n\n\n\n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent  -->\n\nSharedModule->TreeNodeCheckboxComponent \n\n\n\n\n\nVocabFieldComponent \n\nVocabFieldComponent \n\nVocabFieldComponent  -->\n\nSharedModule->VocabFieldComponent \n\n\n\n\n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent  -->\n\nSharedModule->WorkflowStepButtonComponent \n\n\n\n\n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent  -->\n\nSharedModule->WorkspaceFieldComponent \n\n\n\n\n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent  -->\n\nSharedModule->WorkspaceSelectorComponent \n\n\n\n\n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent  -->\n\nSharedModule->WorkspaceSelectorFieldComponent \n\n\n\n\n\nTransferOwnerModule\n\nTransferOwnerModule\n\nTransferOwnerModule -->\n\nSharedModule->TransferOwnerModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nSharedModule->UserProfileModule\n\n\n\n\n\nWorkspaceListModule\n\nWorkspaceListModule\n\nWorkspaceListModule -->\n\nSharedModule->WorkspaceListModule\n\n\n\n\n\nDmpFormComponent\n\nDmpFormComponent\n\nDmpModule -->\n\nDmpFormComponent->DmpModule\n\n\n\n\n\nDmpFormComponent \n\nDmpFormComponent \n\nDmpFormComponent  -->\n\nDmpModule->DmpFormComponent \n\n\n\n\n\nLocation\n\nLocation\n\nDmpFormComponent -->\n\nLocation->DmpFormComponent\n\n\n\n\n\nExportFormComponent\n\nExportFormComponent\n\nExportFormComponent -->\n\nLocation->ExportFormComponent\n\n\n\n\n\nRecordSearchComponent\n\nRecordSearchComponent\n\nRecordSearchComponent -->\n\nLocation->RecordSearchComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nDmpFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->DmpFormComponent\n\n\n\nExportFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->ExportFormComponent\n\n\n\nRecordSearchComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->RecordSearchComponent\n\n\n\nExportModule -->\n\nExportFormComponent->ExportModule\n\n\n\n\n\nExportFormComponent \n\nExportFormComponent \n\nExportFormComponent  -->\n\nExportModule->ExportFormComponent \n\n\n\n\n\nLocalAuthComponent\n\nLocalAuthComponent\n\nLocalAuthModule -->\n\nLocalAuthComponent->LocalAuthModule\n\n\n\n\n\nLocalAuthComponent \n\nLocalAuthComponent \n\nLocalAuthComponent  -->\n\nLocalAuthModule->LocalAuthComponent \n\n\n\n\n\nManageRolesComponent\n\nManageRolesComponent\n\nManageRolesModule -->\n\nManageRolesComponent->ManageRolesModule\n\n\n\n\n\nManageRolesComponent \n\nManageRolesComponent \n\nManageRolesComponent  -->\n\nManageRolesModule->ManageRolesComponent \n\n\n\n\n\nManageUsersComponent\n\nManageUsersComponent\n\nManageUsersModule -->\n\nManageUsersComponent->ManageUsersModule\n\n\n\n\n\nManageUsersComponent \n\nManageUsersComponent \n\nManageUsersComponent  -->\n\nManageUsersModule->ManageUsersComponent \n\n\n\nRecordSearchModule -->\n\nRecordSearchComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchRefinerComponent\n\nRecordSearchRefinerComponent\n\nRecordSearchModule -->\n\nRecordSearchRefinerComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchComponent \n\nRecordSearchComponent \n\nRecordSearchComponent  -->\n\nRecordSearchModule->RecordSearchComponent \n\n\n\n\n\nMultivalueFieldPipe\n\nMultivalueFieldPipe\n\nReportModule -->\n\nMultivalueFieldPipe->ReportModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nReportModule -->\n\nReportComponent->ReportModule\n\n\n\n\n\nReportComponent \n\nReportComponent \n\nReportComponent  -->\n\nReportModule->ReportComponent \n\n\n\n\n\nReportService\n\nReportService\n\nReportModule -->\n\nReportService->ReportModule\n\n\n\n\n\nANDSVocabComponent\n\nANDSVocabComponent\n\nSharedModule -->\n\nANDSVocabComponent->SharedModule\n\n\n\n\n\nActionButtonComponent\n\nActionButtonComponent\n\nSharedModule -->\n\nActionButtonComponent->SharedModule\n\n\n\n\n\nAnchorOrButtonComponent\n\nAnchorOrButtonComponent\n\nSharedModule -->\n\nAnchorOrButtonComponent->SharedModule\n\n\n\n\n\nAsynchComponent\n\nAsynchComponent\n\nSharedModule -->\n\nAsynchComponent->SharedModule\n\n\n\n\n\nButtonBarContainerComponent\n\nButtonBarContainerComponent\n\nSharedModule -->\n\nButtonBarContainerComponent->SharedModule\n\n\n\n\n\nCancelButtonComponent\n\nCancelButtonComponent\n\nSharedModule -->\n\nCancelButtonComponent->SharedModule\n\n\n\n\n\nContributorComponent\n\nContributorComponent\n\nSharedModule -->\n\nContributorComponent->SharedModule\n\n\n\n\n\nDataLocationComponent\n\nDataLocationComponent\n\nSharedModule -->\n\nDataLocationComponent->SharedModule\n\n\n\n\n\nDateTimeComponent\n\nDateTimeComponent\n\nSharedModule -->\n\nDateTimeComponent->SharedModule\n\n\n\n\n\nDmpFieldComponent\n\nDmpFieldComponent\n\nSharedModule -->\n\nDmpFieldComponent->SharedModule\n\n\n\n\n\nDropdownFieldComponent\n\nDropdownFieldComponent\n\nSharedModule -->\n\nDropdownFieldComponent->SharedModule\n\n\n\n\n\nGenericGroupComponent\n\nGenericGroupComponent\n\nSharedModule -->\n\nGenericGroupComponent->SharedModule\n\n\n\n\n\nHiddenValueComponent\n\nHiddenValueComponent\n\nSharedModule -->\n\nHiddenValueComponent->SharedModule\n\n\n\n\n\nHtmlRawComponent\n\nHtmlRawComponent\n\nSharedModule -->\n\nHtmlRawComponent->SharedModule\n\n\n\n\n\nLinkValueComponent\n\nLinkValueComponent\n\nSharedModule -->\n\nLinkValueComponent->SharedModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nSharedModule -->\n\nMapComponent->SharedModule\n\n\n\n\n\nMarkdownTextAreaComponent\n\nMarkdownTextAreaComponent\n\nSharedModule -->\n\nMarkdownTextAreaComponent->SharedModule\n\n\n\n\n\nPDFListComponent\n\nPDFListComponent\n\nSharedModule -->\n\nPDFListComponent->SharedModule\n\n\n\n\n\nParameterRetrieverComponent\n\nParameterRetrieverComponent\n\nSharedModule -->\n\nParameterRetrieverComponent->SharedModule\n\n\n\n\n\nPublishDataLocationRefreshComponent\n\nPublishDataLocationRefreshComponent\n\nSharedModule -->\n\nPublishDataLocationRefreshComponent->SharedModule\n\n\n\n\n\nPublishDataLocationSelectorComponent\n\nPublishDataLocationSelectorComponent\n\nSharedModule -->\n\nPublishDataLocationSelectorComponent->SharedModule\n\n\n\n\n\nRecordMetadataRetrieverComponent\n\nRecordMetadataRetrieverComponent\n\nSharedModule -->\n\nRecordMetadataRetrieverComponent->SharedModule\n\n\n\n\n\nRecordPermissionsComponent\n\nRecordPermissionsComponent\n\nSharedModule -->\n\nRecordPermissionsComponent->SharedModule\n\n\n\n\n\nRelatedObjectDataComponent\n\nRelatedObjectDataComponent\n\nSharedModule -->\n\nRelatedObjectDataComponent->SharedModule\n\n\n\n\n\nRelatedObjectSelectorComponent\n\nRelatedObjectSelectorComponent\n\nSharedModule -->\n\nRelatedObjectSelectorComponent->SharedModule\n\n\n\n\n\nRepeatableContributorComponent\n\nRepeatableContributorComponent\n\nSharedModule -->\n\nRepeatableContributorComponent->SharedModule\n\n\n\n\n\nRepeatableGroupComponent\n\nRepeatableGroupComponent\n\nSharedModule -->\n\nRepeatableGroupComponent->SharedModule\n\n\n\n\n\nRepeatableTextfieldComponent\n\nRepeatableTextfieldComponent\n\nSharedModule -->\n\nRepeatableTextfieldComponent->SharedModule\n\n\n\n\n\nRepeatableVocabComponent\n\nRepeatableVocabComponent\n\nSharedModule -->\n\nRepeatableVocabComponent->SharedModule\n\n\n\n\n\nSaveButtonComponent\n\nSaveButtonComponent\n\nSharedModule -->\n\nSaveButtonComponent->SharedModule\n\n\n\n\n\nSelectionFieldComponent\n\nSelectionFieldComponent\n\nSharedModule -->\n\nSelectionFieldComponent->SharedModule\n\n\n\n\n\nSpacerComponent\n\nSpacerComponent\n\nSharedModule -->\n\nSpacerComponent->SharedModule\n\n\n\n\n\nStringTemplatePipe\n\nStringTemplatePipe\n\nSharedModule -->\n\nStringTemplatePipe->SharedModule\n\n\n\n\n\nTabNavButtonComponent\n\nTabNavButtonComponent\n\nSharedModule -->\n\nTabNavButtonComponent->SharedModule\n\n\n\n\n\nTabOrAccordionContainerComponent\n\nTabOrAccordionContainerComponent\n\nSharedModule -->\n\nTabOrAccordionContainerComponent->SharedModule\n\n\n\n\n\nTextAreaComponent\n\nTextAreaComponent\n\nSharedModule -->\n\nTextAreaComponent->SharedModule\n\n\n\n\n\nTextBlockComponent\n\nTextBlockComponent\n\nSharedModule -->\n\nTextBlockComponent->SharedModule\n\n\n\n\n\nTextFieldComponent\n\nTextFieldComponent\n\nSharedModule -->\n\nTextFieldComponent->SharedModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedModule -->\n\nToggleComponent->SharedModule\n\n\n\n\n\nTreeNodeCheckboxComponent\n\nTreeNodeCheckboxComponent\n\nSharedModule -->\n\nTreeNodeCheckboxComponent->SharedModule\n\n\n\n\n\nVocabFieldComponent\n\nVocabFieldComponent\n\nSharedModule -->\n\nVocabFieldComponent->SharedModule\n\n\n\n\n\nWorkflowStepButtonComponent\n\nWorkflowStepButtonComponent\n\nSharedModule -->\n\nWorkflowStepButtonComponent->SharedModule\n\n\n\n\n\nWorkspaceFieldComponent\n\nWorkspaceFieldComponent\n\nSharedModule -->\n\nWorkspaceFieldComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorComponent\n\nWorkspaceSelectorComponent\n\nSharedModule -->\n\nWorkspaceSelectorComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorFieldComponent\n\nWorkspaceSelectorFieldComponent\n\nSharedModule -->\n\nWorkspaceSelectorFieldComponent->SharedModule\n\n\n\n\n\nANDSService\n\nANDSService\n\nSharedModule -->\n\nANDSService->SharedModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nSharedModule -->\n\nConfigService->SharedModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nSharedModule -->\n\nDashboardService->SharedModule\n\n\n\n\n\nEmailNotificationService\n\nEmailNotificationService\n\nSharedModule -->\n\nEmailNotificationService->SharedModule\n\n\n\n\n\nFieldControlMetaService\n\nFieldControlMetaService\n\nSharedModule -->\n\nFieldControlMetaService->SharedModule\n\n\n\n\n\nFieldControlService\n\nFieldControlService\n\nSharedModule -->\n\nFieldControlService->SharedModule\n\n\n\n\n\nRecordsService\n\nRecordsService\n\nSharedModule -->\n\nRecordsService->SharedModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSharedModule -->\n\nRolesService->SharedModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nSharedModule -->\n\nTranslationService->SharedModule\n\n\n\n\n\nUserSimpleService\n\nUserSimpleService\n\nSharedModule -->\n\nUserSimpleService->SharedModule\n\n\n\n\n\nUtilityService\n\nUtilityService\n\nSharedModule -->\n\nUtilityService->SharedModule\n\n\n\n\n\nVocabFieldLookupService\n\nVocabFieldLookupService\n\nSharedModule -->\n\nVocabFieldLookupService->SharedModule\n\n\n\n\n\nWorkspaceTypeService\n\nWorkspaceTypeService\n\nSharedModule -->\n\nWorkspaceTypeService->SharedModule\n\n\n\n\n\nTransferOwnerComponent\n\nTransferOwnerComponent\n\nTransferOwnerModule -->\n\nTransferOwnerComponent->TransferOwnerModule\n\n\n\n\n\nTransferOwnerComponent \n\nTransferOwnerComponent \n\nTransferOwnerComponent  -->\n\nTransferOwnerModule->TransferOwnerComponent \n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nUserProfileModule -->\n\nUserProfileComponent->UserProfileModule\n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nUserProfileModule->UserProfileComponent \n\n\n\n\n\nWorkspaceListComponent\n\nWorkspaceListComponent\n\nWorkspaceListModule -->\n\nWorkspaceListComponent->WorkspaceListModule\n\n\n\n\n\nWorkspaceListComponent \n\nWorkspaceListComponent \n\nWorkspaceListComponent  -->\n\nWorkspaceListModule->WorkspaceListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    57 Components\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    61 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/installation-guide.html":{"url":"additional-documentation/installation-guide.html","title":"additional-page - Installation guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation Guide\nService Dependencies\nThe following dependencies will need to be installed on the OS:\n* NodeJS environment version 6.x\n* MongoDB\n* A reverse proxy server such as Nginx or Apache HTTP Server\n* Git\nNode dependencies\nOnce you have a NodeJS environment installed install the following dependencies globally using the npm install -g  command:\n* yarn\n* pm2\nInstall the ReDBox Portal\n\nCheckou the ReDBox Portal to your location of choice (e.g. /opt/redbox-portal)\n\ngit clone -b dev_build \"https://github.com/redbox-mint/redbox-portal\"\n\nCreate a ecosytem.json file for PM2 as below. See the configuration guide guide for information on how to configure the env section.\n{\n\"apps\" : [{\n // Application #1\n \"name\"        : \"rbportal\",\n \"script\"      : \"app.js\",\n \"args\"        : [],\n \"watch\"       : true,\n \"node_args\"   : \"\",\n \"merge_logs\"  : true,\n \"cwd\"         : \"/opt/redbox-portal/\",\n \"env\": {\n   \"NODE_ENV\": \"development\",\n   \"redboxApiKey\": \"\"\n }\n}\n]\n}\n\nCopy your configuration changes over the installation. See the configuration guide\n\nSetup PM2 run on init (depending on your distro) e.g pm2 startup systemd\n\nStart the application\npm2 start ecosystem.json\n\nSave the PM2 configuration\npm2 save\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide.html":{"url":"additional-documentation/configuration-guide.html","title":"additional-page - Configuration guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguration and Customisation Guide\nManaging your customisations\nMuch like in ReDBox 1.8+, it is recommended that you keep your configuration changes in it's own repository and overlay them as part of the deployment process.\nSee the sample customisation repository for an example.\nManaging portal configuration\nThe ReDBox Portal is built on the SailsJS framework and therefore takes advantage of the highly extensible configration framework provided.\nPlease see the SailsJS documentation for more information on it's structure and configuration options.\nThere are several configuration items that are specific to the ReDBox Portal:\n1. record.js manages configuration around record management and the portal's interaction with the ReDBox and Mint services\n2. auth.js manages configuration around authorisation and authentication.\n3. emailnotification.js manages configuration of email notifications\n4. form.js manages form configuration\nEnvironment variables\nIt is possible to use environment variables to modify configuration, this is particularly useful when running the portal in a containerised environment such as docker. Please see Sails configuration document for more information\nEnvironment specific files\nYou may override standard configuration item for a particular environment (e.g development, test and production) by creating or modifying the a environment specif config file in the location config/env/.js. You can specify the environment by setting the NODE_ENV environment variable.\nPlease see the Sails configuration documentation for more information.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-web-forms.html":{"url":"additional-documentation/configuration-guide/configuring-web-forms.html","title":"additional-page - Configuring web forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring web forms\nIntroduction\nReDBox has a flexible and configurable framework that allows you to capture as metadata for a variety different purposes such as data management plans, provisioned workspaces and data collections. Metadata is stored in the JSON-LD format and has a very loose schema to support this flexibility.\nFor each type of metadata record stored, it is also possible to configure a workflow that the record may pass through to map to the business processes within your organisation.\nThere is also a configurable form system that allows you to design a form to meet your needs without having the need to understand code. It is possible to attach different form structures to each workflow stage to suit the requirements for the user of the form.\nRecord Type Configuration\nRecord Types are configured in the config/recordtype.js file.\nThe record type configuration defines the record type (e.g. a research data managment plan record) and what fields in the record should be displayed on the search interface for the purposes of filtering and faceting.\nRecord's are configured via the config/workflow.js file and specifies the workflow stages a record can transition through and the roles that are permitted to view and edit a record for each workflow stage.\n\n|\n|- search-filters []\n    |- name\n    |- title\n    |- type\n    |- typeLabel\nWhere <> are property labels that are variables.\n| Field            | Description                                                                                                                                                                              | Required | Example        |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------------|\n|     | The label of record type | Yes      | rdmp           |\n| name  | The name of the Solr index field to facet on. For facet type fields, this is usually the name you've configured in your form configuration. To allow for inexact matching for filter search boxes, append text_ to the beginning of the name | Yes      | text_title         |\n| title  | The heading label to display in the facets section. Can read text from the language file | Yes      | search-refine-description           |\n| type  | The type of facet. Fixed for search box filters, facet for facet counts | Yes      | facet           |\n| typeLabel  | The label to show above the search box filter. Can read text from the language file. Set to null for facet count fields | Yes      | search-refine-contains           |\nExample\n\"rdmp\": {\n  searchFilters: [\n    {\n      name: \"text_title\",\n      title: \"search-refine-title\",\n      type: \"exact\",\n      typeLabel: \"search-refine-contains\"\n    },\n    {\n      name: \"text_description\",\n      title: \"search-refine-description\",\n      type: \"exact\",\n      typeLabel: \"Can read text from the language file\"\n    },\n    {\n      name: \"grant_number_name\",\n      title: \"search-refine-grant_number_name\",\n      type: \"facet\",\n      typeLabel: null,\n      alwaysActive: true\n    },\n    {\n      name: \"finalKeywords\",\n      title: \"search-refine-keywords\",\n      type: \"facet\",\n      typeLabel: null,\n      alwaysActive: true\n    },\n    {\n      name: \"workflow_stageLabel\",\n      title: \"search-refine-workflow_stageLabel\",\n      type: \"facet\",\n      typeLabel: null,\n      alwaysActive: true\n    }\n  ]\n}\nWorkflow Configuration\nThe structure of the configuration is as follows\n\n|\n|- \n    |\n    |- config\n        |\n        |- workflow\n            |\n            |- stage\n            |- stageLabel\n            |- next\n        |- authorization\n            |\n            |- viewRoles\n            |- editRoles\n        |- form\n    |- starting\nWhere <> are property labels that are variables.\n| Field            | Description                                                                                                                                                                              | Required | Example        |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------------|\n|     | The label of record type                                                                                                                                                                 | Yes      | rdmp           |\n|  | The label of the workflow stage for the record type                                                                                                                                      | Yes      | draft          |\n| stage            | The code value for the stage. This value is stored in the metadata record within ReDBox. Best practice would be to match it with  but it can be different if necessary.  | Yes      | draft          |\n| stageLabel       | The label for the stage that is presented to users on the interface.                                                                                                                     | Yes      | Draft          |\n| next             | The stage to transition to.                                                                                                                                                | No       | review         |\n| viewRoles        | An array of roles that are allowed to view this record type at this stage                                                                                                                | Yes      | ['Admin']      |\n| editRoles        | An array of roles that are allowed to edit this record type at this stage                                                                                                                | Yes      | ['Admin']      |\n| form             | The form code. This should match an entry in the form.js configuration file                                                                                                              | Yes      | rdmp-1.0-draft |\n| starting         | Is this the stage that new records should commence in?                                                                                                                                   | No       | true           |\nExample\n\"rdmp\": {\n    \"draft\": {\n      config: {\n        workflow: {\n          stage: 'draft',\n          stageLabel: 'Draft',\n          next: 'review',\n        },\n        authorization: {\n          viewRoles: ['Admin'],\n          editRoles: ['Admin']\n        },\n        form: 'rdmp-1.0-draft'\n      },\n      starting: true\n    },\nForm/view configuration\nThe form and view layout is configured via config/form.js file.\nThe structure of the configuration file is as follows\n```\ndefaultForm\n|\n|- forms\n    |\n    |- \n        |\n        |- name\n        |- type\n        |- skipValidationOnSave\n        |- editCssClasses\n        |- viewCssClasses\n        |- messages\n            |\n            |- \n        |\n        |- fields []\n            |\n            |- class\n            |- compClass\n            |- viewOnly\n            |- definition\n                |\n                |- \n```\nForm-wide configuration\nThe settings in this section control the behaviour of the entire form.\n| Field                | Description                                                                                                                                                                                                                                                                                                | Required               | Example                              |\n|----------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------|--------------------------------------|\n|         | The label name of the form, should match a \"form\" value in workflow.js for it to be used                                                                                                                                                                                                                   | Yes                    | rdmp-1.0-draft                       |\n| name                 |        The label name of the form. This should match the  value. form                                                                                                                                                                                                                                                                                                   | Yes                    | rdmp-1.0-draft                       |\n| skipValidationOnSave | When set to true, validation will only trigger when the record is submitted to change it's workflow state. This property is particularly useful in early stages of a workflow where you want the user to be able to save and come back to the record later without having to fill in all mandatory fields. | No (defaults to false) | true                                 |\n| editCssClasses       | The css classes to apply to each element for styling. These are used in edit mode                                                                                                                                                                                                                          | Yes                    | row col-md-12                        |\n| viewCssClasses       | The css classes to apply to each element for styling. These are used in view mode                                                                                                                                                                                                                          | Yes                    | row col-md-12                        |\n|        | A set of key value pairs containing messages to show to the user                                                                                                                                                                                                                                           | Yes                    | \"saveSuccess\": \"Saved successfully.\" |\nField configuration\nThe fields section lays out the components to appear in the form.\n| Field      | Description                                                                                   | Required               | Example |\n|------------|-----------------------------------------------------------------------------------------------|------------------------|---------|\n| class      |                                                                                               | Yes                    |         |\n| compClass  |  The Component class name. See the Component documentation for a list of available components and how to configure them | Yes                    |   TextBlockComponent      |\n| viewOnly   | When set to true, this component will only appear in the view (details) rendition of the form | No (defaults to false) | true    |\n| editOnly   | When set to true, this component will only appear in the edit (details) rendition of the form | No (defaults to false) | true    |\n| definition | Configuration that is specific for the component being added. How to configure a component is described in the Component documentation  | Yes                    |  value: '@dmpt-data-collection-heading' |\nExample\nfields: [\n  {\n    class: 'Container',\n    compClass: 'TextBlockComponent',\n    viewOnly: true,\n    definition: {\n      name: 'title',\n      type: 'h1'\n    }\n  },\nLanguage Configuration\nMessages in the system can be configured using Language files. This allows for internationalisation of the portal as well as editing in a translation management system such as Locize.\nThe application uses i18next to render the messages and the language files are kept in the assests/locales/ directories.\nPlease see the i18next documentation for more information on how the language file is structured and it's features.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-email-notifications.html":{"url":"additional-documentation/configuration-guide/configuring-email-notifications.html","title":"additional-page - Configuring email notifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring email notifications\nIntroduction\nThe ReDBox portal has a flexible email notification system that can be customised to your needs.\nConfiguring Email Settings\nThe config/emailnotification.js file provides configuration properties relating to the sending of emails.\napi\n|\n|- send\n|\nsettings\n|\n|- enabled\n|\n|- from\n|\n|- templateDir\n|\ndefaults\n|\n|- from\n|\n|- subject\n|\n|- format\n|\ntemplates\n|\n|- \n    |\n    |- subject\n    |\n    |- template\n|\nWhere <> are property labels that are variables.\n| Field            | Description                                                                                                                                                                              | Required | Example        |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------------|\n| api/send    | The url and HTTP method of the API endpoint to send emails (via ReDBox)| Yes      | N/A           |\n| settings    | Section used to capture email notification settins  | Yes      | N/A           |\n| settings/enabled    | Whether email notifications are enabled | Yes      | true         |\n| settings/from    | The from address to use when sending emails | Yes      | noreply@redboxresearchdata.com.au         |\n| settings/templateDir    | The template directory that contains the email template files | Yes      | views/emailTemplates/        |\n| defaults   | Section used to capture default properties for emails (when not otherwise set) | Yes      | N/A          |\n| defaults/from    | The default from address | Yes      | redbox@redboxresearchdata.com.au             |\n| defaults/subject    | The default from email subject | Yes      | A notification from ReDBox         |\n| defaults/format    | The email format, can either be in HTML or plain text | Yes      | html         |\nExample\napi: {\n  send: {method: 'post', url: \"/api/v1/messaging/emailnotification\"}\n},\nsettings: {\n  enabled: true,\n  from: \"noreply@redbox\",\n  templateDir: \"views/emailTemplates/\"\n},\ndefaults: {\n  from: \"redbox@dev\",\n  subject: \"ReDBox Notification\",\n  format: \"html\"\n},\nCustomising Email Templates\nThe both the subjects and the contents of email notifications can be customised via configuration and templates.\nConfiguring email subjects and templates\nThe templates section of the config/emailnotification.js file contains configuration to customise the subject and template for an email notification\n\n|\n|- subject\n|\n|- template\n|\n| Field            | Description                                                                                                                                                                              | Required | Example        |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------------|\n|     | The email code used by the application to find the configuration to trigger an email | Yes      | transferOwnerTo           |\n| /subject    | The email's subject | Yes      | Ownership of DMP record/s has been transferred to you |\n| /template    | The template file (located in the directory specified in the settings/templateDir property) to use to render the contents | Yes      | transferOwnerTo |\nExample\ntemplates: {\n  transferOwnerTo: {subject: 'Ownership of DMP record/s has been transferred to you', template: 'transferOwnerTo'}\n}\nEmail Templates\nEmail templates are located in the directory defined in the settings/templateDir property of the config/emailnotification.js files. They are written in the EJS templating language which allows for rich and complex formatting.\nExample\n```\nHello!\nThis is a test email from ReDBox Portal\nData: \n```\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{"url":"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html","title":"additional-page - Configuring integration with RedBox and Mint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring integration with ReDBox and Mint\nIntroduction\nFor record management, the ReDBox portal utilises the APIs provided by both the ReDBox and Mint applications.\nConfiguring API access\nThe config/record.js file provides configuration properties to set the URLs the services can be accessed on as well as the API endpoints.\nbaseUrl\n|\n|- redbox\n|\n|- mint\n|\napi\n|\n|- \n     |\n     |- method\n     |\n     |- url\nWhere <> are property labels that are variables.\n| Field            | Description                                                                                                                                                                              | Required | Example        |\n|------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|----------------|\n| baseUrl    | Section used to capture the base URLs for ReDBox and Mint to reduce duplication of variables and easier cross environment configuration | Yes      | N/A           |\n| baseUrl/redbox    | The base url for the ReDBox instance the portal is integrating with. | Yes      | http://localhost:9000/redbox           |\n| baseUrl/mint    | The base url for the Mint instance the portal is integrating with. | Yes      | http://localhost:9001/mint          |\n| api    | Section used to capture the api endpoints for ReDBox and Mint | Yes      | N/A           |\n| api/    | The API action that is being configured. Can be one of create, search, getMeta, updateMeta and harvest. | Yes      | create        |\n| api//method    | The HTTP method used by the API end point | Yes      | get          |\n| api//url    | The url for the API endpoint | Yes      | /api/v1/object/$packageType          |\nExample\nbaseUrl: {\n    redbox: \"http://localhost:9000/redbox\",\n    mint: \"http://localhost:9001/mint\"\n  },\n  api: {\n    create: {method: 'post', url: \"/api/v1/object/$packageType\"},\n    search: {method: 'get', url: \"/api/v1/search\"},\n    getMeta: {method: 'get', url: \"/api/v1/recordmetadata/$oid\"},\n    updateMeta: {method: 'post', url: \"/api/v1/recordmetadata/$oid\"},\n    harvest: {method: 'post', url:\"/api/v1.1/harvest/$packageType\"}\n  }\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-authentication.html":{"url":"additional-documentation/configuration-guide/configuring-authentication.html","title":"additional-page - Configuring authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring AAF\nIntroduction\nThe ReDBox portal is compatible out of the box with AAF Credentials.\nConfiguring\nThe config/env/development.js or config/env/production.js file provides the configuration objects for authorisation\nauth: {\n    // Default brand...\n    default: {\n      active: [\"aaf\", \"local\"],\n      aaf: {\n        loginUrl: \"https://rapid.test.aaf.edu.au/jwt/authnrequest/research/XXXXXX\",\n        opts: {\n          secretOrKey: 'XXXXXX',\n          jsonWebTokenOptions: {\n            issuer: 'https://rapid.test.aaf.edu.au',\n            audience: 'https://dev-redbox.research.uts.edu.au/default/rdmp/',\n            ignoreNotBefore: true\n          }\n        }\n      }\n    }\n  }\n\nProceed to https://rapid.test.aaf.edu.au for test environments and https://rapid.aaf.edu.au for production environments\nRegister a new service\nThe Callback URL should be /user/login_aaf\n\n\nIf it is a development environment a unique url will be automatically provided\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rest-api-documentation.html":{"url":"additional-documentation/rest-api-documentation.html","title":"additional-page - REST API documentation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nREST API\nDocumentation available here\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
